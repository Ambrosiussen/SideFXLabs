{
	"submitter" : "Paul Ambrosiussen",

	"settings" : {
	"directory" : "$SIDEFXLABS/automation/unittest/",
	"houdini_version" : "18.0"
	},

	"geometry_tests" : [

		{
		"description" : "Attribute Value Replace - Replace attribute values",
		"file" : "$SIDEFXLABS/hip/attribute_value_replace_demoscene.hip",
		"output" : "/obj/geo1/attribute_value_replace1",
		"frames" : [1,1]
		},

		{
		"description" : "Axis Align - Align along axis",
		"file" : "$SIDEFXLABS/hip/axis_align_demoscene.hip",
		"output" : "/obj/geo1/sop_axis_align1",
		"frames" : [1,1]
		},

		{
		"description" : "Box Clip - Clip geometry on multiple axes",
		"file" : "$SIDEFXLABS/hip/boxclip_demoscene.hip",
		"output" : "/obj/geo1/sop_box_clip1",
		"frames" : [1,1]
		},

		{
		"description" : "Box Cutter - Cut boxes out of geometry",
		"file" : "$SIDEFXLABS/hip/boxcutter_demoscene.hip",
		"output" : "/obj/geo1/boxcutter1",
		"frames" : [1,1]
		},

		{
		"description" : "Calculate Occlusion - Calculate occlusion between objects",
		"file" : "$SIDEFXLABS/hip/calculate_occlusion_demoscene.hip",
		"output" : "/obj/geo1/sop_calculate_occlusion1",
		"frames" : [1,1]
		},

		{
		"description" : "Calculate Slope - Calculate slope of geometry",
		"file" : "$SIDEFXLABS/hip/calculate_slope_demoscene.hip",
		"output" : "/obj/geo1/sop_calculate_slope1",
		"frames" : [1,1]
		},

		{
		"description" : "Color Adjustment - Adjust color information",
		"file" : "$SIDEFXLABS/hip/color_adjustment_demoscene.hip",
		"output" : "/obj/geo1/sop_color_adjustment1",
		"frames" : [1,1]
		},

		{
		"description" : "Color Blend - Blend between color values",
		"file" : "$SIDEFXLABS/hip/color_adjustment_demoscene.hip",
		"output" : "/obj/geo1/sop_color_blend1",
		"frames" : [1,1]
		},

		{
		"description" : "Color Gradient - gradient along axis or from attribute",
		"file" : "$SIDEFXLABS/hip/color_adjustment_demoscene.hip",
		"output" : "/obj/geo1/sop_color_gradient1",
		"frames" : [1,1]
		},

		{
		"description" : "Curve Branches - create branching structures",
		"file" : "$SIDEFXLABS/hip/curve_branches_demoscene.hip",
		"output" : "/obj/geo1/sop_curve_branches3",
		"frames" : [1,1]
		},

		{
		"description" : "Curve Sweep - sweep profile along curve",
		"file" : "$SIDEFXLABS/hip/curve_sweep_demoscene.hip",
		"output" : "/obj/geo1/sop_curve_sweep1",
		"frames" : [1,1]
		},

		{
		"description" : "Dirtskirt - generate dirtskirt geometry at object intersection",
		"file" : "$SIDEFXLABS/hip/dirt_skirt_demoscene.hip",
		"output" : "/obj/sphere1/sop_dirtskirt1",
		"frames" : [1,1]
		},

		{
		"description" : "Dissolve Flat Edges - remove edges on flat surfaces",
		"file" : "$SIDEFXLABS/hip/dissolve_flat_edges_demoscene.hip",
		"output" : "/obj/geo1/sop_dissolve_flat_edges1",
		"frames" : [1,1]
		},

		{
		"description" : "Distance from Border - calculate distance from open edge",
		"file" : "$SIDEFXLABS/hip/distance_from_border_demoscene.hip",
		"output" : "/obj/geo1/distance_from_border1",
		"frames" : [1,1]
		},

		{
		"description" : "Edge Color - mask geometry edge by color",
		"file" : "$SIDEFXLABS/hip/edge_color_demoscene.hip",
		"output" : "/obj/box1/sop_edge_color1",
		"frames" : [1,1]
		},

		{
		"description" : "Edge Group to Curve - generate curves from edge selection",
		"file" : "$SIDEFXLABS/hip/edge_group_to_curve_demoscene.hip",
		"output" : "/obj/geo1/sop_edgegroup_to_curve1",
		"frames" : [1,1]
		},

		{
		"description" : "Extract Borders - generate curves from geometry borders",
		"file" : "$SIDEFXLABS/hip/extract_borders_demoscene.hip",
		"output" : "/obj/geo1/sop_extract_borders1",
		"frames" : [1,1]
		},

		{
		"description" : "Extract Filename - write file path and name to attributes",
		"file" : "$SIDEFXLABS/hip/extract_filename_demoscene.hip",
		"output" : "/obj/geo1/extract_filename1",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Fire Presets - preset fire simulations",
		"file" : "$SIDEFXLABS/hip/fire_presets_demoscene.hip",
		"output" : "/obj/fire_presets",
		"frames" : [20,30]
		},

		{
		"description" : "Gas Flame Front - fire simulation consuming gas",
		"file" : "$SIDEFXLABS/hip/flamefront_demoscene.hip",
		"output" : "/obj/testgeometry_rubbertoy1/pyropostprocess1",
		"frames" : [20,30]
		},

		{
		"description" : "Flowmap - generate flowmap along and around objects",
		"file" : "$SIDEFXLABS/hip/flowmap_demoscene.hip",
		"output" : "/obj/geo1/sop_flowmap_visualize1",
		"frames" : [1,10]
		},

		{
		"description" : "Gameres - create game ready geometry from highpoly",
		"file" : "$SIDEFXLABS/hip/gameres_demoscene.hip",
		"output" : "/obj/geo1/gameres1",
		"frames" : [1,1]
		},

		{
		"description" : "Group by Measure - group polygons by eccentricity",
		"file" : "$SIDEFXLABS/hip/group_by_measure_demoscene.hip",
		"output" : "/obj/box1/group_by_measure1",
		"frames" : [1,1]
		},

		{
		"description" : "Group Curve Corners - group cornder points",
		"file" : "$SIDEFXLABS/hip/group_curve_corners_demoscene.hip",
		"output" : "/obj/geo1/sop_group_curve_corners1",
		"frames" : [1,1]
		},

		{
		"description" : "HF Combine Masks - merge heightfield masks",
		"file" : "$SIDEFXLABS/hip/hf_combine_masks_demoscenes.hip",
		"output" : "/obj/heightfield1/hf_combine_masks1",
		"frames" : [1,1]
		},

		{
		"description" : "HF Insert Mask - merge heightfield masks",
		"file" : "$SIDEFXLABS/hip/hf_insert_mask_demoscene.hip",
		"output" : "/obj/geo1/heightfield_visualize1",
		"frames" : [1,1]
		},

		{
		"description" : "Instant Meshes - generate full quad topology on object",
		"file" : "$SIDEFXLABS/hip/instantmeshes_demoscene.hip",
		"output" : "/obj/geo1/sop_instant_meshes1",
		"frames" : [1,1]
		},

		{
		"description" : "Lot Subdivision - randomly subdivide planar geometry",
		"file" : "$SIDEFXLABS/hip/lot_subdivision_demoscene.hip",
		"output" : "/obj/geo1/sop_lot_subdivision1",
		"frames" : [1,1]
		},

		{
		"description" : "Make Loop - make animation a seamless loop",
		"file" : "$SIDEFXLABS/hip/make_loop_demoscene.hip",
		"output" : "/obj/looping_pops/make_loop1",
		"frames" : [1,1]
		},

		{
		"description" : "Measure Curvature - calculate curvature of geometry",
		"file" : "$SIDEFXLABS/hip/measure_curvature_demoscene.hip",
		"output" : "/obj/testgeometry_crag1/measure_curvarture1",
		"frames" : [1,1]
		},

		{
		"description" : "Merge Small Islands - combine small uv islands into larger islands",
		"file" : "$SIDEFXLABS/hip/merge_small_islands_demoscene.hip",
		"output" : "/obj/geo1/sop_merge_small_islands1",
		"frames" : [1,1]
		},

		{
		"description" : "Mesh Slice - slice mesh along 3D grid",
		"file" : "$SIDEFXLABS/hip/mesh_slice_demoscene.hip",
		"output" : "/obj/geo1/mesh_slice1",
		"frames" : [1,1]
		},

		{
		"description" : "Mesh Tiler - create tileable geometry",
		"file" : "$SIDEFXLABS/hip/mesh_tiler_demoscene.hip",
		"output" : "/obj/Example/mesh_tiler",
		"frames" : [1,1]
		},

		{
		"description" : "Min Max Average - calculate min max and average of attribute",
		"file" : "$SIDEFXLABS/hip/min_max_average_demoscenehip.hip",
		"output" : "/obj/testgeometry_rubbertoy1/sop_min_max_average1",
		"frames" : [1,1]
		},

		{
		"description" : "Multi Bounding Box - create bounding box with resolution",
		"file" : "$SIDEFXLABS/hip/multi_bounding_box_demoscene.hip",
		"output" : "/obj/testgeometry_squab1/multi_bounding_box1",
		"frames" : [1,1]
		},

		{
		"description" : "Path Deform - deform object along path",
		"file" : "$SIDEFXLABS/hip/path_deform_demoscene.hip",
		"output" : "/obj/geo1/sop_path_deform1",
		"frames" : [1,10]
		},

		{
		"description" : "Physics Painter - scatter objects and drop them on terrain",
		"file" : "$SIDEFXLABS/hip/physics_painter_demoscene.hip",
		"output" : "/obj/PhysicsPainter/physics_painter1",
		"frames" : [1,10]
		},

		{
		"description" : "Pick and Place - place and scale objects on other objects",
		"file" : "$SIDEFXLABS/hip/pick_and_place_demoscene.hip",
		"output" : "/obj/geo1/pick_and_place1",
		"frames" : [1,1]
		},

		{
		"description" : "Progressive Resample - resample line with density by attribute",
		"file" : "$SIDEFXLABS/hip/progressive_resample_demoscene.hip",
		"output" : "/obj/geo1/progressive_resample2",
		"frames" : [1,1]
		},

		{
		"description" : "Quadrangulate - create quads from tris",
		"file" : "$SIDEFXLABS/hip/quadrangulate_demoscene.hip",
		"output" : "/obj/testgeometry_pighead1/sop_quadrangulate1",
		"frames" : [1,1]
		},

		{
		"description" : "Quick Material - quickly set material attributes",
		"file" : "$SIDEFXLABS/hip/quick_material_demoscene.hip",
		"output" : "/obj/geo1/sop_quickmaterial1",
		"frames" : [1,1]
		},

		{
		"description" : "RBD Edge Strip - make strips at cracks in voronoi fracture",
		"file" : "$SIDEFXLABS/hip/rbd_edge_strip_demoscene.hip",
		"output" : "/obj/rbd_edge_strip_example/rbd_edge_strip",
		"frames" : [1,1]
		},

		{
		"description" : "Remove Inside Faces - remove faces inside another object",
		"file" : "$SIDEFXLABS/hip/remove_insidefaces_demoscene.hip",
		"output" : "/obj/geo1/sop_remove_inside_faces1",
		"frames" : [1,1]
		},

		{
		"description" : "Retime - retime an animation or simulation",
		"file" : "$SIDEFXLABS/hip/retime_demoscene.hip",
		"output" : "/obj/geo1/retime2",
		"frames" : [10,20]
		},

		{
		"description" : "SciFi Panel - generate paneling on geometry",
		"file" : "$SIDEFXLABS/hip/scifi_panel_demoscene.hip",
		"output" : "/obj/geo1/sop_scifi_panels1",
		"frames" : [1,1]
		},

		{
		"description" : "Sine Wave - generate sine wave",
		"file" : "$SIDEFXLABS/hip/sine_wave_demoscene.hip",
		"output" : "/obj/grid1/sine_wave1",
		"frames" : [1,1]
		},

		{
		"description" : "Skinning Converter - convert simulation to bones",
		"file" : "$SIDEFXLABS/hip/skinning_converter_demoscene.hip",
		"output" : "/obj/grid1/skinning_converter1",
		"frames" : [10,20]
		},

		{
		"description" : "Spiral - create a spiraling curve",
		"file" : "$SIDEFXLABS/hip/spiral_demoscene.hip",
		"output" : "/obj/geo1/sop_spiral1",
		"frames" : [1,1]
		},

		{
		"description" : "Star - create a star shape",
		"file" : "$SIDEFXLABS/hip/star_demoscene.hip",
		"output" : "/obj/Example/star1",
		"frames" : [1,1]
		},

		{
		"description" : "Straighten - align geometry based on axis groups",
		"file" : "$SIDEFXLABS/hip/straighten_demoscene.hip",
		"output" : "/obj/geo1/sop_straighten1",
		"frames" : [1,1]
		},

		{
		"description" : "Thicken - extrude flat surfaces",
		"file" : "$SIDEFXLABS/hip/thicken_demoscene.hip",
		"output" : "/obj/grid1/sop_thicken1",
		"frames" : [1,1]
		},

		{
		"description" : "Trim Texture - layout object on trim sheet",
		"file" : "$SIDEFXLABS/hip/trim_texture_demoscene.hip",
		"output" : "/obj/grid1/automatic_trim_texture1",
		"frames" : [1,1]
		},

		{
		"description" : "Triplanar Displace - triplanar project displacement map",
		"file" : "$SIDEFXLABS/hip/triplanar_displace_demoscene.hip",
		"output" : "/obj/geo1/triplanar_displace1",
		"frames" : [1,1]
		},

		{
		"description" : "Turntable - animate object turning",
		"file" : "$SIDEFXLABS/hip/turntable_demoscene.hip",
		"output" : "/obj/geo1/sop_turntable1",
		"frames" : [1,10]
		},

		{
		"description" : "UV Transfer - transfer UVs from one mesh to another",
		"file" : "$SIDEFXLABS/hip/uv_transfer_demoscene.hip",
		"output" : "/obj/geo1/sop_uv_transfer1",
		"frames" : [1,1]
		},

		{
		"description" : "UV Unitize - fit each polygon's UV into 0-1 UV space",
		"file" : "$SIDEFXLABS/hip/uv_unitize_demoscene.hip",
		"output" : "/obj/tube1/sop_uv_unitize1",
		"frames" : [1,1]
		},

		{
		"description" : "UV Visualize - visualize UVs in the 3D viewport",
		"file" : "$SIDEFXLABS/hip/uv_visualize_demoscene.hip",
		"output" : "/obj/geo1/sop_visualize_uvs1",
		"frames" : [1,1]
		},

		{
		"description" : "Voxelmesh - convert geometry to vdb and back to polygons",
		"file" : "$SIDEFXLABS/hip/voxelmesh_demoscene.hip",
		"output" : "/obj/geo1/sop_voxelmesh1",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "RBD Fracture - voronoi fracture geometry with convenience features",
		"file" : "$SIDEFXLABS/hip/sop_rbd_fracture_demoscene.hip",
		"output" : "/obj/sop_rbd_fracture_example/sop_rbd_fracture1",
		"frames" : [1,1]
		},

		{
		"description" : "Splatter - throw particles on grid and input mesh",
		"file" : "$SIDEFXLABS/hip/splatter_demoscene.hip",
		"output" : "/obj/splatter_scalar_demo/splatter1",
		"frames" : [15,25]
		},

		{
		"description" : "Cylinder Generator - generate cylindrical shapes",
		"file" : "$SIDEFXLABS/hip/cylinder_generator_demoscene.hip",
		"output" : "/obj/sop_cylinder_generator_example/stamen1_cylinder",
		"frames" : [1,1]
		},

		{
		"description" : "Disc Generator - generate disc shapes",
		"file" : "$SIDEFXLABS/hip/disc_generator_demoscene.hip",
		"output" : "/obj/sop_disc_generator_example/sop_disc_generator2",
		"frames" : [1,1]
		},

		{
		"description" : "Lightning - create lightning geometry",
		"file" : "$SIDEFXLABS/hip/lightning_demoscene.hip",
		"output" : "/obj/Core/lightning1",
		"frames" : [1,1]
		},

		{
		"description" : "Polydeform - deform geometry into other shapes",
		"file" : "$SIDEFXLABS/hip/polydeform_demoscene.hip",
		"output" : "/obj/geo1/polydeform2",
		"frames" : [1,1]
		},

		{
		"description" : "Road Generator - generate roads from curves",
		"file" : "$SIDEFXLABS/hip/road_generator_demoscene.hip",
		"output" : "/obj/OSM_City/road_generator1",
		"frames" : [1,1]
		},

		{
		"description" : "OSM Nodes - generate city from OSM data",
		"file" : "$SIDEFXLABS/hip/road_generator_demoscene.hip",
		"output" : "/obj/OSM_City/osm_buildings1",
		"frames" : [1,1]
		},

		{
		"description" : "Sphere Generator - create a polygon sphere",
		"file" : "$SIDEFXLABS/hip/sphere_generator_demoscene.hip",
		"output" : "/obj/sphere_generator_example/sphere_generator4",
		"frames" : [1,1]
		},

		{
		"description" : "Wang Tiles Sample - wang tile presets",
		"file" : "$SIDEFXLABS/hip/wang_tiles_demoscene.hip",
		"output" : "/obj/geo1/wang_tiles_sample1",
		"frames" : [1,1]
		},

		{
		"description" : "WFC Init and Wang Tiles Decoder - create level with preset wang tiles and WFC",
		"file" : "$SIDEFXLABS/hip/wang_tiles_demoscene.hip",
		"output" : "/obj/geo1/wang_tiles_decoder1",
		"frames" : [1,1]
		},

		{
		"description" : "Unreal Pivot Painter - bake pivots",
		"file" : "$SIDEFXLABS/hip/pivot_painter_demoscene.hip",
		"output" : "/obj/geo1/unreal_pivotpainter1",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Matcap Shader - set matcap material",
		"file" : "$SIDEFXLABS/hip/matcap_shader_demoscene.hip",
		"output" : "/obj/testgeometry_rubbertoy1/matnet1/mat_matcap_shader1",
		"frames" : [1,1]
		},

		{
		"description" : "Soften Normals - set surface normal angle",
		"file" : "$SIDEFXLABS/hip/maps_baker_demoscene.hip",
		"output" : "/obj/geo1/soften_normals1",
		"frames" : [1,1]
		},

		{
		"description" : "Extract Silhouette - generate silhouette of geo as flat geo",
		"file" : "$SIDEFXLABS/hip/extract_silhouette_demoscene.hip",
		"output" : "/obj/geo1/extract_silhouette",
		"frames" : [1,1]
		},

		{
		"description" : "Extract Silhouette - generate contours of geo as curves",
		"file" : "$SIDEFXLABS/hip/extract_silhouette_demoscene.hip",
		"output" : "/obj/geo1/extract_contour",
		"frames" : [1,1]
		},

		{
		"description" : "Mesh Sharpen - move loops towards edge of mesh, sharpening it",
		"file" : "$SIDEFXLABS/hip/mesh_sharpen_demoscene.hip",
		"output" : "/obj/geo1/mesh_sharpen1",
		"frames" : [1,1]
		},

		{
		"description" : "Repair - Delete and re-generate polygons",
		"file" : "$SIDEFXLABS/hip/repair_demoscene.hip",
		"output" : "/obj/geo1/repair1",
		"frames" : [1,1]
		},

		{
		"description" : "Split Primitive by Normal - split geometry by axis direction",
		"file" : "$SIDEFXLABS/hip/split_prim_by_normal_demoscene.hip",
		"output" : "/obj/geo1/split_prim_by_normal1",
		"frames" : [1,1]
		},

		{
		"description" : "Symmetrize - mirror geometry across an axis",
		"file" : "$SIDEFXLABS/hip/symmetrize_demoscene.hip",
		"output" : "/obj/geo1/symmetrize1",
		"frames" : [1,1]
		},

		{
		"description" : "Straight Skeleton 2D - generate a center curve from a flat mesh",
		"file" : "$SIDEFXLABS/hip/straight_skeleton_2d_demoscene.hip",
		"output" : "/obj/geo1/straight_skeleton_2D1",
		"frames" : [1,1]
		},

		{
		"description" : "Straight Skeleton 3D - generate a center curve from a 3D mesh",
		"file" : "$SIDEFXLABS/hip/straight_skeleton_3d_demoscene.hip",
		"output" : "/obj/geo1/straight_skeleton_3d1",
		"frames" : [1,1]
		},

		{
		"description" : "Building Generator Utility - prepare modules for use with building generator",
		"file" : "$SIDEFXLABS/hip/building_gen_demoscene.hip",
		"output" : "/obj/box1/building_generator_utility5",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Building Generator - construct buildings from prebuilt modules",
		"file" : "$SIDEFXLABS/hip/building_gen_demoscene.hip",
		"output" : "/obj/box1/building_generator4",
		"frames" : [1,1]
		}

    ],

    "rop_tests" : [

		{
		"description" : "Demosaic - create singular images from mosaic tiles",
		"file" : "$SIDEFXLABS/hip/demosaic_demoscene.hip",
		"output" : "/img/comp1/demosaic1",
		"outputfileparm" : "",
		"outputfileparmpattern" : "$F.png",
		"renderbutton" : "",
		"frames" : [1,1]
		},

		{
		"description" : "Grid Texture - generate resolution based checker texture",
		"file" : "$SIDEFXLABS/hip/grid_texture_demoscene.hip",
		"output" : "/obj/geo1/cop2net1/grid_texture2",
		"outputfileparm" : "",
		"outputfileparmpattern" : "$F.png",
		"renderbutton" : "",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Impostor - create imposter texture from geometry",
		"file" : "$SIDEFXLABS/hip/impostor_demoscene.hip",
		"output" : "/out/toy_impostor",
		"outputfileparm" : "output_sequence",
		"outputfileparmpattern" : "$OS.$F.png",
		"renderbutton" : "execute",
		"frames" : [10,20]
		},

		{
		"disabled" : 1,
		"description" : "Impostor - create imposter texture from geometry",
		"file" : "$SIDEFXLABS/hip/impostor_demoscene.hip",
		"output" : "/out/puff_ball_impostor",
		"outputfileparm" : "output_sequence",
		"outputfileparmpattern" : "$OS.$F.png",
		"renderbutton" : "execute",
		"frames" : [10,20]
		},

		{
		"disabled" : 1,
		"description" : "Impostor - create imposter texture from geometry",
		"file" : "$SIDEFXLABS/hip/impostor_demoscene.hip",
		"output" : "/out/animation_impostor",
		"outputfileparm" : "output_sequence",
		"outputfileparmpattern" : "$OS.$F.png",
		"renderbutton" : "execute",
		"frames" : [10,20]
		},

		{
		"disabled" : 1,
		"description" : "Marmoset Export - render with marmoset",
		"file" : "$SIDEFXLABS/hip/marmoset_toolbag_demoscene.hip",
		"output" : "/obj/ropnet1/rop_marmoset_export1",
		"outputfileparm" : "vm_picture",
		"outputfileparmpattern" : "$HIPNAME.$F.png",
		"renderbutton" : "btnRenderImage",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Niagara ROP - output simulation data to be used in UE Niagara",
		"file" : "$SIDEFXLABS/hip/niagara_rop_demoscene.hip",
		"output" : "/obj/niagara_rop_example/niagara1",
		"outputfileparm" : "outputpath",
		"outputfileparmpattern" : "$OS.$F.hbjson",
		"renderbutton" : "execute",
		"frames" : [1,10]
		},

		{
		"description" : "Normal Combine - merge normal maps",
		"file" : "$SIDEFXLABS/hip/normal_combine_demoscene.hip",
		"output" : "/img/img1/normal_combine1",
		"outputfileparm" : "",
		"outputfileparmpattern" : "$F.png",
		"renderbutton" : "",
		"frames" : [1,1]
		},

		{
		"description" : "Normal COPs - normal map operations",
		"file" : "$SIDEFXLABS/hip/normal_cops_demoscene.hip",
		"output" : "/img/img1/cop_normal_normalize1",
		"outputfileparm" : "",
		"outputfileparmpattern" : "$F.png",
		"renderbutton" : "",
		"frames" : [1,1]
		},

		{
		"description" : "Normal Map - create normal map from alpha",
		"file" : "$SIDEFXLABS/hip/normalmap.hip",
		"output" : "/img/img1/normal_map2",
		"outputfileparm" : "",
		"outputfileparmpattern" : "$F.png",
		"renderbutton" : "",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "RBD to FBX - export RBD sim to FBX",
		"file" : "$SIDEFXLABS/hip/rbd_to_fbx_demoscene.hip",
		"output" : "/obj/ropnet1/rbd_to_fbx1",
		"outputfileparm" : "export_path",
		"outputfileparmpattern" : "${HIPNAME}.$F.fbx",
		"renderbutton" : "execute",
		"frames" : [1,10]
		},

		{
		"disabled" : 1,
		"description" : "Dembones Skinning Converter - export simulation to bones",
		"file" : "$SIDEFXLABS/hip/skinning_converter_demoscene.hip",
		"output" : "/obj/grid1/dembones_skinningconverter1",
		"outputfileparm" : "sExportFile",
		"outputfileparmpattern" : "${HIPNAME}_Converted.$F.fbx",
		"renderbutton" : "execute",
		"frames" : [10,20]
		},

		{
		"disabled" : 1,
		"description" : "Terrain Segment ROP - export heightfield as geo in tiles",
		"file" : "$SIDEFXLABS/hip/terrain_convert_demoscene.hip",
		"output" : "/obj/heightfield1/sop_terrain_segment_rop1",
		"outputfileparm" : "sopoutput",
		"outputfileparmpattern" : "TerrainChunk.$F.bgeo.sc",
		"renderbutton" : "parm",
		"frames" : [1,1]
		},

		{
		"disabled" : 1,
		"description" : "Terrain Texture ROP - export heightfield as texture in tiles",
		"file" : "$SIDEFXLABS/hip/terrain_convert_demoscene.hip",
		"output" : "/obj/heightfield1/sop_terrain_texture_rop1",
		"outputfileparm" : "copoutput",
		"outputfileparmpattern" : "Terrain_H.$F.tga",
		"renderbutton" : "execute",
		"frames" : [1,1]
		},

		{
		"description" : "Texture Sheets ROP - export simulation as sprite sheet",
		"file" : "$SIDEFXLABS/hip/texture_sheets_demoscene.hip",
		"output" : "/obj/texture_sheets_ropnet/rop_texture_sheets1",
		"outputfileparm" : "assetname",
		"outputfileparmpattern" : "$OS.$F.png",
		"renderbutton" : "force_render",
		"frames" : [1,10]
		},

		{
		"description" : "Volume Texture - output volume slices as texture sheet",
		"file" : "$SIDEFXLABS/hip/volume_texture_demoscene.hip",
		"output" : "/obj/geo1/volume_texture1",
		"outputfileparm" : "output_picture",
		"outputfileparmpattern" : "${OS}.$F.exr",
		"renderbutton" : "render",
		"frames" : [1,1]
		}

    ]

}
