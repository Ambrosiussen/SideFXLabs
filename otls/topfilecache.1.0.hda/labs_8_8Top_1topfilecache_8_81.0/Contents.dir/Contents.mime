MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Top

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::topfilecache::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

comment ""
position -2.51176 1.74706
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -2.0816681711721685e-16 9.9945454545454542 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1.init"
Content-Type: text/plain

type = ropgeometry
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1.def"
Content-Type: text/plain

comment ""
position -0.5 -17.3015
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch2 1 1 "input1"
}
inputs
{
0 	switch2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f2\") }
    }
    channel soppath {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../soppath\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../f3\") / ch(\"../substeps\")" }
    }
    channel framesperbatch {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      start = 41.666666666666664
      segment { length = 0 value = 10 10 expr = ch(\"../framesperbatch\") }
    }
    channel initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../initsim\") }
    }
    channel batchall {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../cachesim\") || !ch(\"../timedependent\")" }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../trange\")>0 }
    }
    channel sethip {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../sethip\") }
    }
    channel savedebughip {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../savebackuphip\") }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tprerender\") }
    }
    channel prerender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../prerender\") }
    }
    channel lprerender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lprerender\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpreframe\") }
    }
    channel preframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../preframe\") }
    }
    channel lpreframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpreframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpostframe\") }
    }
    channel postframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../postframe\") }
    }
    channel lpostframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpostframe\") }
    }
    channel tpostwrite {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpostwrite\") }
    }
    channel postwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../postwrite\") }
    }
    channel lpostwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpostwrite\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpostrender\") }
    }
    channel postrender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../postrender\") }
    }
    channel lpostrender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpostrender\") }
    }
    channel alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../alfprogress\") }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../saveretry\") }
    }
    channel enablepdgservice {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablepdgservice\") }
    }
    channel pdgservicename {
      lefttype = extend
      righttype = extend
      defaultString = \"ropfetch\"
      flags = 0
      segment { length = 0 expr = chs(\"../pdgservicename\") }
    }
    channel enableperfmon {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enableperfmon\") }
    }
    channel topscheduler {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../topscheduler\") }
    }
    channel pdg_workitempriorityexpr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pdg_workitempriorityexpr\") }
    }
    channel pdg_cachemode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pdg_cachemode\") }
    }
    channel pdg_workitemgeneration {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../pdg_workitemgeneration\") }
    }
    channel framegeneration {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = "{
    if(ch(\"../timedependent\")==0) return 0;
    else return 2;
}" }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mkpath\") }
    }
    channel savebackground {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../savebackground\") }
    }
    channel cookwhen {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../cookwhen\") }
    }
    channel pdg_workitemlabel {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../pdg_workitemlabel\") }
    }
    channel pdg_workitemlabelexpr {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../pdg_workitemlabelexpr\") }
    }
    channel pdg_workitempriority {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../pdg_workitempriority\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1.parm"
Content-Type: text/plain

{
version 0.8
ropgeometry	[ 0	locks=0 ]	(	4	4	4	4	4	4	)
framegeneration	[ 8	locks=0 ]	(	[ framegeneration	0 ] 	)
useframeoverride	[ 0	locks=0 ]	(	"off"	)
frameoverride	[ 0	locks=0 ]	(	1	)
f	[ 0	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
singletask	[ 0	locks=0 ]	(	"off"	)
expandinputs	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
take	[ 0	locks=0 ]	(	_current_	)
usesoppath	[ 0	locks=0 ]	(	"on"	)
soppath	[ 0	locks=0 ]	(	[ soppath	"" ] 	)
sopoutput	[ 0	locks=0 ]	(	`chs(\"../sopoutput\")`	)
usefiletag	[ 0	locks=0 ]	(	"on"	)
filetag	[ 0	locks=0 ]	(	file/geo	)
xformtype	[ 0	locks=0 ]	(	"none"	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
initsim	[ 8	locks=0 ]	(	[ initsim	0 ] 	)
alfprogress	[ 0	locks=0 ]	(	[ alfprogress	0 ] 	)
reportnetwork	[ 0	locks=0 ]	(	"off"	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
savebackground	[ 0	locks=0 ]	(	[ savebackground	1 ] 	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	[ pdg_workitemgeneration	2 ] 	)
pdg_cachemode	[ 0	locks=0 ]	(	[ pdg_cachemode	0 ] 	)
sethip	[ 0	locks=0 ]	(	[ sethip	0 ] 	)
sepparm	[ 0	locks=0 ]	(	)
batchall	[ 8	locks=0 ]	(	[ batchall	0 ] 	)
framesperbatch	[ 0	locks=0 ]	(	[ framesperbatch	1 ] 	)
cookwhen	[ 0	locks=0 ]	(	[ cookwhen	0 ] 	)
setframes	[ 0	locks=0 ]	(	"off"	)
resumebatch	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
distribute	[ 0	locks=0 ]	(	"off"	)
control	[ 0	locks=0 ]	(	""	)
usetrackerport	[ 0	locks=0 ]	(	"off"	)
trackerport	[ 0	locks=0 ]	(	0	)
usewebport	[ 0	locks=0 ]	(	"off"	)
webport	[ 0	locks=0 ]	(	0	)
verbosetracker	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
slicetype	[ 0	locks=0 ]	(	"0"	)
slicecount	[ 0	locks=0 ]	(	2	)
slicedivs	[ 0	locks=0 ]	(	0	0	0	)
sepparm5	[ 0	locks=0 ]	(	)
debugging2	[ 0	locks=0 ]	(	1	)
enableperfmon	[ 8	locks=0 ]	(	[ enableperfmon	0 ] 	)
saveperffile	[ 0	locks=0 ]	(	"on"	)
perffile	[ 0	locks=0 ]	(	`chs(\"../perffile\")`	)
savedebughip	[ 0	locks=0 ]	(	[ savedebughip	0 ] 	)
debughip	[ 0	locks=0 ]	(	/mnt/Speedy_Sloth/Projects/FileCache/filecacheversioned1.debug.35.hip	)
debugoutputs	[ 0	locks=0 ]	(	"off"	)
tprerender	[ 0	locks=0 ]	(	[ tprerender	1 ] 	)
prerender	[ 0	locks=0 ]	(	[ prerender	"" ] 	)
lprerender	[ 0	locks=0 ]	(	[ lprerender	hscript ] 	)
tpreframe	[ 0	locks=0 ]	(	[ tpreframe	1 ] 	)
preframe	[ 0	locks=0 ]	(	[ preframe	"" ] 	)
lpreframe	[ 0	locks=0 ]	(	[ lpreframe	hscript ] 	)
tpostframe	[ 0	locks=0 ]	(	[ tpostframe	1 ] 	)
postframe	[ 0	locks=0 ]	(	[ postframe	"" ] 	)
lpostframe	[ 0	locks=0 ]	(	[ lpostframe	hscript ] 	)
tpostwrite	[ 0	locks=0 ]	(	[ tpostwrite	1 ] 	)
postwrite	[ 0	locks=0 ]	(	[ postwrite	"" ] 	)
lpostwrite	[ 0	locks=0 ]	(	[ lpostwrite	hscript ] 	)
tpostrender	[ 0	locks=0 ]	(	[ tpostrender	1 ] 	)
postrender	[ 0	locks=0 ]	(	[ postrender	"" ] 	)
lpostrender	[ 0	locks=0 ]	(	[ lpostrender	hscript ] 	)
execute	[ 0	locks=0 ]	(	0	)
executebackground	[ 0	locks=0 ]	(	0	)
trange	[ 8	locks=0 ]	(	[ trange	0 ] 	)
topscheduler	[ 0	locks=0 ]	(	[ topscheduler	"" ] 	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm6	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	[ pdg_workitemlabel	0 ] 	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	[ pdg_workitemlabelexpr	"" ] 	)
pdg_workitempriority	[ 0	locks=0 ]	(	[ pdg_workitempriority	2 ] 	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	[ pdg_workitempriorityexpr	0 ] 	)
enablepdgservice	[ 0	locks=0 ]	(	[ enablepdgservice	0 ] 	)
pdgservicename	[ 0	locks=0 ]	(	[ pdgservicename	ropfetch ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -4.05641 3.30907
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author nobody@nowhere.sidefx.com
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.parm"
Content-Type: text/plain

{
version 0.8
label1	[ 0	locks=0 ]	(	"Sub-Network Input #1"	)
label2	[ 0	locks=0 ]	(	"Sub-Network Input #2"	)
label3	[ 0	locks=0 ]	(	"Sub-Network Input #3"	)
label4	[ 0	locks=0 ]	(	"Sub-Network Input #4"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.inp"
Content-Type: text/plain

4
0 0 6 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
1 3 6.5 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
2 6 7 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
3 9 7.5 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/output1.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/output1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.841435 2.31824
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	incoming 0 1 "input1"
}
inputs
{
0 	incoming 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere.sidefx.com
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/output1.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/output1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/incoming.init"
Content-Type: text/plain

type = file
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/incoming.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.841435 3.85347
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author nobody@nowhere.sidefx.com
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/incoming.chn"
Content-Type: text/plain

{
    channel index {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FF-1 }
    }
    channel file {
      lefttype = extend
      righttype = extend
      defaultString = \"default.bgeo\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = @pdg_input }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/incoming.parm"
Content-Type: text/plain

{
version 0.8
filemode	[ 0	locks=0 ]	(	"read"	)
file	[ 8	locks=0	autoscope=1	autosel=4294967295 ]	(	[ file	default.bgeo ] 	)
reload	[ 0	locks=0 ]	(	0	)
objpattern	[ 0	locks=0 ]	(	*	)
geodatapath	[ 0	locks=0 ]	(	""	)
missingframe	[ 0	locks=0 ]	(	"error"	)
loadtype	[ 0	locks=0 ]	(	"full"	)
packedviewedit	[ 0	locks=0 ]	(	"unchanged"	)
viewportlod	[ 0	locks=0 ]	(	"box"	)
packexpanded	[ 0	locks=0 ]	(	"on"	)
delayload	[ 0	locks=0 ]	(	"off"	)
mkpath	[ 0	locks=0 ]	(	"on"	)
cachesize	[ 0	locks=0 ]	(	0	)
prefetch	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	1	24	)
index	[ 0	locks=0 ]	(	[ index	0 ] 	)
wrap	[ 0	locks=0 ]	(	"cycle"	)
retry	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s/incoming.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.order"
Content-Type: text/plain

2
output1
incoming

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ropgeometry1/s/s.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

comment ""
position -0.5 -2.99929
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch5 1 1 "input1"
1 	custom_wedge_process_v2 0 1 "input2"
}
inputs
{
0 	switch5 0 1
1 	custom_wedge_process_v2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

comment ""
position -0.5 -56.9122
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch_wait_on_collection 1 1 "input1"
}
inputs
{
0 	switch_wait_on_collection 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_wedgdes_mode.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_wedgdes_mode.def"
Content-Type: text/plain

comment ""
position 3.5 -35.9067
connectornextid 5
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	partitionbyframe1 1 1 "input1"
2 	filterbyrange1 1 1 "input2"
3 	filterbyexpression1 0 1 "input3"
4 	filterbyexpression1 0 1 "input4"
}
inputs
{
0 	partitionbyframe1 0 1
1 	filterbyrange1 0 1
2 	filterbyexpression1 0 1
3 	filterbyexpression1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_wedgdes_mode.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mergewedges\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_wedgdes_mode.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_wedgdes_mode.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbyframe1.init"
Content-Type: text/plain

type = partitionbyframe
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbyframe1.def"
Content-Type: text/plain

comment ""
position 3.5 -31.7249
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attributecreate_version 1 1 "input1"
}
inputs
{
0 	attributecreate_version 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbyframe1.parm"
Content-Type: text/plain

{
version 0.8
frame	[ 0	locks=0 ]	(	0	0	0	)
createpartitionsfor	[ 0	locks=0 ]	(	"0"	)
framerounding	[ 0	locks=0 ]	(	"0"	)
ignoremissing	[ 0	locks=0 ]	(	"on"	)
indexfromframe	[ 0	locks=0 ]	(	"off"	)
rangemissing	[ 0	locks=0 ]	(	"2"	)
rangeattribute	[ 0	locks=0 ]	(	range	)
isolate	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	wedgeindex	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
usewedgeattribute	[ 0	locks=0 ]	(	"off"	)
wedgeattribute	[ 0	locks=0 ]	(	wedgeindex	)
missingattribute	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbyframe1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"generic_delete"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode1.init"
Content-Type: text/plain

type = partitionbynode
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode1.def"
Content-Type: text/plain

comment ""
position 1.5 -39.9067
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_merge_wedges1 2 1 "input1"
}
inputs
{
0 	switch_merge_wedges1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode1.parm"
Content-Type: text/plain

{
version 0.8
node	[ 0	locks=0 ]	(	0	0	0	)
partitiontype	[ 0	locks=0 ]	(	"0"	)
usesortkey	[ 0	locks=0 ]	(	"off"	)
sortkey	[ 0	locks=0 ]	(	0	)
partialpartitions	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"generic_delete"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames_mode.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames_mode.def"
Content-Type: text/plain

comment ""
position 3.36845 -45.9789
connectornextid 5
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
2 	attributedelete1 1 1 "input1"
4 	partitionbynode2 1 1 "input2"
0 	filterbyexpression2 1 1 "input3"
3 	filterbyexpression2 1 1 "input4"
}
inputs
{
0 	attributedelete1 0 1
1 	partitionbynode2 0 1
2 	filterbyexpression2 0 1
3 	filterbyexpression2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames_mode.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mergeframes\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames_mode.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames_mode.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete1.init"
Content-Type: text/plain

type = attributedelete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete1.def"
Content-Type: text/plain

comment ""
position 1.36845 -43.4064
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	partitionbynode1 1 1 "input1"
}
inputs
{
0 	partitionbynode1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete1.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
usecondition	[ 0	locks=0 ]	(	"off"	)
condition	[ 0	locks=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
deleteall	[ 0	locks=0 ]	(	"off"	)
copyinputs	[ 0	locks=0 ]	(	"on"	)
deleteusing	[ 0	locks=0 ]	(	"0"	)
missingattribute	[ 0	locks=0 ]	(	"1"	)
pattern	[ 0	locks=0 ]	(	*	)
attributes	[ 0	locks=0 ]	(	2	)
enable1	[ 0	locks=0 ]	(	"on"	)
name1	[ 0	locks=0 ]	(	range	)
useindex1	[ 0	locks=0 ]	(	"off"	)
index1	[ 0	locks=0 ]	(	-1	)
enable2	[ 0	locks=0 ]	(	"on"	)
name2	[ 0	locks=0 ]	(	frame	)
useindex2	[ 0	locks=0 ]	(	"off"	)
index2	[ 0	locks=0 ]	(	-1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression1.init"
Content-Type: text/plain

type = filterbyexpression
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression1.def"
Content-Type: text/plain

comment ""
position 7.5 -33.9067
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	attributecreate_version 1 1 "input1"
}
inputs
{
0 	attributecreate_version 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression1.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
invertfilter	[ 0	locks=0 ]	(	"on"	)
filterexpression	[ 0	locks=0 ]	(	1	)
includeresultdata	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange1.init"
Content-Type: text/plain

type = filterbyrange
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange1.def"
Content-Type: text/plain

comment ""
position 5.5 -32.9067
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attributecreate_version 1 1 "input1"
}
inputs
{
0 	attributecreate_version 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange1.chn"
Content-Type: text/plain

{
    channel rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mergewedgeidxrangemin\") }
    }
    channel rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mergewedgeidxrangemax\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange1.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
filter	[ 0	locks=0 ]	(	0	)
operation	[ 0	locks=0 ]	(	"1"	)
filterby	[ 0	locks=0 ]	(	"2"	)
attribute	[ 0	locks=0 ]	(	wedgeindex	)
range	[ 0	locks=0 ]	(	[ rangex	0 ] 	[ rangey	1 ] 	)
attributes	[ 0	locks=0 ]	(	0	)
userangeattrib	[ 0	locks=0 ]	(	"on"	)
rangeattrib	[ 0	locks=0 ]	(	range	)
includeresultdata	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange2.init"
Content-Type: text/plain

type = filterbyrange
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange2.def"
Content-Type: text/plain

comment ""
position 3.54461 -41.4232
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_merge_wedges1 2 1 "input1"
}
inputs
{
0 	switch_merge_wedges1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange2.chn"
Content-Type: text/plain

{
    channel rangex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mergeframerange1\") }
    }
    channel rangey {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mergeframerange2\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange2.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
filter	[ 0	locks=0 ]	(	0	)
operation	[ 0	locks=0 ]	(	"1"	)
filterby	[ 0	locks=0 ]	(	"0"	)
attribute	[ 0	locks=0 ]	(	""	)
range	[ 0	locks=0 ]	(	[ rangex	0 ] 	[ rangey	1 ] 	)
attributes	[ 0	locks=0 ]	(	0	)
userangeattrib	[ 0	locks=0 ]	(	"on"	)
rangeattrib	[ 0	locks=0 ]	(	range	)
includeresultdata	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyrange2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression2.init"
Content-Type: text/plain

type = filterbyexpression
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression2.def"
Content-Type: text/plain

comment ""
position 7.5 -42.7311
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_merge_wedges1 2 1 "input1"
}
inputs
{
0 	switch_merge_wedges1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression2.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
invertfilter	[ 0	locks=0 ]	(	"on"	)
filterexpression	[ 0	locks=0 ]	(	0	)
includeresultdata	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filterbyexpression2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_merge_wedges1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_merge_wedges1.def"
Content-Type: text/plain

comment ""
position -0.5 -36.9067
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	attributecreate_version 1 1 "input1"
1 	switch_collect_wedgdes_mode 1 1 "input2"
}
inputs
{
0 	attributecreate_version 0 1
1 	switch_collect_wedgdes_mode 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_merge_wedges1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../enablewedging\") && ch(\"../domergewedges\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_merge_wedges1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_merge_wedges1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames.def"
Content-Type: text/plain

comment ""
position -0.5 -47.9067
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_merge_wedges1 2 1 "input1"
2 	switch_collect_frames_mode 1 1 "input2"
}
inputs
{
0 	switch_merge_wedges1 0 1
1 	switch_collect_frames_mode 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../domergeframes\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_collect_frames.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/waitforall1.init"
Content-Type: text/plain

type = waitforall
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/waitforall1.def"
Content-Type: text/plain

comment ""
position 2.42226 -48.8905
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_collect_frames 1 1 "input1"
}
inputs
{
0 	switch_collect_frames 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/waitforall1.parm"
Content-Type: text/plain

{
version 0.8
attributes	[ 0	locks=0 ]	(	0	0	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/waitforall1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionexpand.init"
Content-Type: text/plain

type = workitemexpand
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionexpand.def"
Content-Type: text/plain

comment ""
position 2.35848 -50.6036
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	waitforall1 1 1 "input1"
}
inputs
{
0 	waitforall1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionexpand.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
sepparm	[ 0	locks=0 ]	(	)
expand	[ 0	locks=0 ]	(	"1"	)
expandattrib	[ 0	locks=0 ]	(	""	)
expandworkitems	[ 0	locks=0 ]	(	"off"	)
includeexpected	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
expansiontype	[ 0	locks=0 ]	(	"0"	)
value	[ 0	locks=0 ]	(	1	)
sepparm3	[ 0	locks=0 ]	(	)
preserveindex	[ 0	locks=0 ]	(	"off"	)
setframe	[ 0	locks=0 ]	(	"off"	)
framestart	[ 0	locks=0 ]	(	1	1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionexpand.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_wait_on_collection.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_wait_on_collection.def"
Content-Type: text/plain

comment ""
position -0.5 -52.9122
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
2 	switch_collect_frames 1 1 "input1"
0 	partitionexpand 1 1 "input2"
}
inputs
{
0 	switch_collect_frames 0 1
1 	partitionexpand 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_wait_on_collection.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "(ch(\"../enablewedging\") && ch(\"../domergewedges\")) || ch(\"../domergeframes\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_wait_on_collection.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_wait_on_collection.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_version.init"
Content-Type: text/plain

type = attributecreate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_version.def"
Content-Type: text/plain

comment ""
position -0.5 -29.7855
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attributecreate_name 1 1 "input1"
}
inputs
{
0 	attributecreate_name 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_version.chn"
Content-Type: text/plain

{
    channel condition {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enableversion\") }
    }
    channel intvalue11 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = 40
      segment { length = 0 value = 1 1 expr = ch(\"../version\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_version.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
usecondition	[ 0	locks=0 ]	(	"on"	)
condition	[ 0	locks=0 ]	(	[ condition	0 ] 	)
folder2	[ 0	locks=0 ]	(	0	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
useindex	[ 0	locks=0 ]	(	"off"	)
indexvalue	[ 0	locks=0 ]	(	0	)
useframe	[ 0	locks=0 ]	(	"off"	)
framevalue	[ 0	locks=0 ]	(	0	)
usepriority	[ 0	locks=0 ]	(	"off"	)
priorityvalue	[ 0	locks=0 ]	(	0	)
folder1	[ 0	locks=0 ]	(	0	)
stringattribs	[ 0	locks=0 ]	(	0	)
intattribs	[ 0	locks=0 ]	(	1	)
floatattribs	[ 0	locks=0 ]	(	0	)
pyobjectattribs	[ 0	locks=0 ]	(	0	)
resultdata	[ 0	locks=0 ]	(	0	)
intenable1	[ 0	locks=0 ]	(	"on"	)
intname1	[ 0	locks=0 ]	(	version	)
intconflict1	[ 0	locks=0 ]	(	"0"	)
intsize1	[ 0	locks=0 ]	(	0	)
intvalue1	[ 0	locks=0 ]	(	[ intvalue11	0 ] 	0	0	0	)
sepparm1_4	[ 0	locks=0 ]	(	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_version.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.def"
Content-Type: text/plain

comment ""
position -0.5 -6.10111
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 2 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_4"
            label   "Node Options"

            parm {
                name    "servicename"
                baseparm
                label   "Service Name"
                export  none
            }
            parm {
                name    "sepparm3"
                baseparm
                label   "Separator"
                export  none
            }
            parm {
                name    "alwaysregenerate"
                baseparm
                label   "Always Regenerate"
                export  none
            }
            parm {
                name    "dirtyonregenerate"
                baseparm
                label   "Dirty on Regenerate"
                export  none
            }
            parm {
                name    "dirtyonincomplete"
                baseparm
                label   "Dirty on Incomplete"
                export  none
            }
            parm {
                name    "sepparm4"
                baseparm
                label   "Separator"
                export  none
            }
            parm {
                name    "requiresgeneratedinputs"
                baseparm
                label   "Requires Generated Inputs"
                export  none
            }
            parm {
                name    "requiresscenefile"
                baseparm
                label   "Requires Scene File"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "f"
        label   "Frame Range"
        type    float
        size    3
        default { "$FSTART" "$FEND" "1" }
        range   { 1 240 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "cachetype"
        label   "Range As"
        type    ordinal
        default { "range" }
        menu {
            "static"    "Static"
            "range"     "Custom Range"
        }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f2\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../f3\") / ch(\"../substeps\")" }
    }
    channel cachetype {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../timedependent\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import numpy as np

# Needs to re-create indexing.
index = 0

node = hou.pwd()

start = node.evalParm(\"f1\")
end = node.evalParm(\"f2\")
stepsize = node.evalParm(\"f3\")

cachetype = node.evalParm(\"cachetype\")

def cloneSequence(start, end, stepsize, setframe=True):
    global index
    for frame in np.arange(start,end+1,stepsize):
        new_item = item_holder.addWorkItem(cloneResultData=True,
                                           preserveType=True,
                                           parent=upstream_item,
                                           index=index)   
        index += 1                                   
        if setframe:
            new_item.setFloatAttrib('range',(start,end,stepsize))
            new_item.setFrame(frame,stepsize) 
    
                
if upstream_items: # has input
    for upstream_item in upstream_items:
        if upstream_item.attrib('range'): # has range attribute
            range = upstream_item.floatAttribArray('range')
            if range[0] == range[1] == range[2] == 1: # has range attribute and it is static frameless
                if cachetype: # need sequence
                    cloneSequence(start,end,stepsize)                    
                else: # need static frameless
                    new_item = item_holder.addWorkItem(cloneResultData=True,
                                                       preserveType=True,
                                                       parent=upstream_item)
            else: # has range attribute and it is a sequence
                if cachetype:
                    frame = upstream_item.frame
                    if frame >= start and frame <= end:
                        new_item = item_holder.addWorkItem(cloneResultData=True,
                                                           preserveType=True,
                                                           parent=upstream_item) 
                        new_item.setFloatAttrib('range',(start,end,stepsize))
                else:
                    continue
        else: # does not have range attribute - generated by wedge above, or custom input
            if cachetype: # need sequence
                
                cloneSequence(start,end,stepsize)               
            else: # need static frameless
                new_item = item_holder.addWorkItem(cloneResultData=True,
                                                   preserveType=True,
                                                   parent=upstream_item)
                new_item.setFloatAttrib('range',(1.0,1.0,1.0))
                new_item.setFrame(1.0,1.0) 
else: # no input    
    if cachetype:  # need sequence
        index = 0
        for frame in np.arange(start,end,stepsize):
            new_item = item_holder.addWorkItem(index=index)
            new_item.setFloatAttrib('range',(start,end,stepsize))
            new_item.setFrame(frame,stepsize) 
            index += 1
    else: # need static frameless
        new_item = item_holder.addWorkItem(index=0)    
        new_item.setFloatAttrib('range',(1.0,1.0,1.0))
        new_item.setFrame(1.0,1.0) "	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	0	)
f	[ 8	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
cachetype	[ 8	locks=0 ]	(	[ cachetype	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/prep_range.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_name.init"
Content-Type: text/plain

type = attributecreate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_name.def"
Content-Type: text/plain

comment ""
position -0.5 -27.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch7 1 1 "input1"
}
inputs
{
0 	switch7 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_name.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
usecondition	[ 0	locks=0 ]	(	"off"	)
condition	[ 0	locks=0 ]	(	0	)
folder2	[ 0	locks=0 ]	(	0	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
useindex	[ 0	locks=0 ]	(	"off"	)
indexvalue	[ 0	locks=0 ]	(	0	)
useframe	[ 0	locks=0 ]	(	"off"	)
framevalue	[ 0	locks=0 ]	(	0	)
usepriority	[ 0	locks=0 ]	(	"off"	)
priorityvalue	[ 0	locks=0 ]	(	0	)
folder1	[ 0	locks=0 ]	(	0	)
stringattribs	[ 0	locks=0 ]	(	1	)
intattribs	[ 0	locks=0 ]	(	0	)
floatattribs	[ 0	locks=0 ]	(	0	)
pyobjectattribs	[ 0	locks=0 ]	(	0	)
resultdata	[ 0	locks=0 ]	(	0	)
stringenable1	[ 0	locks=0 ]	(	"on"	)
stringname1	[ 0	locks=0 ]	(	name	)
stringconflict1	[ 0	locks=0 ]	(	"0"	)
stringvalue1	[ 0	locks=0 ]	(	`chs(\"../basename\")`	)
sepparm1_3	[ 0	locks=0 ]	(	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributecreate_name.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.init"
Content-Type: text/plain

type = pythonpartitioner
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.def"
Content-Type: text/plain

comment ""
position 1.5 3.90435
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	pythonprocessor2 1 1 "input1"
}
inputs
{
0 	pythonprocessor2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "partition3"
        label   "Partition"

        parm {
            name    "partition"
            baseparm
            label   "onPartition Callback"
            export  none
        }
    }

    group {
        name    "partition3_1"
        label   "Merge Attributes"

        parm {
            name    "pdg_partitionmerge"
            baseparm
            label   "Merge Input Attributes"
            invisible
            export  none
        }
        multiparm {
            name    "pdg_partitionmergeattributes"
            label    "Merge Operations"
            baseparm
            default 1

            parm {
                name    "pdg_partitionmergeoperation#"
                baseparm
                label   "Apply Operation"
                export  none
            }
            parm {
                name    "pdg_partitionmergepattern#"
                baseparm
                label   "To Attributes"
                export  none
            }
        }

    }

    group {
        name    "partition3_2"
        label   "Advanced"

        parm {
            name    "pdg_partitionwhen"
            baseparm
            label   "Partition When"
            export  none
        }
        parm {
            name    "pdg_partitiontargettype"
            baseparm
            label   "Partition Target(s)"
            export  none
        }
        parm {
            name    "pdg_partitiontarget"
            baseparm
            label   "Custom Target Node"
            export  none
        }
        parm {
            name    "sepparm2"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "pdg_partitionsplit"
            baseparm
            label   "Use Split by Attribute"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "pdg_partitionsplitattrib"
            baseparm
            label   "Split by Attribute"
            export  none
        }
        parm {
            name    "pdg_partitionsplitmissing"
            baseparm
            label   "Missing Attribute"
            export  none
        }
        parm {
            name    "pdg_partitionsplitdefault"
            baseparm
            label   "Default Value"
            export  none
        }
        parm {
            name    "pdg_partitionsplitpartial"
            baseparm
            label   "Allow Partial Matches"
            export  none
        }
        parm {
            name    "sepparm3"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "pdg_partitionsort"
            baseparm
            label   "Sort Contents By"
            joinnext
            export  none
        }
        parm {
            name    "pdg_partitionsortdirection"
            baseparm
            label   "Sort Direction"
            nolabel
            export  none
        }
        parm {
            name    "pdg_partitionsortattrib"
            baseparm
            label   "Sort Attribute"
            export  none
        }
        parm {
            name    "pdg_partitionsortrequired"
            baseparm
            label   "Prioritize Required Work Items"
            export  none
        }
    }

    parm {
        name    "dopartitionattrib"
        label   "Partition Attribute"
        type    toggle
        nolabel
        joinnext
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "partitionattrib"
        label   "Partition Attribute"
        type    string
        default { "" }
        disablewhen "{ dopartitionattrib != 1 }"
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "pdg_partitionstoreids"
        baseparm
        label   "Enable Store Items to Attrib"
        nolabel
        export  none
    }
    parm {
        name    "pdg_partitionidattrib"
        baseparm
        label   "Store Items to Attrib"
        export  none
    }
    parm {
        name    "pdg_partitionframe"
        baseparm
        label   "Set Partition Frame To"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.chn"
Content-Type: text/plain

{
    channel dopartitionattrib {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
partition2	[ 0	locks=0 ]	(	0	0	0	)
partition	[ 0	locks=0 ]	(	"# Custom onPartition callback logic. The following global variables are available:
#
# self                -    A reference to the current pdg.Node instance
# partition_holder    -    A pdg.PartitionHolder for adding work items to partitions
# work_items          -    The list of upstream work items to partition
import hou
node = hou.pwd()

dopartitionattrib = node.evalParm(\"dopartitionattrib\")
partitionattrib = node.evalParm(\"partitionattrib\")

def getSequenceIndex(upstream_item, range, elements):
    found = None
    for key in elements:
        if not dopartitionattrib:
            if key.attrib('range'):
                iter_range = key.attrib('range')       
                if range[0] == iter_range[0] and range[1] == iter_range[1] and range[2] == iter_range[2]: 
                    return elements[key]
        else:
            if key.attrib('range') and key.attrib(partitionattrib):
                iter_range = key.attrib('range')
                value = key.attrib(partitionattrib)
                print(value)
                if range[0] == iter_range[0] and range[1] == iter_range[1] and range[2] == iter_range[2] and key.intAttribValue(partitionattrib) == upstream_item.intAttribValue(partitionattrib):
                    return elements[key]
        
    if not found:
        next = 0
        for key in elements:
            next = max(next,elements[key]+1)            
        return next
        
    return 0
    
def getNextIndex(elements):
    next = 0
    for key in elements:       
        next = max(next,elements[key]+1)        
    return next
                      
elements = {}
index = 0

#prev_range = 'start'

upstream_items = work_items
if upstream_items:
    for upstream_item in upstream_items:
        if upstream_item.attrib('range'): # has range attribute
            range = upstream_item.floatAttribArray('range') 
            if range[0] == range[1] == range[2] == 1: # has range attribute and it is static frameless
                index = getNextIndex(elements)
                elements[upstream_item] = index 
                #print(\"static frameless index : {}\".format(index))
                #prev_range = 'static'
            else: # has range attribute and it is a sequence
                index = getSequenceIndex(upstream_item, range, elements)
                #print(\"sequence index : {}\".format(index))
                elements[upstream_item] = index
                #print(elements)
                #prev_range = 'sequesnce'
        else: # no range attribute
            index = getNextIndex(elements)
            elements[upstream_item] = index 
            #prev_range = 'sequence'
                                 
    for upstream_item in upstream_items:
        partition_holder.addItemToPartition(upstream_item, elements[upstream_item])          "	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsortrequired	[ 0	locks=0 ]	(	"off"	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
partition3	[ 0	locks=0 ]	(	0	0	0	)
dopartitionattrib	[ 8	locks=0 ]	(	[ dopartitionattrib	0 ] 	)
partitionattrib	[ 0	locks=0 ]	(	wedgeindex	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonpartitioner1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch5.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch5.def"
Content-Type: text/plain

comment ""
position -0.5 0.783945
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	null1 1 1 "input1"
2 	pythonprocessor4 1 1 "input2"
}
inputs
{
0 	null1 0 1
1 	pythonprocessor4 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch5.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = !ch(\"../trange\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch5.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch5.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor1.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor1.def"
Content-Type: text/plain

comment ""
position 5.5 2.9098
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	pythonpartitioner1 0 1 "input1"
}
inputs
{
0 	pythonpartitioner1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor1.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

for upstream_item in upstream_items:
    new_item = item_holder.addWorkItem(cloneResultData=True,
                                   preserveType=True,
                                   parent=upstream_item)
    
    new_item.setFloatAttrib('range',(1.0,1.0,1.0))
    new_item.setFrame(1.0,1.0) "	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor2.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor2.def"
Content-Type: text/plain

comment ""
position 1.5 5.90435
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	null1 1 1 "input1"
}
inputs
{
0 	null1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor2.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

if not upstream_items:
    new_item = item_holder.addWorkItem(index=0)
else:
    for upstream_item in upstream_items:
        new_item = item_holder.addWorkItem(parent=upstream_item)"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.def"
Content-Type: text/plain

comment ""
position 1.5 -1.09565
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	switch5 1 1 "input1"
}
inputs
{
0 	switch5 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.multiparm"
Content-Type: text/plain

11
attrib# ../attrib#
wedgetype# ../wedgetype#
minvalue# ../minvalue#
maxvalue# ../maxvalue#
randsample# ../randsample#
dobatchsize# ../dobatchsize#
batchsize# ../batchsize#
randomseed# ../randomseed#
values# ../values#
valuesdefault# ../valuesdefault#
geopath# ../geopath#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "wedgecount"
        label   "Wedge Count"
        type    integer
        default { "1" }
        range   { 1! 50 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    multiparm {
        name    "nwedgeattribs"
        label    "Number of Attributes"
        default 0
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "autoselect" "0000000000000000" }
        parmtag { "multistartoffset" "1" }

        groupsimple {
            name    "folder4_#"
            label   "Attribute #"

            parm {
                name    "attrib#"
                label   "Attribute Name"
                type    string
                joinnext
                default { "wedgeattribute#" }
            }
            parm {
                name    "wedgetype#"
                label   "Wedge Type"
                type    ordinal
                nolabel
                default { "0" }
                menu {
                    "range"     "Custom Range"
                    "list"      "List of Values"
                    "attrib"    "Attribute Values"
                }
            }
            parm {
                name    "minvalue#"
                label   "Min Value"
                type    float
                default { "0" }
                hidewhen "{ wedgetype# != range }"
                range   { 0 10 }
            }
            parm {
                name    "maxvalue#"
                label   "Max Value"
                type    float
                default { "1" }
                hidewhen "{ wedgetype# != range }"
                range   { 0 10 }
            }
            parm {
                name    "randsample#"
                label   "Random Sample"
                type    toggle
                default { "0" }
                hidewhen "{ wedgetype# != range }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "dobatchsize#"
                label   "Do Batch Size"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                hidewhen "{ wedgetype# != range } { randsample# == 1 }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "batchsize#"
                label   "Batch Size"
                type    integer
                default { "1" }
                disablewhen "{ dobatchsize# != 1 }"
                hidewhen "{ wedgetype# != range } { randsample# == 1 }"
                range   { 1! 10 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "randomseed#"
                label   "Seed"
                type    integer
                default { "0" }
                hidewhen "{ wedgetype# != range } { randsample# != 1 }"
                range   { 0! 100 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "values#"
                label   "List of Values"
                type    string
                default { "0-1" }
                hidewhen "{ wedgetype# != list }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "geopath#"
                label   "Geometry Path"
                type    oppath
                default { "" }
                hidewhen "{ wedgetype# != attrib }"
                parmtag { "opfilter" "!!SOP!!" }
                parmtag { "oprelative" "." }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "valuesdefault#"
                label   "Default Value"
                type    float
                default { "0" }
                hidewhen "{ wedgetype# == range }"
                range   { 0 10 }
            }
        }

    }

    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.chn"
Content-Type: text/plain

{
    channel wedgecount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../nwedgeattribs\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg
import random
node = hou.pwd()

def pad(l, content, width):
    l.extend([content] * (width - len(l)))
    return l
    
# Build list of elements based on user choice.

def defaultValues(attribname,nwedges,default):
    values = [default] * nwedges
    metas = []
    metas.append(attribname)
    metas.append(hou.attribData.Float)    
    return values, metas

def buildValues(nwedges, nattribs):
    attribs = []
    metas   = []
    for i in range(0,nattribs):
        values = []
        meta   = []
        stri   = str(i+1)    
        attribname  = node.evalParm('attrib' + stri)    
        wedgetype   = node.evalParm('wedgetype' + stri)
            
        if wedgetype == 0: # Custom Range
            min = node.evalParm('minvalue' + stri)
            max = node.evalParm('maxvalue' + stri)
            
            if node.evalParm('randsample' + stri): # Random sample             
                seed = node.evalParm('randomseed' + stri)   
                for wedge in range(0,nwedges):
                    value = hou.hmath.fit01(hou.hmath.rand(wedge + seed),min,max)    
                    values.append(value)
            else:
                if node.evalParm('dobatchsize' + stri): # Batched         
                    batchsize = node.evalParm('batchsize' + stri)  
                    
                    nbatchsize =  float(nwedges / batchsize)
                    
                    for wedge in range(0,nwedges):
                        value = hou.hmath.fit(wedge%nbatchsize,0,nbatchsize-1,min,max) 
                        value = hou.hmath.fit(floor((wedge) / nbatchsize),0,batchsize-1,min,max)  
                        values.append(value)                      
                else: # Periodic
                    for wedge in range(0,nwedges):
                        value = hou.hmath.fit(wedge,0,nwedges-1,min,max)
                        values.append(value)

            meta.append(attribname)
            meta.append(hou.attribData.Float)
            metas.append(meta)
            attribs.append(values)
                     
        elif wedgetype == 1: # List of Values
            list = node.evalParm('values' + stri)
            default = node.evalParm('valuesdefault' + stri)
            
            pattern = pdg.ValuePattern(list)
            values = pattern.floatArray(inclusive=True)
         
            if len(values) < nwedges:
                values = values + [default] * (nwedges - len(values))                
           
            meta.append(attribname)
            meta.append(hou.attribData.Float)
            metas.append(meta)
            attribs.append(values)            
        else:
            # From geometry attributes  
            # Supports point and primitive attributes
            # Supports float,int,string
            geonode = node.parm('geopath' + stri).evalAsNode()
            default = node.evalParm('valuesdefault' + stri)
            if not geonode:
                values, meta = defaultValues(attribname,nwedges,default)
                attribs.append(values)
                metas.append(meta)
                continue  
                
            geo = geonode.geometry()  
            
            if not geo:
                values, meta = defaultValues(attribname,nwedges,default)
                attribs.append(values)
                metas.append(meta)
                continue 
                
            attrib = geo.findPointAttrib(attribname)
            if not attrib:
                attrib = geo.findPrimAttrib(attribname)               
                if not attrib: # No attribute found.
                    values, meta = defaultValues(attribname,nwedges,default)
                    attribs.append(values)
                    metas.append(meta)
                    continue 
                    
            # Array types not supported.        
            if attrib.isArrayType():
                values, meta = defaultValues(attribname,nwedges,default)        
                attribs.append(values)
                metas.append(meta)               
           
            if attrib.type() == hou.attribType.Point:
                for point in geo.points():            
                    values.append(point.attribValue(attrib))      
            else:
                for prim in geo.prims():
                    values.append(prim.attirbVaue(attirb))
                    
            # Pad values if the number of elements is less then the number of wedges.
            if len(values) < nwedges:
                pad(values,attrib.defaultValue(),nwedges)
                
            meta.append(attribname)
            meta.append(attrib.dataType())            
            metas.append(meta)
            attribs.append(values)         
    
    return attribs, metas

def constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=False, upstream_item=None, upstream_index=None):

    # Create wedges the given number of times, however if we have inputs with wedges, just copy the input,
    # so niters == 1 in that case.
    for j in range(0,niters): # new item per wedge   
        new_item = None
        # The lookup index to the array attribute has to be changed when cloning the input.
        # In this case use the wedgenum attribute to distribute the newly wedged values.
        lookup = j
        if clone:
            if upstream_index > 0:
                lookup = upstream_index
            new_item = item_holder.addWorkItem(cloneResultData=True,
                                               preserveType=True,
                                               parent=upstream_item)                                               
        else:
            new_item = item_holder.addWorkItem(index=j)
            
        new_item.setIntAttrib('wedgecount',nwedges)
        new_item.setIntAttrib('wedgetotal',nwedges)
        new_item.setIntAttrib('wedgeindex',lookup)
        new_item.setIntAttrib('wedgenum',lookup)
        
        if attribnames:
            new_item.setStringAttrib('wedgeattribs',attribnames)
        
        
        for i in range(0,nattribs): # assign attributes
            stri = str(i+1) 
            attribname = metas[i][0]
            attribtype = metas[i][1]
            if attribtype == hou.attribData.Float:
                new_item.setFloatAttrib(attribname,values[i][lookup])
            if attribtype == hou.attribData.Int:
                new_item.setIntAttrib(attribname,values[i][lookup])
            if attribtype == hou.attribData.String:
                new_item.setStringAttrib(attribname,values[i][lookup])   
                
def generate(nwedges, nattribs):
    values, metas = buildValues(nwedges, nattribs) 
    
    niters = nwedges
    
    attribnames = []
    for meta in metas:
        attribname = meta[0]
        if attribname:
            attribnames.append(meta[0])  
              
    if upstream_items:
        for upstream_item in upstream_items:          
            if upstream_item.attrib('wedgetotal') is not None:
                niters = 1   
                
            upstream_wedgenmum = 0
            if upstream_item.attrib('wedgenum'):
                upstream_wedgenmum = upstream_item.intAttribValue('wedgenum')
            constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=True, upstream_item=upstream_item, upstream_index=upstream_wedgenmum)
    else:
        constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=False)      

nwedges = node.evalParm(\"wedgecount\")
nattribs = node.evalParm(\"nwedgeattribs\")

generate(nwedges,nattribs)  "	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
wedgecount	[ 0	locks=0 ]	(	[ wedgecount	1 ] 	)
nwedgeattribs	[ 0	locks=0 ]	(	[ nwedgeattribs	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/custom_wedge_process_v2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode2.init"
Content-Type: text/plain

type = partitionbynode
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode2.def"
Content-Type: text/plain

comment ""
position 3.5 -42.7311
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	filterbyrange2 1 1 "input1"
}
inputs
{
0 	filterbyrange2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode2.parm"
Content-Type: text/plain

{
version 0.8
node	[ 0	locks=0 ]	(	0	0	0	)
partitiontype	[ 0	locks=0 ]	(	"0"	)
usesortkey	[ 0	locks=0 ]	(	"off"	)
sortkey	[ 0	locks=0 ]	(	0	)
partialpartitions	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/partitionbynode2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"generic_delete"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/null1.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/null1.def"
Content-Type: text/plain

comment ""
position -0.5 7.90435
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/null1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "pdg_workitemgeneration"
        label   "Generate When"
        type    ordinal
        default { "2" }
        menu {
            "0" "Each Upstream Item is Generated"
            "1" "All Upstream Items are Generated"
            "2" "Automatic"
            "3" "All Upstream Items are Cooked"
        }
    }
    parm {
        name    "pdg_cachemode"
        label   "Cache Mode"
        type    ordinal
        default { "0" }
        menu {
            "0" "Automatic"
            "1" "Read Files"
            "2" "Write Files"
        }
    }
    parm {
        name    "pdg_workitempriority"
        label   "Work Item Priority"
        type    ordinal
        default { "0" }
        menu {
            "0" "Inherit from Upstream Item"
            "1" "Use Custom Expression"
            "2" "Node Defines Priority"
        }
    }
    parm {
        name    "pdg_workitempriorityexpr"
        label   "Priority Expression"
        type    integer
        default { "0" }
        range   { 0 10 }
    }
    parm {
        name    "pdg_command"
        label   "Command"
        type    string
        default { "" }
    }
    parm {
        name    "pdg_noschedulerparms"
        label   "Hide Scheduler Parameters"
        type    toggle
        default { "0" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/null1.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_cachemode	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdg_command	[ 0	locks=0 ]	(	""	)
pdg_noschedulerparms	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/null1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range.def"
Content-Type: text/plain

comment Process
position 1.5 -8.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	prep_range 1 1 "input1"
}
inputs
{
0 	prep_range 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "specificrange"
        label   "List of Frames"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reverse"
        label   "Reverse"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg

node = hou.pwd()

frames = pdg.ValuePattern(node.evalParm(\"specificrange\")).floatArray(inclusive=True)
reverse = node.evalParm(\"reverse\")

stepsize = 1

for upstream_item in upstream_items:
    if not reverse:
        if upstream_item.frame in frames:        
            new_item = item_holder.addWorkItem(parent=upstream_item)
            new_item.setFloatAttrib('__range',(new_item['range'][0],new_item['range'][1],new_item['range'][2]))
            new_item.setFloatAttrib('range',(upstream_item.frame,upstream_item.frame,stepsize))
    else:
        if upstream_item.frame not in frames:   
            new_item = item_holder.addWorkItem(parent=upstream_item)"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
specificrange	[ 0	locks=0 ]	(	`chs(\"../specificrange\")`	)
reverse	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range1.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range1.def"
Content-Type: text/plain

comment Skip
position 7.5 -8.5902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(__dot1) "" 1 "input1"
}
inputs
{
0 	(__dot1) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "specificrange"
        label   "List of Frames"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reverse"
        label   "Reverse"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range1.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg

node = hou.pwd()

frames = pdg.ValuePattern(node.evalParm(\"specificrange\")).floatArray(inclusive=True)
reverse = node.evalParm(\"reverse\")

for upstream_item in upstream_items:
    if not reverse:
        if upstream_item.frame in frames:        
            new_item = item_holder.addWorkItem(parent=upstream_item)
    else:
        if upstream_item.frame not in frames:   
            new_item = item_holder.addWorkItem(parent=upstream_item)"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
specificrange	[ 0	locks=0 ]	(	`chs(\"../specificrange\")`	)
reverse	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_range1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch6.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch6.def"
Content-Type: text/plain

comment ""
position -0.5 -10.2106
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	prep_range 1 1 "input1"
2 	filter_by_range 1 1 "input2"
}
inputs
{
0 	prep_range 0 1
1 	filter_by_range 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch6.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../timedependent\") && ch(\"../cachespecificrange\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch6.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch6.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge3.init"
Content-Type: text/plain

type = merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge3.def"
Content-Type: text/plain

comment ""
position 3.5 -22.1197
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch3 1 1 "input1"
1 	switch10 1 1 "input2"
}
inputs
{
0 	switch3 0 1
1 	switch10 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge3.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
sepparm	[ 0	locks=0 ]	(	)
extrainputs	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch7.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch7.def"
Content-Type: text/plain

comment ""
position -0.5 -25.1197
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	ropgeometry1 1 1 "input1"
2 	merge3 2 1 "input2"
}
inputs
{
0 	ropgeometry1 0 1
1 	merge3 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch7.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "(ch(\"../timedependent\") && ch(\"../cachespecificrange\")) || (ch(\"../enablewedging\") && ch(\"../cachespecificwedges\"))" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch7.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch7.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge.def"
Content-Type: text/plain

comment Process
position 1.5 -12.2106
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch6 1 1 "input1"
}
inputs
{
0 	switch6 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "specificrange"
        label   "List of Wedges"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reverse"
        label   "Reverse"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg

node = hou.pwd()

wedges = pdg.ValuePattern(node.evalParm(\"specificrange\")).intArray(inclusive=True)
reverse = node.evalParm(\"reverse\")

for upstream_item in upstream_items:
    if not reverse:
        if upstream_item.attribValue('wedgeindex') in wedges:        
            new_item = item_holder.addWorkItem(parent=upstream_item)
    else:
        if upstream_item.attribValue('wedgeindex') not in wedges:   
            new_item = item_holder.addWorkItem(parent=upstream_item)"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
specificrange	[ 0	locks=0 ]	(	`chs(\"../specificwedges\")`	)
reverse	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge1.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge1.def"
Content-Type: text/plain

comment Skip
position 7.5 -13.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch9 1 1 "input1"
}
inputs
{
0 	switch9 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "specificrange"
        label   "List of Wedges"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reverse"
        label   "Reverse"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge1.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg

node = hou.pwd()

wedges = pdg.ValuePattern(node.evalParm(\"specificrange\")).intArray(inclusive=True)
reverse = node.evalParm(\"reverse\")

for upstream_item in upstream_items:
    if not reverse:
        if upstream_item.attribValue('wedgeindex') in wedges:        
            new_item = item_holder.addWorkItem(parent=upstream_item)
    else:
        if upstream_item.attribValue('wedgeindex') not in wedges:   
            new_item = item_holder.addWorkItem(parent=upstream_item)"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
specificrange	[ 0	locks=0 ]	(	`chs(\"../specificwedges\")`	)
reverse	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/filter_by_wedge1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.def"
Content-Type: text/plain

comment ""
position -0.5 -14.3015
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch6 1 1 "input1"
2 	filter_by_wedge 1 1 "input2"
}
inputs
{
0 	switch6 0 1
1 	filter_by_wedge 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../enablewedging\") && ch(\"../cachespecificwedges\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch9.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch9.def"
Content-Type: text/plain

comment ""
position 5.65776 -10.5091
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(__dot1) "" 1 "input1"
2 	filter_by_range1 1 1 "input2"
}
inputs
{
0 	(__dot1) 0 1
1 	filter_by_range1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch9.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../timedependent\") && ch(\"../cachespecificrange\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch9.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch9.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch10.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch10.def"
Content-Type: text/plain

comment ""
position 5.63713 -14.7984
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch9 1 1 "input1"
2 	filter_by_wedge1 1 1 "input2"
}
inputs
{
0 	switch9 0 1
1 	filter_by_wedge1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch10.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../enablewedging\") && ch(\"../cachespecificwedges\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch10.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch10.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch3.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch3.def"
Content-Type: text/plain

comment ""
position 1.5 -21.2106
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	ropgeometry1 1 1 "input1"
2 	attributedelete2 1 1 "input2"
}
inputs
{
0 	ropgeometry1 0 1
1 	attributedelete2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch3.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../timedependent\") && ch(\"../cachespecificrange\")" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch3.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.def"
Content-Type: text/plain

comment ""
position 3.5 -17.9993
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	ropgeometry1 1 1 "input1"
}
inputs
{
0 	ropgeometry1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "specificrange"
        label   "List of Frames"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reverse"
        label   "Reverse"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "f"
        label   "Start/End/Inc"
        type    float
        size    3
        default { [ "$FSTART" hscript-expr ] [ "$FEND" hscript-expr ] "1" }
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "servicename"
        baseparm
        label   "Service Name"
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "alwaysregenerate"
        baseparm
        label   "Always Regenerate"
        export  none
    }
    parm {
        name    "dirtyonregenerate"
        baseparm
        label   "Dirty on Regenerate"
        export  none
    }
    parm {
        name    "dirtyonincomplete"
        baseparm
        label   "Dirty on Incomplete"
        export  none
    }
    parm {
        name    "sepparm4"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "requiresgeneratedinputs"
        baseparm
        label   "Requires Generated Inputs"
        export  none
    }
    parm {
        name    "requiresscenefile"
        baseparm
        label   "Requires Scene File"
        export  none
    }
    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../f2\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../f3\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg

node = hou.pwd()

start = node.evalParm(\"f1\")
end = node.evalParm(\"f2\")
stepsize = node.evalParm(\"f3\")

for upstream_item in upstream_items:   
    new_item = item_holder.addWorkItem(parent=upstream_item)
    new_item.setFloatAttrib('range',(new_item['__range'][0],new_item['__range'][1],new_item['__range'][2]))
"	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	)
specificrange	[ 0	locks=0 ]	(	`chs(\"../specificrange\")`	)
reverse	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/revert_range.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete2.init"
Content-Type: text/plain

type = attributedelete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete2.def"
Content-Type: text/plain

comment ""
position 3.5 -20.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	revert_range 1 1 "input1"
}
inputs
{
0 	revert_range 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete2.parm"
Content-Type: text/plain

{
version 0.8
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
usecondition	[ 0	locks=0 ]	(	"off"	)
condition	[ 0	locks=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
deleteall	[ 0	locks=0 ]	(	"off"	)
copyinputs	[ 0	locks=0 ]	(	"on"	)
deleteusing	[ 0	locks=0 ]	(	"0"	)
missingattribute	[ 0	locks=0 ]	(	"1"	)
pattern	[ 0	locks=0 ]	(	*	)
attributes	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
name1	[ 0	locks=0 ]	(	__range	)
useindex1	[ 0	locks=0 ]	(	"off"	)
index1	[ 0	locks=0 ]	(	-1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attributedelete2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor4.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor4.def"
Content-Type: text/plain

comment ""
position 1.5 1.9098
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	pythonpartitioner1 0 1 "input1"
}
inputs
{
0 	pythonpartitioner1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor4.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

for upstream_item in upstream_items:
    new_item = item_holder.addWorkItem(parent=upstream_item)
    new_item.setFloatAttrib('range',(1.0,1.0,1.0))
    new_item.setFrame(1.0) "	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pythonprocessor4.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot1.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":5.60097776920618173,
	"posy":-7.30510745071433476,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"prep_range 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

41
ropgeometry1
switch1
output0
switch_collect_wedgdes_mode
partitionbyframe1
partitionbynode1
switch_collect_frames_mode
attributedelete1
filterbyexpression1
filterbyrange1
filterbyrange2
filterbyexpression2
switch_merge_wedges1
switch_collect_frames
waitforall1
partitionexpand
switch_wait_on_collection
attributecreate_version
prep_range
attributecreate_name
pythonpartitioner1
switch5
pythonprocessor1
pythonprocessor2
custom_wedge_process_v2
partitionbynode2
null1
filter_by_range
filter_by_range1
switch6
merge3
switch7
filter_by_wedge
filter_by_wedge1
switch2
switch9
switch10
switch3
revert_range
attributedelete2
pythonprocessor4

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
