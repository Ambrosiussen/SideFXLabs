MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::filecache::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.445022 1.35833
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -0.4999999888241291 7.883299995213747 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -4.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	error1 1 1 "input1"
}
inputs
{
0 	error1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 6.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/IN.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.init"
Content-Type: text/plain

type = block_end
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -2.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	merge1 1 1 "input1"
}
inputs
{
0 	merge1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.spareparmdef"
Content-Type: text/plain

    parm {
        name    "itermethod"
        baseparm
        label   "Iteration Method"
        export  none
    }
    parm {
        name    "method"
        baseparm
        label   "Gather Method"
        export  none
    }
    parm {
        name    "iterations"
        baseparm
        label   "Iterations"
        export  none
    }
    parm {
        name    "startvalue"
        baseparm
        label   "Start Value"
        export  none
    }
    parm {
        name    "increment"
        baseparm
        label   "Increment"
        export  none
    }
    parm {
        name    "class"
        baseparm
        label   "Piece Elements"
        export  none
    }
    parm {
        name    "useattrib"
        baseparm
        label   "Piece Attribute"
        joinnext
        export  none
    }
    parm {
        name    "attrib"
        baseparm
        label   "Piece Attribute"
        export  none
    }
    parm {
        name    "usemaxiter"
        baseparm
        label   "Max Iterations"
        joinnext
        export  none
    }
    parm {
        name    "maxiter"
        baseparm
        label   "Max Iterations"
        export  none
    }
    parm {
        name    "blockpath"
        baseparm
        label   "Default Block Path"
        export  none
    }
    parm {
        name    "templatepath"
        baseparm
        label   "Piece Block Path"
        export  none
    }
    parm {
        name    "resetcookpass"
        baseparm
        label   "Reset Cached Pass"
        export  none
    }
    parm {
        name    "dosinglepass"
        baseparm
        label   "Do Single Pass"
        joinnext
        export  none
    }
    parm {
        name    "singlepass"
        baseparm
        label   "Single Pass"
        export  none
    }
    parm {
        name    "stopcondition"
        baseparm
        label   "Stop Condition"
        export  none
    }
    parm {
        name    "multithread"
        baseparm
        label   "Multithread when Compiled"
        export  none
    }
    parm {
        name    "nwedges"
        label   "Number of Wedges"
        type    string
        default { [ "import pdg\nnode = hou.pwd()\n\nparent = node.parent()\n\nif parent.evalParm(\"domergewedges\"):\n    pattern_str = \"\"\n    if parent.evalParm(\"mergewedges\") == 0:\n        pattern_str = '{}-{}'.format(0,\n                                 parent.evalParm(\"wedgecount\")) \n        return len(pdg.ValuePattern(pattern_str).intArray(inclusive=False))\n    elif parent.evalParm(\"mergewedges\") == 1:\n        pattern_str = '{}-{}'.format(parent.evalParm(\"mergewedgeidxrangemin\"),\n                                 parent.evalParm(\"mergewedgeidxrangemax\"))       \n    elif parent.evalParm(\"mergewedges\") == 2:\n        pattern_str = parent.evalParm(\"mergespecificwedges\")        \n    return len(pdg.ValuePattern(pattern_str).intArray(inclusive=True))\n\nreturn 0" python ] }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.chn"
Content-Type: text/plain

{
    channel nwedges {
      lefttype = extend
      righttype = extend
      defaultString = "import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergeframes\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergeframes\") == 0:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),
                                 parent.evalParm(\"f2\"),
                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 
    elif parent.evalParm(\"mergeframes\") == 1:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),
                                 parent.evalParm(\"mergeframerange2\"),
                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))
    elif parent.evalParm(\"mergeframes\") == 2:
        pattern_str = parent.evalParm(\"mergespecificrange\")
        
    return len(pdg.ValuePattern(pattern_str).floatArray(inclusive=True))

return 0"
      flags = 0
      segment { length = 0 expr = "import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergewedges\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergewedges\") == 0:
        pattern_str = '{}-{}'.format(0,
                                 parent.evalParm(\"wedgecount\")) 
        return len(pdg.ValuePattern(pattern_str).intArray(inclusive=False))
    elif parent.evalParm(\"mergewedges\") == 1:
        pattern_str = '{}-{}'.format(parent.evalParm(\"mergewedgeidxrangemin\"),
                                 parent.evalParm(\"mergewedgeidxrangemax\"))       
    elif parent.evalParm(\"mergewedges\") == 2:
        pattern_str = parent.evalParm(\"mergespecificwedges\")        
    return len(pdg.ValuePattern(pattern_str).intArray(inclusive=True))

return 0" language = python }
    }
    channel iterations {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"nwedges\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.parm"
Content-Type: text/plain

{
version 0.8
itermethod	[ 0	locks=0 ]	(	"count"	)
method	[ 0	locks=0 ]	(	"merge"	)
iterations	[ 0	locks=0 ]	(	[ iterations	10 ] 	)
startvalue	[ 0	locks=0 ]	(	0	)
increment	[ 0	locks=0 ]	(	1	)
class	[ 0	locks=0 ]	(	"point"	)
useattrib	[ 0	locks=0 ]	(	"on"	)
attrib	[ 0	locks=0 ]	(	""	)
usemaxiter	[ 0	locks=0 ]	(	"off"	)
maxiter	[ 0	locks=0 ]	(	10	)
blockpath	[ 0	locks=0 ]	(	../foreach_begin1	)
templatepath	[ 0	locks=0 ]	(	../foreach_begin1	)
resetcookpass	[ 0	locks=0 ]	(	0	)
dosinglepass	[ 0	locks=0 ]	(	"off"	)
singlepass	[ 8	locks=0 ]	(	0	)
stopcondition	[ 0	locks=0 ]	(	0	)
multithread	[ 0	locks=0 ]	(	"off"	)
nwedges	[ 0	locks=0 ]	(	[ nwedges	"import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergewedges\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergewedges\") == 0:
        pattern_str = '{}-{}'.format(0,
                                 parent.evalParm(\"wedgecount\")) 
        return len(pdg.ValuePattern(pattern_str).intArray(inclusive=False))
    elif parent.evalParm(\"mergewedges\") == 1:
        pattern_str = '{}-{}'.format(parent.evalParm(\"mergewedgeidxrangemin\"),
                                 parent.evalParm(\"mergewedgeidxrangemax\"))       
    elif parent.evalParm(\"mergewedges\") == 2:
        pattern_str = parent.evalParm(\"mergespecificwedges\")        
    return len(pdg.ValuePattern(pattern_str).intArray(inclusive=True))

return 0" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_wedge.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin1.init"
Content-Type: text/plain

type = block_begin
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 0.85
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin1.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"input"	)
blockpath	[ 0	locks=0 ]	(	../foreach_wedge	)
resetcookpass	[ 0	locks=0 ]	(	0	)
createmetablock	[ 0	locks=0 ]	(	0	)
label1	[ 0	locks=0 ]	(	"iteration, numiterations, value, ivalue"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count1.init"
Content-Type: text/plain

type = block_begin
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 9.5 0.85
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count1.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"metadata"	)
blockpath	[ 0	locks=0 ]	(	../foreach_wedge	)
resetcookpass	[ 0	locks=0 ]	(	0	)
createmetablock	[ 0	locks=0 ]	(	0	)
label1	[ 0	locks=0 ]	(	"iteration, numiterations, value, ivalue"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.init"
Content-Type: text/plain

type = merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -1.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	read_wedged_cache 0 1 "input1"
2 	foreach_begin1 0 1 "input2"
}
inputs
{
0 	read_wedged_cache 0 1
1 	foreach_begin1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_wedged.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_wedged.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -4.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	read_back 0 1 "input1"
1 	foreach_wedge 1 1 "input2"
}
inputs
{
0 	read_back 0 1
1 	foreach_wedge 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_wedged.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablewedging\") }
    }
    channel expr2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../domergewedges\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_wedged.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	2	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 8	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
enable2	[ 0	locks=0 ]	(	"on"	)
type2	[ 0	locks=0 ]	(	"expr"	)
expr2	[ 8	locks=0 ]	(	[ expr2	1 ] 	)
attribtype2	[ 0	locks=0 ]	(	"all"	)
attribowner2	[ 0	locks=0 ]	(	"point"	)
attributes2	[ 0	locks=0 ]	(	""	)
attribvaltype2	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp2	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp2	[ 0	locks=0 ]	(	"equal"	)
attribval2	[ 0	locks=0 ]	(	0	)
attribsval2	[ 0	locks=0 ]	(	""	)
counttype2	[ 0	locks=0 ]	(	"points"	)
countgroup2	[ 0	locks=0 ]	(	""	)
countcomp2	[ 0	locks=0 ]	(	"equal"	)
countval2	[ 0	locks=0 ]	(	0	)
hasinputtype2	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_wedged.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.init"
Content-Type: text/plain

type = topnetmgr
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.def"
Content-Type: text/plain

comment ""
position -4.5 -4.0902
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.parm"
Content-Type: text/plain

{
version 0.8
cookcontrolssection	[ 0	locks=0 ]	(	0	)
generatestatic	[ 0	locks=0 ]	(	0	)
cookbutton	[ 8	locks=0 ]	(	0	)
dirtybutton	[ 0	locks=0 ]	(	0	)
cancelbutton	[ 0	locks=0 ]	(	0	)
taskgraphsection	[ 0	locks=0 ]	(	0	)
savetaskgraph	[ 0	locks=0 ]	(	0	)
loadtaskgraph	[ 0	locks=0 ]	(	0	)
taskgraphfile	[ 0	locks=0 ]	(	$HIP/$HIPNAME.taskgraph.$F.py	)
taskgraphautosave	[ 0	locks=0 ]	(	"off"	)
taskgraphsaverate	[ 0	locks=0 ]	(	10	)
schedulersection	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	`ifs(!ch(\"../overwritetopscheduler\"),\"localscheduler\",chsop(\"../topscheduler\"))`	)
regenerationtype	[ 0	locks=0 ]	(	"0"	)
evaluationtime	[ 0	locks=0 ]	(	"0"	)
customtime	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/localscheduler.init"
Content-Type: text/plain

type = localscheduler
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/localscheduler.def"
Content-Type: text/plain

comment ""
position 3.5 2.85
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/localscheduler.chn"
Content-Type: text/plain

{
    channel local_single {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filecacheversioned1_/local_single\") }
    }
    channel maxprocsmenu {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "{
    if(ch(\"../../maxprocsmenu\") == 0) return 0;
    if(ch(\"../../maxprocsmenu\") == 5) return -1;
    return 1;    
}" }
    }
    channel maxprocs {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../numlogicalcores\") }
    }
    channel local_is_CPU_number_set {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_CPUs_to_use {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_houdinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_useminfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_useminfreemem\") }
    }
    channel local_minfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_minfreemem\") }
    }
    channel local_minfreemempct {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_minfreemempct\") }
    }
    channel local_usehoudinimaxthreads {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../local_is_CPU_number_set\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/localscheduler.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	1	1	)
folder5	[ 0	locks=0 ]	(	0	)
maxprocsmenu	[ 8	locks=0 ]	(	[ maxprocsmenu	0 ] 	)
maxprocs	[ 8	locks=0 ]	(	[ maxprocs	1 ] 	)
verbose	[ 0	locks=0 ]	(	"off"	)
pdg_waitforfailures	[ 0	locks=0 ]	(	"off"	)
folder4	[ 0	locks=0 ]	(	0	)
pdg_workingdir	[ 0	locks=0 ]	(	$HIP	)
pdg_workitemdatasource	[ 0	locks=0 ]	(	"0"	)
pdg_compressworkitemdata	[ 0	locks=0 ]	(	"on"	)
pdg_validateoutputs	[ 0	locks=0 ]	(	"on"	)
pdg_checkexpectedoutputs	[ 0	locks=0 ]	(	"on"	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_mapmode	[ 0	locks=0 ]	(	"0"	)
pdg_usemapzone	[ 0	locks=0 ]	(	"off"	)
pdg_mapzone	[ 0	locks=0 ]	(	$PDG_PATHMAP_ZONE	)
sepparm3	[ 0	locks=0 ]	(	)
folder1	[ 0	locks=0 ]	(	0	)
tempdirmenu	[ 0	locks=0 ]	(	"1"	)
tempdirappendpid	[ 0	locks=0 ]	(	"on"	)
tempdircustom	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/$HIPNAME/pdgtemp	)
socketcallbacks	[ 0	locks=0 ]	(	1	)
folder0_2	[ 0	locks=0 ]	(	0	)
local_single	[ 8	locks=0 ]	(	[ local_single	0 ] 	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	[ local_is_CPU_number_set	0 ] 	)
local_CPUs_to_use	[ 0	locks=0 ]	(	[ local_CPUs_to_use	1 ] 	)
folder6	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	[ local_useminfreemem	0 ] 	)
local_minfreemem	[ 0	locks=0 ]	(	[ local_minfreemem	0 ] 	)
local_minfreemempct	[ 0	locks=0 ]	(	[ local_minfreemempct	0 ] 	)
folder2	[ 0	locks=0 ]	(	0	)
local_echandleby	[ 0	locks=0 ]	(	"0"	)
local_echandleall	[ 0	locks=0 ]	(	"on"	)
local_eccustomcode	[ 0	locks=0 ]	(	1	)
sepparm	[ 0	locks=0 ]	(	)
local_maximumretries	[ 0	locks=0 ]	(	3	)
local_addfailcountattr	[ 0	locks=0 ]	(	"off"	)
local_failcountattr	[ 0	locks=0 ]	(	failurecount	)
sepparm4	[ 0	locks=0 ]	(	)
local_enabletimeout	[ 0	locks=0 ]	(	"off"	)
local_maxtime	[ 0	locks=0 ]	(	0	)
local_handletimeout	[ 0	locks=0 ]	(	"0"	)
folder3	[ 0	locks=0 ]	(	0	)
local_usehoudinimaxthreads	[ 8	locks=0 ]	(	[ local_usehoudinimaxthreads	0 ] 	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	[ local_houdinimaxthreads	0 ] 	)
local_requireswindow	[ 0	locks=0 ]	(	"off"	)
local_envunset	[ 0	locks=0 ]	(	""	)
local_envmulti	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/localscheduler.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/output0.def"
Content-Type: text/plain

comment ""
position -2.5 -6.0902
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch2 1 1 "input1"
}
inputs
{
0 	switch2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbyattribute1.init"
Content-Type: text/plain

type = partitionbyattribute
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbyattribute1.def"
Content-Type: text/plain

comment ""
position 1.5 -1.99929
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	filecache1 0 1 "input1"
}
inputs
{
0 	filecache1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbyattribute1.parm"
Content-Type: text/plain

{
version 0.8
attribute	[ 0	locks=0 ]	(	0	0	0	)
mode	[ 0	locks=0 ]	(	"2"	)
sortdirection	[ 0	locks=0 ]	(	"0"	)
independent	[ 0	locks=0 ]	(	"on"	)
createunmatched	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
pattern	[ 0	locks=0 ]	(	*	)
attributes	[ 0	locks=0 ]	(	1	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
enable1	[ 0	locks=0 ]	(	"on"	)
name1	[ 0	locks=0 ]	(	wedgeindex	)
type1	[ 0	locks=0 ]	(	"0"	)
enableindex1	[ 0	locks=0 ]	(	"on"	)
index1	[ 0	locks=0 ]	(	0	)
intvalue1	[ 0	locks=0 ]	(	0	)
intvector1	[ 0	locks=0 ]	(	0	0	0	0	)
floatvalue1	[ 0	locks=0 ]	(	0	)
floatvector1	[ 0	locks=0 ]	(	0	0	0	0	)
stringvalue1	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbyattribute1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"generic_delete"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbynode1.init"
Content-Type: text/plain

type = partitionbynode
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbynode1.def"
Content-Type: text/plain

comment ""
position -0.5 -0.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	filecache1 0 1 "input1"
}
inputs
{
0 	filecache1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbynode1.parm"
Content-Type: text/plain

{
version 0.8
node	[ 0	locks=0 ]	(	0	0	0	)
partitiontype	[ 0	locks=0 ]	(	"0"	)
usesortkey	[ 0	locks=0 ]	(	"off"	)
sortkey	[ 0	locks=0 ]	(	0	)
partialpartitions	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmerge	[ 0	locks=0 ]	(	"off"	)
pdg_partitionmergeattributes	[ 0	locks=0 ]	(	1	)
pdg_partitionwhen	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontargettype	[ 0	locks=0 ]	(	"0"	)
pdg_partitiontarget	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
pdg_partitionsplit	[ 0	locks=0 ]	(	"off"	)
pdg_partitionsplitattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitmissing	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsplitdefault	[ 0	locks=0 ]	(	""	)
pdg_partitionsplitpartial	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_partitionframe	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsort	[ 0	locks=0 ]	(	"1"	)
pdg_partitionsortdirection	[ 0	locks=0 ]	(	"0"	)
pdg_partitionsortattrib	[ 0	locks=0 ]	(	""	)
pdg_partitionstoreids	[ 0	locks=0 ]	(	"off"	)
pdg_partitionidattrib	[ 0	locks=0 ]	(	partitionitems	)
pdg_partitionmergeoperation1	[ 0	locks=0 ]	(	"1"	)
pdg_partitionmergepattern1	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/partitionbynode1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"___toolcount___":{
		"type":"string",
		"value":"1"
	},
	"___toolid___":{
		"type":"string",
		"value":"generic_delete"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch0.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch0.def"
Content-Type: text/plain

comment ""
position -2.5 -1.09565
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
1 	filecache1 0 1 "input1"
0 	partitionbynode1 1 1 "input2"
}
inputs
{
0 	filecache1 0 1
1 	partitionbynode1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch0.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../../trange\") > 0" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch0.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch2.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch2.def"
Content-Type: text/plain

comment ""
position -2.5 -3.99929
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch0 2 1 "input1"
2 	partitionbyattribute1 1 1 "input2"
}
inputs
{
0 	switch0 0 1
1 	partitionbyattribute1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch2.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch2.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/switch2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.init"
Content-Type: text/plain

type = labs::topfilecache::1.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.def"
Content-Type: text/plain

comment ""
position -2.5 2.90435
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.multiparm"
Content-Type: text/plain

11
attrib# ../../attrib#
wedgetype# ../../wedgetype#
minvalue# ../../minvalue#
maxvalue# ../../maxvalue#
randsample# ../../randsample#
randomseed# ../../randomseed#
dobatchsize# ../../dobatchsize#
batchsize# ../../batchsize#
geopath# ../../geopath#
values# ../../values#
valuesdefault# ../../valuesdefault#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "labelparm"
        baseparm
        label   "Spacer"
        nolabel
        joinnext
        export  none
    }
    parm {
        name    "quicksetup"
        baseparm
        label   " "
        export  none
    }
    group {
        name    "folder8"
        label   "ROP Geometry"

        parm {
            name    "filemethod"
            baseparm
            label   "File Method"
            joinnext
            export  none
        }
        parm {
            name    "timedependent"
            baseparm
            label   "Time Dependent Cache"
            export  none
        }
        parm {
            name    "basename"
            baseparm
            label   "Base Name"
            joinnext
            export  none
        }
        parm {
            name    "filetype"
            baseparm
            label   "File Type"
            nolabel
            export  none
        }
        parm {
            name    "file"
            baseparm
            label   "Geometry File"
            joinnext
            export  none
        }
        parm {
            name    "openfiledir"
            baseparm
            label   "Open Directory"
            nolabel
            export  none
        }
        parm {
            name    "basedir"
            baseparm
            label   "Base Folder"
            joinnext
            export  none
        }
        parm {
            name    "openbasedir"
            baseparm
            label   "Open Directory"
            nolabel
            export  none
        }
        parm {
            name    "enableversion"
            baseparm
            label   "Enable Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "version"
            baseparm
            label   "Version"
            joinnext
            export  none
        }
        parm {
            name    "versiondown"
            baseparm
            label   "Down Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "versionup"
            baseparm
            label   "Up Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "hasinput"
            baseparm
            label   "Has Input"
            invisible
            export  none
        }
        group {
            name    "folder9"
            label   "Caching"

            groupcollapsible {
                name    "folder13"
                label   "Geometry"
                grouptag { "group_default" "1" }

                parm {
                    name    "soppath"
                    baseparm
                    label   "SOP Path"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder14"
                label   "Sequence"
                hidewhentab "{ timedependent != 1 }"
                grouptag { "group_default" "1" }

                parm {
                    name    "trange"
                    baseparm
                    label   "Evaluate As"
                    joinnext
                    export  none
                }
                parm {
                    name    "cachesim"
                    baseparm
                    label   "Simulation"
                    export  none
                }
                parm {
                    name    "f"
                    baseparm
                    label   "Frame Range"
                    joinnext
                    export  none
                }
                parm {
                    name    "fmenu"
                    baseparm
                    label   "F Menu"
                    export  none
                }
                parm {
                    name    "substeps"
                    baseparm
                    label   "Substeps"
                    export  none
                }
                parm {
                    name    "useframeoverride"
                    baseparm
                    label   "Override Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "frameoverride"
                    baseparm
                    label   "Override Frame"
                    export  none
                }
                parm {
                    name    "cachespecificrange"
                    baseparm
                    label   "Cache Specific Range"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "specificrange"
                    baseparm
                    label   "List of Frames"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder15"
                label   "Enable Wedging"
                grouptag { "sidefx::header_parm" "wedgecount" }
                grouptag { "sidefx::header_toggle" "enablewedging" }

                parm {
                    name    "enablewedging"
                    baseparm
                    label   "Enable Wedging"
                    export  none
                }
                parm {
                    name    "wedgecount"
                    baseparm
                    label   "Wedge Count"
                    export  none
                }
                parm {
                    name    "cachespecificwedges"
                    baseparm
                    label   "Cache Specific Wedges"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "specificwedges"
                    baseparm
                    label   "List of Wedges"
                    export  none
                }
                multiparm {
                    name    "nwedgeattribs"
                    label    "Number of Attributes"
                    baseparm
                    default 0
                    disablewhen "{ enablewedging != 1 }"
                    parmtag { "autoscope" "0000000000000000" }
                    parmtag { "autoselect" "0000000000000000" }
                    parmtag { "multistartoffset" "1" }

                    parm {
                        name    "attrib#"
                        baseparm
                        label   "Attribute Name"
                        export  none
                    }
                    parm {
                        name    "wedgetype#"
                        baseparm
                        label   "Wedge Type"
                        nolabel
                        export  none
                    }
                    parm {
                        name    "minvalue#"
                        baseparm
                        label   "Min Value"
                        export  none
                    }
                    parm {
                        name    "maxvalue#"
                        baseparm
                        label   "Max Value"
                        export  none
                    }
                    parm {
                        name    "randsample#"
                        baseparm
                        label   "Random Sample"
                        export  none
                    }
                    parm {
                        name    "dobatchsize#"
                        baseparm
                        label   "Do Batch Size"
                        nolabel
                        export  none
                    }
                    parm {
                        name    "batchsize#"
                        baseparm
                        label   "Batch Size"
                        export  none
                    }
                    parm {
                        name    "randomseed#"
                        baseparm
                        label   "Seed"
                        export  none
                    }
                    parm {
                        name    "values#"
                        baseparm
                        label   "List of Values"
                        export  none
                    }
                    parm {
                        name    "geopath#"
                        baseparm
                        label   "Geometry Path"
                        export  none
                    }
                    parm {
                        name    "valuesdefault#"
                        baseparm
                        label   "Default Value"
                        export  none
                    }
                }

            }

            groupcollapsible {
                name    "folder16"
                label   "Load from File"
                hidewhen "{ trange == static enablewedging == 0 }"

                parm {
                    name    "doclampfirst"
                    baseparm
                    label   "Clamp First Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "clampfirst"
                    baseparm
                    label   "Clamp First Frame"
                    export  none
                }
                parm {
                    name    "doclamplast"
                    baseparm
                    label   "Clamp Last Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "clamplast"
                    baseparm
                    label   "Clamp Last Frame"
                    export  none
                }
                parm {
                    name    "sepparm6"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "domergeframes"
                    baseparm
                    label   "Merge Frames"
                    export  none
                }
                parm {
                    name    "mergeframes"
                    baseparm
                    label   "Merge Frames"
                    export  none
                }
                parm {
                    name    "mergeframerange"
                    baseparm
                    label   "Frame Range"
                    export  none
                }
                parm {
                    name    "mergesubsteps"
                    baseparm
                    label   "Substeps"
                    export  none
                }
                parm {
                    name    "mergespecificrange"
                    baseparm
                    label   "List of Frames"
                    export  none
                }
                parm {
                    name    "domergewedges"
                    baseparm
                    label   "Merge Wedges"
                    export  none
                }
                parm {
                    name    "mergewedges"
                    baseparm
                    label   "Merge Wedges"
                    export  none
                }
                parm {
                    name    "mergewedgeidxrange"
                    baseparm
                    label   "Wedge Range"
                    export  none
                }
                parm {
                    name    "mergespecificwedges"
                    baseparm
                    label   "List of Wedges"
                    export  none
                }
            }

        }

        group {
            name    "folder9_1"
            label   "Settings"

            groupcollapsible {
                name    "folder17"
                label   "Save"
                grouptag { "group_default" "0" }

                parm {
                    name    "mkpath"
                    baseparm
                    label   "Create Intermediate Directories"
                    export  none
                }
                parm {
                    name    "initsim"
                    baseparm
                    label   "Initialize Simulation OPs"
                    export  none
                }
                parm {
                    name    "alfprogress"
                    baseparm
                    label   "Alfred Style Progress"
                    export  none
                }
                parm {
                    name    "savebackground"
                    baseparm
                    label   "Save in Background"
                    export  none
                }
                parm {
                    name    "savebackuphip"
                    baseparm
                    label   "Save Backup .hip File"
                    export  none
                }
                parm {
                    name    "saveretry"
                    baseparm
                    label   "Save Retries"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder18"
                label   "Performance Logging"
                grouptag { "group_default" "0" }

                parm {
                    name    "enableperfmon"
                    baseparm
                    label   "Enable Performance Monitor Logging"
                    export  none
                }
                parm {
                    name    "openperffile"
                    baseparm
                    label   "Open Current Profile"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder19"
                label   "Path Construction"
                hidewhen "{ filemethod != constructed }"
                grouptag { "group_default" "0" }
                grouptag { "sidefx::header_parm" "sopoutput" }

                parm {
                    name    "frame"
                    baseparm
                    label   "Frame"
                    export  none
                }
                parm {
                    name    "framestr"
                    baseparm
                    label   "Frame String"
                    export  none
                }
                parm {
                    name    "versionstr"
                    baseparm
                    label   "Version String"
                    export  none
                }
                parm {
                    name    "wedgestr"
                    baseparm
                    label   "Wedge String"
                    export  none
                }
                parm {
                    name    "sepparm2"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "cachedir"
                    baseparm
                    label   "Cache Folder"
                    export  none
                }
                parm {
                    name    "cachename"
                    baseparm
                    label   "Cache Name"
                    export  none
                }
                parm {
                    name    "sopoutput"
                    baseparm
                    label   "Output File"
                    export  none
                }
                parm {
                    name    "sepparm5"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "perffile"
                    baseparm
                    label   "Performance Profile"
                    export  none
                }
                parm {
                    name    "descriptivelabel"
                    baseparm
                    label   "Descriptive Label"
                    export  none
                }
            }

        }

    }

    group {
        name    "folder8_1"
        label   "ROP Fetch"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_cachemode"
            baseparm
            label   "Cache Mode"
            export  none
        }
        parm {
            name    "sethip"
            baseparm
            label   "Reset $HIP On Cook"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "framesperbatch"
            baseparm
            label   "Frames per Batch"
            export  none
        }
        parm {
            name    "cookwhen"
            baseparm
            label   "Cook Batch When"
            export  none
        }
    }

    group {
        name    "folder8_2"
        label   "Scripts"

        parm {
            name    "tprerender"
            baseparm
            label   "Pre-Render Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "prerender"
            baseparm
            label   "Pre-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lprerender"
            baseparm
            label   "Pre-Render Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpreframe"
            baseparm
            label   "Pre-Frame Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "preframe"
            baseparm
            label   "Pre-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpreframe"
            baseparm
            label   "Pre-Frame Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostframe"
            baseparm
            label   "Post-Frame Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postframe"
            baseparm
            label   "Post-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostframe"
            baseparm
            label   "Post-Frame Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostwrite"
            baseparm
            label   "Post-Write Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postwrite"
            baseparm
            label   "Post-Write Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostwrite"
            baseparm
            label   "Post-Write Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostrender"
            baseparm
            label   "Post-Render Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postrender"
            baseparm
            label   "Post-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostrender"
            baseparm
            label   "Post-Render Script Language"
            nolabel
            export  none
        }
    }

    group {
        name    "folder8_3"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            export  none
        }
        parm {
            name    "sepparm3"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "pdg_workitemlabel"
            baseparm
            label   "Work Item Label"
            joinnext
            export  none
        }
        parm {
            name    "pdg_workitemlabelexpr"
            baseparm
            label   "Label Expression"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            joinnext
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            nolabel
            export  none
        }
    }

    group {
        name    "folder8_4"
        label   "Service"

        parm {
            name    "enablepdgservice"
            baseparm
            label   "Use ROP Fetch Service"
            export  none
        }
        parm {
            name    "pdgservicename"
            baseparm
            label   "Service Name"
            export  none
        }
    }

    group {
        name    "folder8_5"
        label   "Schedulers"

        groupsimple {
            name    "localfolder"
            label   "Local"

            parm {
                name    "local_single"
                label   "Single"
                type    toggle
                default { "0" }
                help    "Enabling this will force one work item to be executed at a time."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_is_CPU_number_set"
                label   "local_is_CPU_number_set"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will use the CPUs per Task value when deciding the number of CPUs to use per work item. Otherwise the work item will be assumed to consume one CPU."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_CPUs_to_use"
                label   "Slots Per Work Item"
                type    integer
                default { "1" }
                help    "The number of Slots consumed by each work item.  This work item will only be run by the scheduler if at least this number of Slots are available.  The total number of Slots available is specified by the 'Total Slots' parm on the scheduler node."
                disablewhen "{ local_is_CPU_number_set == 0 }"
                range   { 1! 64 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_usehoudinimaxthreads"
                label   "local_usehoudinimaxthreads"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will set the HOUDINI_MAXTHREADS environment variable to the value specified in Houdini Max Threads."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_houdinimaxthreads"
                label   "Houdini Max Threads"
                type    integer
                default { "0" }
                help    "Maximum number of threads to use for each work item in Houdini. This sets the HOUDINI_MAXTHREADS environment variable value."
                disablewhen "{ local_usehoudinimaxthreads == 0 }"
                range   { 0 10 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            groupsimple {
                name    "folder26"
                label   "Minimum Available Memory"
                grouptag { "group_type" "simple" }

                parm {
                    name    "local_useminfreemem"
                    label   "Rule"
                    type    ordinal
                    default { "0" }
                    menu {
                        "0" "No Minimum"
                        "1" "MB Available"
                        "2" "Percent Available"
                    }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemem"
                    label   "Minimum MB"
                    type    float
                    default { "0" }
                    help    "The minimum available memory in Megabytes.  Available memory is the amount of memory that can be used by a process without going into swap."
                    disablewhen "{ local_useminfreemem != 1 }"
                    range   { 0 128000 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemempct"
                    label   "Minimum Percent"
                    type    float
                    default { "0" }
                    help    "The minimum available memory as a percentage of the system's total memory."
                    disablewhen "{ local_useminfreemem != 2 }"
                    range   { 0 1 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
            }

        }

    }


--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.chn"
Content-Type: text/plain

{
    channel hasinput {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = argc(opinput(\".\",0)) }
    }
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f2\") }
    }
    channel clampfirst {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../clampfirst\") }
    }
    channel clamplast {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../clamplast\") }
    }
    channel mergeframerange1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange1\") }
    }
    channel mergeframerange2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange2\") }
    }
    channel mergeframerange3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange3\") }
    }
    channel mergesubsteps {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergesubsteps\") }
    }
    channel frame {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frame\") }
    }
    channel sopoutput {
      lefttype = extend
      righttype = extend
      defaultString = \"/home/ati/geo/filecache1/v1/filecache1_v1.0001.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../sopoutput\") }
    }
    channel perffile {
      lefttype = extend
      righttype = extend
      defaultString = \"/home/ati/geo/filecache1/v1/hprofile/filecache1v1w.hperf\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../perffile\") }
    }
    channel descriptivelabel {
      lefttype = extend
      righttype = extend
      defaultString = \"chs(\\\"../../basename\\\")_v1.$F4.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../descriptivelabel\") }
    }
    channel basedir {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/geo\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basedir\") }
    }
    channel basename {
      lefttype = extend
      righttype = extend
      defaultString = \"$OS\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basename\") }
    }
    channel filemethod {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filemethod\") }
    }
    channel file {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/geo/$OS/$HIPNAME.$OS.$F4.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../file\") }
    }
    channel filetype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filetype\") }
    }
    channel enableversion {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enableversion\") }
    }
    channel version {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../version\") }
    }
    channel timedependent {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../timedependent\") }
    }
    channel enablewedging {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enablewedging\") }
    }
    channel cachesim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachesim\") }
    }
    channel initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../initsim\") }
    }
    channel useframeoverride {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../useframeoverride\") }
    }
    channel frameoverride {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frameoverride\") }
    }
    channel substeps {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../substeps\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f3\") }
    }
    channel framesperbatch {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../framesperbatch\") }
    }
    channel cachespecificrange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachespecificrange\") }
    }
    channel specificrange {
      lefttype = extend
      righttype = extend
      defaultString = \"1-240:1\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificrange\") }
    }
    channel cachespecificwedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachespecificwedges\") }
    }
    channel specificwedges {
      lefttype = extend
      righttype = extend
      defaultString = \"0-\"+(ch(\"wedgecount\")-1)
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificwedges\") }
    }
    channel doclampfirst {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../doclampfirst\") }
    }
    channel doclamplast {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../doclamplast\") }
    }
    channel domergeframes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../domergeframes\") }
    }
    channel mergeframes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframes\") }
    }
    channel mergespecificrange {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"f1\")+\"-\"+chs(\"f2\")+\":\"+chs(\"f3\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../mergespecificrange\") }
    }
    channel domergewedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../domergewedges\") }
    }
    channel mergewedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedges\") }
    }
    channel mergewedgeidxrangemin {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedgeidxrangemin\") }
    }
    channel mergewedgeidxrangemax {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedgeidxrangemax\") }
    }
    channel mergespecificwedges {
      lefttype = extend
      righttype = extend
      defaultString = \"0-1\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../mergespecificwedges\") }
    }
    channel alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../alfprogress\") }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../saveretry\") }
    }
    channel enableperfmon {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enableperfmon\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mkpath\") }
    }
    channel savebackground {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../savebackground\") }
    }
    channel local_single {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_single\") }
    }
    channel local_is_CPU_number_set {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_CPUs_to_use {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_useminfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_useminfreemem\") }
    }
    channel local_minfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemem\") }
    }
    channel local_minfreemempct {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemempct\") }
    }
    channel wedgecount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 value = 1 0 expr = ch(\"../../nwedgeattribs\") }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tprerender\") }
    }
    channel prerender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../prerender\") }
    }
    channel lprerender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lprerender\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpreframe\") }
    }
    channel preframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../preframe\") }
    }
    channel lpreframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpreframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostframe\") }
    }
    channel postframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postframe\") }
    }
    channel lpostframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostframe\") }
    }
    channel tpostwrite {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostwrite\") }
    }
    channel postwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postwrite\") }
    }
    channel lpostwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostwrite\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostrender\") }
    }
    channel postrender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postrender\") }
    }
    channel lpostrender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostrender\") }
    }
    channel framestr {
      lefttype = extend
      righttype = extend
      defaultString = "(ifs(ch(\"timedependent\"),\".\" + padzero(4,floor(ch(\"frame\"))) + ifs(frac(abs(ch(\"frame\"))) > 0, \".\" + substr(ftoa(frac(ch(\"frame\"))) + \"000\", 2, 3),\"\"),\"\"))"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../framestr\") }
    }
    channel versionstr {
      lefttype = extend
      righttype = extend
      defaultString = \"v\"+chs(\"version\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../versionstr\") }
    }
    channel wedgestr {
      lefttype = extend
      righttype = extend
      defaultString = \"w\"+@wedgeindex
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../wedgestr\") }
    }
    channel cachename {
      lefttype = extend
      righttype = extend
      defaultString = "chs(\"basename\")(ifs(ch(\"enableversion\"), \"_\" + chs(\"versionstr\"),\"\"))(ifs(ch(\"enablewedging\"), \"_\" + chs(\"wedgestr\"),\"\"))chs(\"framestr\")chs(\"filetype\")"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachename\") }
    }
    channel cachedir {
      lefttype = extend
      righttype = extend
      defaultString = "(chs(\"basedir\") + \"/\" + chs(\"basename\"))(ifs(ch(\"enableversion\"), \"/\" + chs(\"versionstr\"),\"\"))(ifs(ch(\"enablewedging\"), \"/\" + chs(\"wedgestr\"),\"\"))"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachedir\") }
    }
    channel local_usehoudinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_houdinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../trange\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.parm"
Content-Type: text/plain

{
version 0.8
labelparm	[ 0	locks=0 ]	(	""	)
quicksetup	[ 0	locks=0 ]	(	"menu"	)
folder5	[ 0	locks=0 ]	(	0	0	0	0	0	)
filemethod	[ 0	locks=0 ]	(	[ filemethod	0 ] 	)
timedependent	[ 0	locks=0 ]	(	[ timedependent	1 ] 	)
basename	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ basename	$OS ] 	)
filetype	[ 0	locks=0 ]	(	[ filetype	0 ] 	)
file	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ file	$HIP/geo/$OS/$HIPNAME.$OS.$F4.bgeo.sc ] 	)
openfiledir	[ 0	locks=0 ]	(	0	)
basedir	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ basedir	$HIP/geo ] 	)
openbasedir	[ 0	locks=0 ]	(	0	)
enableversion	[ 0	locks=0 ]	(	[ enableversion	1 ] 	)
version	[ 0	locks=0 ]	(	[ version	1 ] 	)
versiondown	[ 0	locks=0 ]	(	0	)
versionup	[ 0	locks=0 ]	(	0	)
hasinput	[ 0	locks=0 ]	(	[ hasinput	0 ] 	)
folder1	[ 0	locks=0 ]	(	0	0	)
folder10	[ 0	locks=0 ]	(	1	)
soppath	[ 0	locks=0 ]	(	../../OUT_CACHE	)
folder4	[ 0	locks=0 ]	(	1	)
trange	[ 8	locks=0 ]	(	[ trange	1 ] 	)
cachesim	[ 0	locks=0 ]	(	[ cachesim	0 ] 	)
f	[ 0	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
fmenu	[ 0	locks=0 ]	(	"fstartend"	)
substeps	[ 0	locks=0 ]	(	[ substeps	1 ] 	)
useframeoverride	[ 0	locks=0 ]	(	[ useframeoverride	0 ] 	)
frameoverride	[ 0	locks=0 ]	(	[ frameoverride	1 ] 	)
cachespecificrange	[ 0	locks=0 ]	(	[ cachespecificrange	0 ] 	)
specificrange	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ specificrange	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")` ] 	)
folder7	[ 0	locks=0 ]	(	0	)
enablewedging	[ 0	locks=0 ]	(	[ enablewedging	0 ] 	)
wedgecount	[ 0	locks=0 ]	(	[ wedgecount	1 ] 	)
cachespecificwedges	[ 0	locks=0 ]	(	[ cachespecificwedges	0 ] 	)
specificwedges	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ specificwedges	0-`ch(\"wedgecount\")-1` ] 	)
nwedgeattribs	[ 0	locks=0 ]	(	[ nwedgeattribs	0 ] 	)
folder6	[ 0	locks=0 ]	(	0	)
doclampfirst	[ 0	locks=0 ]	(	[ doclampfirst	0 ] 	)
clampfirst	[ 0	locks=0 ]	(	[ clampfirst	0 ] 	)
doclamplast	[ 0	locks=0 ]	(	[ doclamplast	0 ] 	)
clamplast	[ 0	locks=0 ]	(	[ clamplast	0 ] 	)
sepparm6	[ 0	locks=0 ]	(	)
domergeframes	[ 0	locks=0 ]	(	[ domergeframes	0 ] 	)
mergeframes	[ 0	locks=0 ]	(	[ mergeframes	0 ] 	)
mergeframerange	[ 0	locks=0 ]	(	[ mergeframerange1	0 ] 	[ mergeframerange2	0 ] 	[ mergeframerange3	0 ] 	)
mergesubsteps	[ 0	locks=0 ]	(	[ mergesubsteps	0 ] 	)
mergespecificrange	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ mergespecificrange	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")` ] 	)
domergewedges	[ 0	locks=0 ]	(	[ domergewedges	0 ] 	)
mergewedges	[ 0	locks=0 ]	(	[ mergewedges	0 ] 	)
mergewedgeidxrange	[ 0	locks=0 ]	(	[ mergewedgeidxrangemin	0 ] 	[ mergewedgeidxrangemax	1 ] 	)
mergespecificwedges	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ mergespecificwedges	0-1 ] 	)
folder3	[ 0	locks=0 ]	(	0	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
initsim	[ 0	locks=0 ]	(	[ initsim	0 ] 	)
alfprogress	[ 0	locks=0 ]	(	[ alfprogress	0 ] 	)
savebackground	[ 0	locks=0 ]	(	[ savebackground	1 ] 	)
savebackuphip	[ 0	locks=0 ]	(	"off"	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
folder2	[ 0	locks=0 ]	(	0	)
enableperfmon	[ 0	locks=0 ]	(	[ enableperfmon	0 ] 	)
openperffile	[ 0	locks=0 ]	(	0	)
folder12	[ 0	locks=0 ]	(	0	)
frame	[ 0	locks=0 ]	(	[ frame	0 ] 	)
framestr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ framestr	"`ifs(ch(\"timedependent\"),\".\" + padzero(4,floor(ch(\"frame\"))) + ifs(frac(abs(ch(\"frame\"))) > 0, \".\" + substr(ftoa(frac(ch(\"frame\"))) + \"000\", 2, 3),\"\"),\"\")`" ] 	)
versionstr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ versionstr	v`chs(\"version\")` ] 	)
wedgestr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ wedgestr	"w`pdgattrib(\"wedgeindex\", 0)`" ] 	)
sepparm2	[ 0	locks=0 ]	(	)
cachedir	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ cachedir	"`chs(\"basedir\") + \"/\" + chs(\"basename\")``ifs(ch(\"enableversion\"), \"/\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"/\" + chs(\"wedgestr\"),\"\")`" ] 	)
cachename	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ cachename	"`chs(\"basename\")``ifs(ch(\"enableversion\"), \"_\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"_\" + chs(\"wedgestr\"),\"\")``chs(\"framestr\")``chs(\"filetype\")`" ] 	)
sopoutput	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ sopoutput	"ifs(ch('filemethod'),chs('file'),chs('cachedir') + '/' + chs('cachename'))" ] 	)
sepparm5	[ 0	locks=0 ]	(	)
perffile	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ perffile	"chs(\"cachedir\") + \"/hprofile/\" + chs(\"basename\") + strreplace(chs(\"versionstr\"),\"/\",\".\") + strreplace(chs(\"wedgestr\"),\"/\",\".\")+ \".hperf\"" ] 	)
descriptivelabel	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ descriptivelabel	"ifs(ch(\"filemethod\"),chsraw(\"file\"),strreplace(strreplace(chs(\"cachename\"),chs(\"basename\"),chsraw(\"basename\")),chs(\"framestr\"),\".\" + '$F' + 4))" ] 	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_cachemode	[ 0	locks=0 ]	(	"2"	)
sethip	[ 0	locks=0 ]	(	"off"	)
sepparm	[ 0	locks=0 ]	(	)
framesperbatch	[ 0	locks=0 ]	(	[ framesperbatch	10 ] 	)
cookwhen	[ 0	locks=0 ]	(	"0"	)
tprerender	[ 0	locks=0 ]	(	[ tprerender	0 ] 	)
prerender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ prerender	"" ] 	)
lprerender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lprerender	hscript ] 	)
tpreframe	[ 0	locks=0 ]	(	[ tpreframe	0 ] 	)
preframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ preframe	"" ] 	)
lpreframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpreframe	hscript ] 	)
tpostframe	[ 0	locks=0 ]	(	[ tpostframe	0 ] 	)
postframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postframe	"" ] 	)
lpostframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostframe	hscript ] 	)
tpostwrite	[ 0	locks=0 ]	(	[ tpostwrite	0 ] 	)
postwrite	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postwrite	"" ] 	)
lpostwrite	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostwrite	hscript ] 	)
tpostrender	[ 0	locks=0 ]	(	[ tpostrender	0 ] 	)
postrender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postrender	"" ] 	)
lpostrender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostrender	hscript ] 	)
topscheduler	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"2"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
enablepdgservice	[ 0	locks=0 ]	(	"off"	)
pdgservicename	[ 0	locks=0 ]	(	ropfetch	)
folder8	[ 0	locks=0 ]	(	0	0	0	0	0	0	)
folder9	[ 0	locks=0 ]	(	0	0	)
folder13	[ 0	locks=0 ]	(	1	)
folder14	[ 0	locks=0 ]	(	1	)
folder15	[ 0	locks=0 ]	(	0	)
folder16	[ 0	locks=0 ]	(	1	)
folder17	[ 0	locks=0 ]	(	1	)
folder18	[ 0	locks=0 ]	(	1	)
folder19	[ 0	locks=0 ]	(	0	)
localfolder	[ 0	locks=0 ]	(	0	)
local_single	[ 0	locks=0 ]	(	[ local_single	0 ] 	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	[ local_is_CPU_number_set	0 ] 	)
local_CPUs_to_use	[ 0	locks=0 ]	(	[ local_CPUs_to_use	1 ] 	)
local_usehoudinimaxthreads	[ 0	locks=0 ]	(	[ local_usehoudinimaxthreads	0 ] 	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	[ local_houdinimaxthreads	0 ] 	)
folder26	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	[ local_useminfreemem	0 ] 	)
local_minfreemem	[ 0	locks=0 ]	(	[ local_minfreemem	0 ] 	)
local_minfreemempct	[ 0	locks=0 ]	(	[ local_minfreemempct	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache/filecache1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.order"
Content-Type: text/plain

7
localscheduler
output0
partitionbyattribute1
partitionbynode1
switch0
switch2
filecache1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_cache.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/render.init"
Content-Type: text/plain

type = rop_geometry
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/render.def"
Content-Type: text/plain

comment ""
position 1.5 -0.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	OUT_CACHE 1 1 "input1"
}
inputs
{
0 	OUT_CACHE 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere.sidefx.com
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/render.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "if(ch(\"../trange\")== 0 && ch(\"../useframeoverride\"),ch(\"../frameoverride\"),ch(\"../f1\"))" }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { length = 0 value = 240 240 expr = "if(ch(\"../trange\")== 0 && ch(\"../useframeoverride\"),ch(\"../frameoverride\"),ch(\"../f2\"))" }
    }
    channel initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../framegeneration\")==2 }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../saveretry\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "if(ch(\"../trange\")== 0 && ch(\"../useframeoverride\"),1,ch(\"../f3\") / ch(\"../substeps\"))" }
    }
    channel alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../alfprogress\") }
    }
    channel execute {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../execute\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mkpath\") }
    }
    channel savebackground {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../savebackground\") }
    }
    channel take {
      lefttype = extend
      righttype = extend
      defaultString = \"_current_\"
      flags = 0
      segment { length = 0 expr = chs(\"../take\") }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "(ch(\"../timedependent\") && ch(\"../trange\")) || (ch(\"../timedependent\") && !ch(\"../trange\") && ch(\"../useframeoverride\"))" }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tprerender\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tpreframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tpostframe\") }
    }
    channel tpostwrite {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tpostwrite\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tpostrender\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/render.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 8	locks=0 ]	(	[ execute	0 ] 	)
executebackground	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 8	locks=0 ]	(	[ trange	0 ] 	)
f	[ 0	locks=0 ]	(	[ f1	1 ] 	[ f2	240 ] 	[ f3	1 ] 	)
take	[ 0	locks=0 ]	(	[ take	_current_ ] 	)
soppath	[ 0	locks=0 ]	(	../OUT_CACHE	)
sopoutput	[ 0	locks=0 ]	(	`chs(\"../sopoutput\")`	)
xformtype	[ 0	locks=0 ]	(	"none"	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
initsim	[ 8	locks=0 ]	(	[ initsim	0 ] 	)
alfprogress	[ 8	locks=0 ]	(	[ alfprogress	0 ] 	)
reportnetwork	[ 0	locks=0 ]	(	"off"	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
savebackground	[ 0	locks=0 ]	(	[ savebackground	1 ] 	)
tprerender	[ 8	locks=0 ]	(	[ tprerender	1 ] 	)
prerender	[ 0	locks=0 ]	(	`chs(\"../prerender\")`	)
lprerender	[ 0	locks=0 ]	(	`chs(\"../lprerender\")`	)
tpreframe	[ 8	locks=0 ]	(	[ tpreframe	1 ] 	)
preframe	[ 0	locks=0 ]	(	`chs(\"../preframe\")`	)
lpreframe	[ 0	locks=0 ]	(	`chs(\"../lpreframe\")`	)
tpostframe	[ 8	locks=0 ]	(	[ tpostframe	1 ] 	)
postframe	[ 0	locks=0 ]	(	`chs(\"../postframe\")`	)
lpostframe	[ 0	locks=0 ]	(	`chs(\"../lpostframe\")`	)
tpostwrite	[ 8	locks=0 ]	(	[ tpostwrite	1 ] 	)
postwrite	[ 0	locks=0 ]	(	`chs(\"../postwrite\")`	)
lpostwrite	[ 0	locks=0 ]	(	`chs(\"../lpostwrite\")`	)
tpostrender	[ 8	locks=0 ]	(	[ tpostrender	1 ] 	)
postrender	[ 0	locks=0 ]	(	`chs(\"../postrender\")`	)
lpostrender	[ 0	locks=0 ]	(	`chs(\"../lpostrender\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/render.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.init"
Content-Type: text/plain

type = block_end
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -8.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	timeshift1 1 1 "input1"
}
inputs
{
0 	timeshift1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.spareparmdef"
Content-Type: text/plain

    parm {
        name    "itermethod"
        baseparm
        label   "Iteration Method"
        export  none
    }
    parm {
        name    "method"
        baseparm
        label   "Gather Method"
        export  none
    }
    parm {
        name    "iterations"
        baseparm
        label   "Iterations"
        export  none
    }
    parm {
        name    "startvalue"
        baseparm
        label   "Start Value"
        export  none
    }
    parm {
        name    "increment"
        baseparm
        label   "Increment"
        export  none
    }
    parm {
        name    "class"
        baseparm
        label   "Piece Elements"
        export  none
    }
    parm {
        name    "useattrib"
        baseparm
        label   "Piece Attribute"
        joinnext
        export  none
    }
    parm {
        name    "attrib"
        baseparm
        label   "Piece Attribute"
        export  none
    }
    parm {
        name    "usemaxiter"
        baseparm
        label   "Max Iterations"
        joinnext
        export  none
    }
    parm {
        name    "maxiter"
        baseparm
        label   "Max Iterations"
        export  none
    }
    parm {
        name    "blockpath"
        baseparm
        label   "Default Block Path"
        export  none
    }
    parm {
        name    "templatepath"
        baseparm
        label   "Piece Block Path"
        export  none
    }
    parm {
        name    "resetcookpass"
        baseparm
        label   "Reset Cached Pass"
        export  none
    }
    parm {
        name    "dosinglepass"
        baseparm
        label   "Do Single Pass"
        joinnext
        export  none
    }
    parm {
        name    "singlepass"
        baseparm
        label   "Single Pass"
        export  none
    }
    parm {
        name    "stopcondition"
        baseparm
        label   "Stop Condition"
        export  none
    }
    parm {
        name    "multithread"
        baseparm
        label   "Multithread when Compiled"
        export  none
    }
    parm {
        name    "nframes"
        label   "Number of Frames"
        type    string
        default { [ "import pdg\nnode = hou.pwd()\n\nparent = node.parent()\n\nif parent.evalParm(\"domergeframes\"):\n    pattern_str = \"\"\n    if parent.evalParm(\"mergeframes\") == 0:\n        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),\n                                 parent.evalParm(\"f2\"),\n                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 \n    elif parent.evalParm(\"mergeframes\") == 1:\n        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),\n                                 parent.evalParm(\"mergeframerange2\"),\n                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))\n    elif parent.evalParm(\"mergeframes\") == 2:\n        pattern_str = parent.evalParm(\"mergespecificrange\")\n        \n    return len(pdg.ValuePattern(pattern_str).floatArray(inclusive=True))\n\nreturn 0" python ] }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.chn"
Content-Type: text/plain

{
    channel nframes {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = "import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergeframes\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergeframes\") == 0:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),
                                 parent.evalParm(\"f2\"),
                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 
    elif parent.evalParm(\"mergeframes\") == 1:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),
                                 parent.evalParm(\"mergeframerange2\"),
                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))
    elif parent.evalParm(\"mergeframes\") == 2:
        pattern_str = parent.evalParm(\"mergespecificrange\")
        
    return len(pdg.ValuePattern(pattern_str).floatArray(inclusive=True))

return 0" language = python }
    }
    channel iterations {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = "ch(\"nframes\") + 1" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.parm"
Content-Type: text/plain

{
version 0.8
itermethod	[ 0	locks=0 ]	(	"count"	)
method	[ 0	locks=0 ]	(	"merge"	)
iterations	[ 0	locks=0 ]	(	[ iterations	10 ] 	)
startvalue	[ 0	locks=0 ]	(	0	)
increment	[ 0	locks=0 ]	(	1	)
class	[ 0	locks=0 ]	(	"point"	)
useattrib	[ 0	locks=0 ]	(	"on"	)
attrib	[ 0	locks=0 ]	(	""	)
usemaxiter	[ 0	locks=0 ]	(	"off"	)
maxiter	[ 0	locks=0 ]	(	10	)
blockpath	[ 0	locks=0 ]	(	../foreach_begin2	)
templatepath	[ 0	locks=0 ]	(	../foreach_begin2	)
resetcookpass	[ 0	locks=0 ]	(	0	)
dosinglepass	[ 0	locks=0 ]	(	"off"	)
singlepass	[ 0	locks=0 ]	(	0	)
stopcondition	[ 0	locks=0 ]	(	0	)
multithread	[ 0	locks=0 ]	(	"off"	)
nframes	[ 0	locks=0 ]	(	[ nframes	"import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergeframes\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergeframes\") == 0:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),
                                 parent.evalParm(\"f2\"),
                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 
    elif parent.evalParm(\"mergeframes\") == 1:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),
                                 parent.evalParm(\"mergeframerange2\"),
                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))
    elif parent.evalParm(\"mergeframes\") == 2:
        pattern_str = parent.evalParm(\"mergespecificrange\")
        
    return len(pdg.ValuePattern(pattern_str).floatArray(inclusive=True))

return 0" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_frame.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin2.init"
Content-Type: text/plain

type = block_begin
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -6.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	switchif_wedged 2 1 "input1"
}
inputs
{
0 	switchif_wedged 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin2.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"input"	)
blockpath	[ 0	locks=0 ]	(	../foreach_frame	)
resetcookpass	[ 0	locks=0 ]	(	0	)
createmetablock	[ 0	locks=0 ]	(	0	)
label1	[ 0	locks=0 ]	(	"iteration, numiterations, value, ivalue"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_begin2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count2.init"
Content-Type: text/plain

type = block_begin
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 9.5 -6.15
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.75 0.4 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count2.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"metadata"	)
blockpath	[ 0	locks=0 ]	(	../foreach_frame	)
resetcookpass	[ 0	locks=0 ]	(	0	)
createmetablock	[ 0	locks=0 ]	(	0	)
label1	[ 0	locks=0 ]	(	"iteration, numiterations, value, ivalue"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/foreach_count2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_input.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_input.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -2.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	OUT_CACHE 1 1 "input1"
2 	switchif_static_vs_range 2 1 "input2"
}
inputs
{
0 	OUT_CACHE 0 1
1 	switchif_static_vs_range 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_input.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../loadfromdisk\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_input.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_input.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.init"
Content-Type: text/plain

type = timeshift
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -7.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	foreach_begin2 0 1 "input1"
}
inputs
{
0 	foreach_begin2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "method"
        baseparm
        label   "Method"
        export  none
    }
    parm {
        name    "frame"
        baseparm
        label   "Frame"
        export  none
    }
    parm {
        name    "integerframe"
        baseparm
        label   "Integer Frames"
        export  none
    }
    parm {
        name    "time"
        baseparm
        label   "Time"
        export  none
    }
    parm {
        name    "rangeclamp"
        baseparm
        label   "Clamp"
        export  none
    }
    parm {
        name    "frange"
        baseparm
        label   "Start/End Frame"
        export  none
    }
    parm {
        name    "trange"
        baseparm
        label   "Start/End Time"
        export  none
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }
    parm {
        name    "frametoread"
        label   "Frame"
        type    string
        default { [ "import pdg\nnode = hou.pwd()\n\nparent = node.parent()\n\nif parent.evalParm(\"domergeframes\"):\n    pattern_str = \"\"\n    if parent.evalParm(\"mergeframes\") == 0:\n        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),\n                                 parent.evalParm(\"f2\"),\n                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 \n    elif parent.evalParm(\"mergeframes\") == 1:\n        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),\n                                 parent.evalParm(\"mergeframerange2\"),\n                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))\n    elif parent.evalParm(\"mergeframes\") == 2:\n        pattern_str = parent.evalParm(\"mergespecificrange\")\n        \n    pattern = [ \"{:.5g}\".format(x) for x in pdg.ValuePattern(pattern_str).floatArray(inclusive=True)]    \n\n    return pattern[node.parm(\"ivalue\").evalAsInt()]\n    \nreturn 0" python ] }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "ivalue"
        label   "Iteration"
        type    integer
        default { "detail(-1,\"ivalue\",0)" }
        range   { 0 10 }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.chn"
Content-Type: text/plain

{
    channel frame {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"frametoread\") }
    }
    channel time {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $T }
    }
    channel frange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FSTART }
    }
    channel frange2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FEND }
    }
    channel trange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $TSTART }
    }
    channel trange2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $TEND }
    }
    channel frametoread {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = "import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergeframes\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergeframes\") == 0:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),
                                 parent.evalParm(\"f2\"),
                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 
    elif parent.evalParm(\"mergeframes\") == 1:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),
                                 parent.evalParm(\"mergeframerange2\"),
                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))
    elif parent.evalParm(\"mergeframes\") == 2:
        pattern_str = parent.evalParm(\"mergespecificrange\")
        
    pattern = [ \"{:.5g}\".format(x) for x in pdg.ValuePattern(pattern_str).floatArray(inclusive=True)]    

    return pattern[node.parm(\"ivalue\").evalAsInt()]
    
return 0" language = python }
    }
    channel ivalue {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = detail(-1,\"ivalue\",0) }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"byframe"	)
frame	[ 0	locks=0 ]	(	[ frame	0 ] 	)
integerframe	[ 0	locks=0 ]	(	"off"	)
time	[ 0	locks=0 ]	(	[ time	0 ] 	)
rangeclamp	[ 0	locks=0 ]	(	"none"	)
frange	[ 0	locks=0 ]	(	[ frange1	0 ] 	[ frange2	0 ] 	)
trange	[ 0	locks=0 ]	(	[ trange1	0 ] 	[ trange2	0 ] 	)
spare_input0	[ 0	locks=0 ]	(	../foreach_count2	)
frametoread	[ 0	locks=0 ]	(	[ frametoread	"import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergeframes\"):
    pattern_str = \"\"
    if parent.evalParm(\"mergeframes\") == 0:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"f1\"),
                                 parent.evalParm(\"f2\"),
                                 parent.evalParm(\"f3\")/parent.evalParm(\"substeps\"))                                 
    elif parent.evalParm(\"mergeframes\") == 1:
        pattern_str = '{}-{}:{}'.format(parent.evalParm(\"mergeframerange1\"),
                                 parent.evalParm(\"mergeframerange2\"),
                                 parent.evalParm(\"mergeframerange3\")/parent.evalParm(\"mergesubsteps\"))
    elif parent.evalParm(\"mergeframes\") == 2:
        pattern_str = parent.evalParm(\"mergespecificrange\")
        
    pattern = [ \"{:.5g}\".format(x) for x in pdg.ValuePattern(pattern_str).floatArray(inclusive=True)]    

    return pattern[node.parm(\"ivalue\").evalAsInt()]
    
return 0" ] 	)
ivalue	[ 0	locks=0 ]	(	[ ivalue	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_collect_frames.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_collect_frames.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -9.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switchif_wedged 2 1 "input1"
2 	foreach_frame 1 1 "input2"
}
inputs
{
0 	switchif_wedged 0 1
1 	foreach_frame 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_collect_frames.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../domergeframes\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_collect_frames.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"on"	)
type1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"expr"	)
expr1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"all"	)
attribowner1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"point"	)
attributes1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	""	)
attribvaltype1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"equal"	)
attribval1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	0	)
attribsval1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	""	)
counttype1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"points"	)
countgroup1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	""	)
countcomp1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"equal"	)
countval1	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_collect_frames.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CACHE.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CACHE.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 0.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribcast1 1 1 "input1"
}
inputs
{
0 	attribcast1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CACHE.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CACHE.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 3.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switchif1 1 1 "input1"
}
inputs
{
0 	switchif1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0 ]	(	`chs(\"../deleteattributes\")`	)
dovtxdel	[ 0	locks=0 ]	(	"on"	)
vtxdel	[ 0	locks=0 ]	(	`chs(\"../deleteattributes\")`	)
doprimdel	[ 0	locks=0 ]	(	"on"	)
primdel	[ 0	locks=0 ]	(	`chs(\"../deleteattributes\")`	)
dodtldel	[ 0	locks=0 ]	(	"on"	)
dtldel	[ 0	locks=0 ]	(	`chs(\"../deleteattributes\")`	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.init"
Content-Type: text/plain

type = attribcast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 1.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	groupdelete1 1 1 "input1"
}
inputs
{
0 	groupdelete1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.multiparm"
Content-Type: text/plain

3
class# ../class#
attribs# ../attribs#
precision# ../precision#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.chn"
Content-Type: text/plain

{
    channel numcasts {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../numcasts\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	)
preferredprecision	[ 0	locks=0 ]	(	unchanged	)
folder1	[ 0	locks=0 ]	(	0	)
numcasts	[ 8	locks=0 ]	(	[ numcasts	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribcast1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/groupdelete1.init"
Content-Type: text/plain

type = groupdelete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/groupdelete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 2.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribdelete1 1 1 "input1"
}
inputs
{
0 	attribdelete1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/groupdelete1.parm"
Content-Type: text/plain

{
version 0.8
deletions	[ 0	locks=0 ]	(	1	)
removegrp	[ 0	locks=0 ]	(	"on"	)
enable1	[ 0	locks=0 ]	(	"on"	)
grouptype1	[ 0	locks=0 ]	(	"any"	)
group1	[ 0	locks=0 ]	(	`chs(\"../deletegroups\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/groupdelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_back.init"
Content-Type: text/plain

type = file
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_back.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -1.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_back.chn"
Content-Type: text/plain

{
    channel index {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FF-ch(\"f1\") }
    }
    channel reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reload\") }
    }
    channel missingframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../missingframe\") }
    }
    channel loadtype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../loadtype\") }
    }
    channel packedviewedit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../packedviewedit\") }
    }
    channel packexpanded {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../packexpanded\") }
    }
    channel retry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../delayload\") }
    }
    channel delayload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../delayload\") }
    }
    channel cachesize {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../cachesize\") }
    }
    channel prefetch {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../prefetch\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_back.parm"
Content-Type: text/plain

{
version 0.8
filemode	[ 0	locks=0 ]	(	"read"	)
file	[ 8	locks=0 ]	(	`chs(\"../sopoutput\")`	)
reload	[ 8	locks=0 ]	(	[ reload	0 ] 	)
objpattern	[ 0	locks=0 ]	(	*	)
geodatapath	[ 0	locks=0 ]	(	""	)
missingframe	[ 8	locks=0 ]	(	[ missingframe	0 ] 	)
loadtype	[ 0	locks=0 ]	(	[ loadtype	0 ] 	)
packedviewedit	[ 0	locks=0 ]	(	[ packedviewedit	0 ] 	)
viewportlod	[ 0	locks=0 ]	(	"box"	)
packexpanded	[ 0	locks=0 ]	(	[ packexpanded	1 ] 	)
delayload	[ 8	locks=0 ]	(	[ delayload	0 ] 	)
mkpath	[ 0	locks=0 ]	(	"on"	)
cachesize	[ 0	locks=0 ]	(	[ cachesize	0 ] 	)
prefetch	[ 0	locks=0 ]	(	[ prefetch	0 ] 	)
f	[ 0	locks=0 ]	(	1	24	)
index	[ 0	locks=0 ]	(	[ index	0 ] 	)
wrap	[ 0	locks=0 ]	(	"cycle"	)
retry	[ 0	locks=0 ]	(	[ retry	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_back.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/error1.init"
Content-Type: text/plain

type = error
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/error1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -3.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switchif_input 1 1 "input1"
}
inputs
{
0 	switchif_input 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/error1.chn"
Content-Type: text/plain

{
    channel enable1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filemethod\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/error1.parm"
Content-Type: text/plain

{
version 0.8
numerror	[ 0	locks=0 ]	(	1	)
errormsg1	[ 0	locks=0 ]	(	"Explicit file does not support versioning, wedging and different cache types on default. Edit the Geometry File to take advantage of those features. "	)
severity1	[ 0	locks=0 ]	(	"message"	)
enable1	[ 0	locks=0 ]	(	[ enable1	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/error1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_static_vs_range.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_static_vs_range.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -10.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	timeshift2 1 1 "input1"
1 	switchif_collect_frames 1 1 "input2"
}
inputs
{
0 	timeshift2 0 1
1 	switchif_collect_frames 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_static_vs_range.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../timedependent\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_static_vs_range.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif_static_vs_range.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.init"
Content-Type: text/plain

type = topnetmgr
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.def"
Content-Type: text/plain

comment ""
position -4.5 -5.0902
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.parm"
Content-Type: text/plain

{
version 0.8
cookcontrolssection	[ 0	locks=0 ]	(	0	)
generatestatic	[ 0	locks=0 ]	(	0	)
cookbutton	[ 0	locks=0 ]	(	0	)
dirtybutton	[ 0	locks=0 ]	(	0	)
cancelbutton	[ 0	locks=0 ]	(	0	)
taskgraphsection	[ 0	locks=0 ]	(	0	)
savetaskgraph	[ 0	locks=0 ]	(	0	)
loadtaskgraph	[ 0	locks=0 ]	(	0	)
taskgraphfile	[ 0	locks=0 ]	(	$HIP/$HIPNAME.taskgraph.$F.py	)
taskgraphautosave	[ 0	locks=0 ]	(	"off"	)
taskgraphsaverate	[ 0	locks=0 ]	(	10	)
schedulersection	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	localscheduler	)
regenerationtype	[ 0	locks=0 ]	(	"0"	)
evaluationtime	[ 0	locks=0 ]	(	"0"	)
customtime	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.init"
Content-Type: text/plain

type = localscheduler
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.def"
Content-Type: text/plain

comment ""
position 1.5 -1.15
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
folder5	[ 0	locks=0 ]	(	0	)
maxprocsmenu	[ 0	locks=0 ]	(	"0"	)
maxprocs	[ 0	locks=0 ]	(	1	)
verbose	[ 0	locks=0 ]	(	"off"	)
pdg_waitforfailures	[ 0	locks=0 ]	(	"off"	)
folder4	[ 0	locks=0 ]	(	0	)
pdg_workingdir	[ 0	locks=0 ]	(	$HIP	)
pdg_workitemdatasource	[ 0	locks=0 ]	(	"0"	)
pdg_compressworkitemdata	[ 0	locks=0 ]	(	"on"	)
pdg_validateoutputs	[ 0	locks=0 ]	(	"on"	)
pdg_checkexpectedoutputs	[ 0	locks=0 ]	(	"on"	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_mapmode	[ 0	locks=0 ]	(	"0"	)
pdg_usemapzone	[ 0	locks=0 ]	(	"off"	)
pdg_mapzone	[ 0	locks=0 ]	(	$PDG_PATHMAP_ZONE	)
sepparm3	[ 0	locks=0 ]	(	)
folder1	[ 0	locks=0 ]	(	0	)
tempdirmenu	[ 0	locks=0 ]	(	"1"	)
tempdirappendpid	[ 0	locks=0 ]	(	"on"	)
tempdircustom	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/$HIPNAME/pdgtemp	)
socketcallbacks	[ 0	locks=0 ]	(	1	)
folder0_2	[ 0	locks=0 ]	(	0	)
local_single	[ 0	locks=0 ]	(	"off"	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	"off"	)
local_CPUs_to_use	[ 0	locks=0 ]	(	1	)
folder6	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	"0"	)
local_minfreemem	[ 0	locks=0 ]	(	0	)
local_minfreemempct	[ 0	locks=0 ]	(	0	)
folder2	[ 0	locks=0 ]	(	0	)
local_echandleby	[ 0	locks=0 ]	(	"0"	)
local_echandleall	[ 0	locks=0 ]	(	"on"	)
local_eccustomcode	[ 0	locks=0 ]	(	1	)
sepparm	[ 0	locks=0 ]	(	)
local_maximumretries	[ 0	locks=0 ]	(	3	)
local_addfailcountattr	[ 0	locks=0 ]	(	"off"	)
local_failcountattr	[ 0	locks=0 ]	(	failurecount	)
sepparm4	[ 0	locks=0 ]	(	)
local_enabletimeout	[ 0	locks=0 ]	(	"off"	)
local_maxtime	[ 0	locks=0 ]	(	0	)
local_handletimeout	[ 0	locks=0 ]	(	"0"	)
folder3	[ 0	locks=0 ]	(	0	)
local_usehoudinimaxthreads	[ 0	locks=0 ]	(	"off"	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	0	)
local_requireswindow	[ 0	locks=0 ]	(	"off"	)
local_envunset	[ 0	locks=0 ]	(	""	)
local_envmulti	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.init"
Content-Type: text/plain

type = labs::topfilecache::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.def"
Content-Type: text/plain

comment ""
position -2.5 -0.0902
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.multiparm"
Content-Type: text/plain

11
attrib# ../../attrib#
wedgetype# ../../wedgetype#
minvalue# ../../minvalue#
maxvalue# ../../maxvalue#
randsample# ../../randsample#
randomseed# ../../randomseed#
dobatchsize# ../../dobatchsize#
batchsize# ../../batchsize#
geopath# ../../geopath#
values# ../../values#
valuesdefault# ../../valuesdefault#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.spareparmdef"
Content-Type: text/plain

    parm {
        name    "labelparm"
        baseparm
        label   "Spacer"
        nolabel
        joinnext
        export  none
    }
    parm {
        name    "quicksetup"
        baseparm
        label   " "
        export  none
    }
    group {
        name    "folder8"
        label   "ROP Geometry"

        parm {
            name    "filemethod"
            baseparm
            label   "File Method"
            joinnext
            export  none
        }
        parm {
            name    "timedependent"
            baseparm
            label   "Time Dependent Cache"
            export  none
        }
        parm {
            name    "basename"
            baseparm
            label   "Base Name"
            joinnext
            export  none
        }
        parm {
            name    "filetype"
            baseparm
            label   "File Type"
            nolabel
            export  none
        }
        parm {
            name    "file"
            baseparm
            label   "Geometry File"
            joinnext
            export  none
        }
        parm {
            name    "openfiledir"
            baseparm
            label   "Open Directory"
            nolabel
            export  none
        }
        parm {
            name    "basedir"
            baseparm
            label   "Base Folder"
            joinnext
            export  none
        }
        parm {
            name    "openbasedir"
            baseparm
            label   "Open Directory"
            nolabel
            export  none
        }
        parm {
            name    "enableversion"
            baseparm
            label   "Enable Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "version"
            baseparm
            label   "Version"
            joinnext
            export  none
        }
        parm {
            name    "versiondown"
            baseparm
            label   "Down Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "versionup"
            baseparm
            label   "Up Version"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "hasinput"
            baseparm
            label   "Has Input"
            invisible
            export  none
        }
        group {
            name    "folder9"
            label   "Caching"

            groupcollapsible {
                name    "folder13"
                label   "Geometry"
                grouptag { "group_default" "1" }

                parm {
                    name    "soppath"
                    baseparm
                    label   "SOP Path"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder14"
                label   "Sequence"
                hidewhentab "{ timedependent != 1 }"
                grouptag { "group_default" "1" }

                parm {
                    name    "trange"
                    baseparm
                    label   "Evaluate As"
                    joinnext
                    export  none
                }
                parm {
                    name    "cachesim"
                    baseparm
                    label   "Simulation"
                    export  none
                }
                parm {
                    name    "f"
                    baseparm
                    label   "Frame Range"
                    joinnext
                    export  none
                }
                parm {
                    name    "fmenu"
                    baseparm
                    label   "F Menu"
                    export  none
                }
                parm {
                    name    "substeps"
                    baseparm
                    label   "Substeps"
                    export  none
                }
                parm {
                    name    "useframeoverride"
                    baseparm
                    label   "Override Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "frameoverride"
                    baseparm
                    label   "Override Frame"
                    export  none
                }
                parm {
                    name    "cachespecificrange"
                    baseparm
                    label   "Cache Specific Range"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "specificrange"
                    baseparm
                    label   "List of Frames"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder15"
                label   "Enable Wedging"
                grouptag { "sidefx::header_parm" "wedgecount" }
                grouptag { "sidefx::header_toggle" "enablewedging" }

                parm {
                    name    "enablewedging"
                    baseparm
                    label   "Enable Wedging"
                    export  none
                }
                parm {
                    name    "wedgecount"
                    baseparm
                    label   "Wedge Count"
                    export  none
                }
                parm {
                    name    "cachespecificwedges"
                    baseparm
                    label   "Cache Specific Wedges"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "specificwedges"
                    baseparm
                    label   "List of Wedges"
                    export  none
                }
                multiparm {
                    name    "nwedgeattribs"
                    label    "Number of Attributes"
                    baseparm
                    default 0
                    disablewhen "{ enablewedging != 1 }"
                    parmtag { "autoscope" "0000000000000000" }
                    parmtag { "autoselect" "0000000000000000" }
                    parmtag { "multistartoffset" "1" }

                    parm {
                        name    "attrib#"
                        baseparm
                        label   "Attribute Name"
                        export  none
                    }
                    parm {
                        name    "wedgetype#"
                        baseparm
                        label   "Wedge Type"
                        nolabel
                        export  none
                    }
                    parm {
                        name    "minvalue#"
                        baseparm
                        label   "Min Value"
                        export  none
                    }
                    parm {
                        name    "maxvalue#"
                        baseparm
                        label   "Max Value"
                        export  none
                    }
                    parm {
                        name    "randsample#"
                        baseparm
                        label   "Random Sample"
                        export  none
                    }
                    parm {
                        name    "dobatchsize#"
                        baseparm
                        label   "Do Batch Size"
                        nolabel
                        export  none
                    }
                    parm {
                        name    "batchsize#"
                        baseparm
                        label   "Batch Size"
                        export  none
                    }
                    parm {
                        name    "randomseed#"
                        baseparm
                        label   "Seed"
                        export  none
                    }
                    parm {
                        name    "values#"
                        baseparm
                        label   "List of Values"
                        export  none
                    }
                    parm {
                        name    "geopath#"
                        baseparm
                        label   "Geometry Path"
                        export  none
                    }
                    parm {
                        name    "valuesdefault#"
                        baseparm
                        label   "Default Value"
                        export  none
                    }
                }

            }

            groupcollapsible {
                name    "folder16"
                label   "Load from File"
                hidewhen "{ trange == static enablewedging == 0 }"

                parm {
                    name    "doclampfirst"
                    baseparm
                    label   "Clamp First Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "clampfirst"
                    baseparm
                    label   "Clamp First Frame"
                    export  none
                }
                parm {
                    name    "doclamplast"
                    baseparm
                    label   "Clamp Last Frame"
                    nolabel
                    joinnext
                    export  none
                }
                parm {
                    name    "clamplast"
                    baseparm
                    label   "Clamp Last Frame"
                    export  none
                }
                parm {
                    name    "sepparm6"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "domergeframes"
                    baseparm
                    label   "Merge Frames"
                    export  none
                }
                parm {
                    name    "mergeframes"
                    baseparm
                    label   "Merge Frames"
                    export  none
                }
                parm {
                    name    "mergeframerange"
                    baseparm
                    label   "Frame Range"
                    export  none
                }
                parm {
                    name    "mergesubsteps"
                    baseparm
                    label   "Substeps"
                    export  none
                }
                parm {
                    name    "mergespecificrange"
                    baseparm
                    label   "List of Frames"
                    export  none
                }
                parm {
                    name    "domergewedges"
                    baseparm
                    label   "Merge Wedges"
                    export  none
                }
                parm {
                    name    "mergewedges"
                    baseparm
                    label   "Merge Wedges"
                    export  none
                }
                parm {
                    name    "mergewedgeidxrange"
                    baseparm
                    label   "Wedge Range"
                    export  none
                }
                parm {
                    name    "mergespecificwedges"
                    baseparm
                    label   "List of Wedges"
                    export  none
                }
            }

        }

        group {
            name    "folder9_1"
            label   "Settings"

            groupcollapsible {
                name    "folder17"
                label   "Save"
                grouptag { "group_default" "0" }

                parm {
                    name    "mkpath"
                    baseparm
                    label   "Create Intermediate Directories"
                    export  none
                }
                parm {
                    name    "initsim"
                    baseparm
                    label   "Initialize Simulation OPs"
                    export  none
                }
                parm {
                    name    "alfprogress"
                    baseparm
                    label   "Alfred Style Progress"
                    export  none
                }
                parm {
                    name    "savebackground"
                    baseparm
                    label   "Save in Background"
                    export  none
                }
                parm {
                    name    "savebackuphip"
                    baseparm
                    label   "Save Backup .hip File"
                    export  none
                }
                parm {
                    name    "saveretry"
                    baseparm
                    label   "Save Retries"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder18"
                label   "Performance Logging"
                grouptag { "group_default" "0" }

                parm {
                    name    "enableperfmon"
                    baseparm
                    label   "Enable Performance Monitor Logging"
                    export  none
                }
                parm {
                    name    "openperffile"
                    baseparm
                    label   "Open Current Profile"
                    export  none
                }
            }

            groupcollapsible {
                name    "folder19"
                label   "Path Construction"
                hidewhen "{ filemethod != constructed }"
                grouptag { "group_default" "0" }
                grouptag { "sidefx::header_parm" "sopoutput" }

                parm {
                    name    "frame"
                    baseparm
                    label   "Frame"
                    export  none
                }
                parm {
                    name    "framestr"
                    baseparm
                    label   "Frame String"
                    export  none
                }
                parm {
                    name    "versionstr"
                    baseparm
                    label   "Version String"
                    export  none
                }
                parm {
                    name    "wedgestr"
                    baseparm
                    label   "Wedge String"
                    export  none
                }
                parm {
                    name    "sepparm2"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "cachedir"
                    baseparm
                    label   "Cache Folder"
                    export  none
                }
                parm {
                    name    "cachename"
                    baseparm
                    label   "Cache Name"
                    export  none
                }
                parm {
                    name    "sopoutput"
                    baseparm
                    label   "Output File"
                    export  none
                }
                parm {
                    name    "sepparm5"
                    baseparm
                    label   "Spacer"
                    export  none
                }
                parm {
                    name    "perffile"
                    baseparm
                    label   "Performance Profile"
                    export  none
                }
                parm {
                    name    "descriptivelabel"
                    baseparm
                    label   "Descriptive Label"
                    export  none
                }
            }

        }

    }

    group {
        name    "folder8_1"
        label   "ROP Fetch"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_cachemode"
            baseparm
            label   "Cache Mode"
            export  none
        }
        parm {
            name    "sethip"
            baseparm
            label   "Reset $HIP On Cook"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "framesperbatch"
            baseparm
            label   "Frames per Batch"
            export  none
        }
        parm {
            name    "cookwhen"
            baseparm
            label   "Cook Batch When"
            export  none
        }
    }

    group {
        name    "folder8_2"
        label   "Scripts"

        parm {
            name    "tprerender"
            baseparm
            label   "Pre-Render Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "prerender"
            baseparm
            label   "Pre-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lprerender"
            baseparm
            label   "Pre-Render Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpreframe"
            baseparm
            label   "Pre-Frame Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "preframe"
            baseparm
            label   "Pre-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpreframe"
            baseparm
            label   "Pre-Frame Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostframe"
            baseparm
            label   "Post-Frame Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postframe"
            baseparm
            label   "Post-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostframe"
            baseparm
            label   "Post-Frame Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostwrite"
            baseparm
            label   "Post-Write Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postwrite"
            baseparm
            label   "Post-Write Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostwrite"
            baseparm
            label   "Post-Write Script Language"
            nolabel
            export  none
        }
        parm {
            name    "tpostrender"
            baseparm
            label   "Post-Render Script"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postrender"
            baseparm
            label   "Post-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostrender"
            baseparm
            label   "Post-Render Script Language"
            nolabel
            export  none
        }
    }

    group {
        name    "folder8_3"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            export  none
        }
        parm {
            name    "sepparm3"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "pdg_workitemlabel"
            baseparm
            label   "Work Item Label"
            joinnext
            export  none
        }
        parm {
            name    "pdg_workitemlabelexpr"
            baseparm
            label   "Label Expression"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            joinnext
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            nolabel
            export  none
        }
    }

    group {
        name    "folder8_4"
        label   "Service"

        parm {
            name    "enablepdgservice"
            baseparm
            label   "Use ROP Fetch Service"
            export  none
        }
        parm {
            name    "pdgservicename"
            baseparm
            label   "Service Name"
            export  none
        }
    }

    group {
        name    "folder8_5"
        label   "Schedulers"

        groupsimple {
            name    "localfolder"
            label   "Local"

            parm {
                name    "local_single"
                label   "Single"
                type    toggle
                default { "0" }
                help    "Enabling this will force one work item to be executed at a time."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_is_CPU_number_set"
                label   "local_is_CPU_number_set"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will use the CPUs per Task value when deciding the number of CPUs to use per work item. Otherwise the work item will be assumed to consume one CPU."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_CPUs_to_use"
                label   "Slots Per Work Item"
                type    integer
                default { "1" }
                help    "The number of Slots consumed by each work item.  This work item will only be run by the scheduler if at least this number of Slots are available.  The total number of Slots available is specified by the 'Total Slots' parm on the scheduler node."
                disablewhen "{ local_is_CPU_number_set == 0 }"
                range   { 1! 64 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_usehoudinimaxthreads"
                label   "local_usehoudinimaxthreads"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will set the HOUDINI_MAXTHREADS environment variable to the value specified in Houdini Max Threads."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_houdinimaxthreads"
                label   "Houdini Max Threads"
                type    integer
                default { "0" }
                help    "Maximum number of threads to use for each work item in Houdini. This sets the HOUDINI_MAXTHREADS environment variable value."
                disablewhen "{ local_usehoudinimaxthreads == 0 }"
                range   { 0 10 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            groupsimple {
                name    "folder26"
                label   "Minimum Available Memory"
                grouptag { "group_type" "simple" }

                parm {
                    name    "local_useminfreemem"
                    label   "Rule"
                    type    ordinal
                    default { "0" }
                    menu {
                        "0" "No Minimum"
                        "1" "MB Available"
                        "2" "Percent Available"
                    }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemem"
                    label   "Minimum MB"
                    type    float
                    default { "0" }
                    help    "The minimum available memory in Megabytes.  Available memory is the amount of memory that can be used by a process without going into swap."
                    disablewhen "{ local_useminfreemem != 1 }"
                    range   { 0 128000 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemempct"
                    label   "Minimum Percent"
                    type    float
                    default { "0" }
                    help    "The minimum available memory as a percentage of the system's total memory."
                    disablewhen "{ local_useminfreemem != 2 }"
                    range   { 0 1 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
            }

        }

    }


--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.chn"
Content-Type: text/plain

{
    channel hasinput {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = argc(opinput(\".\",0)) }
    }
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f2\") }
    }
    channel clampfirst {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../clampfirst\") }
    }
    channel clamplast {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../clamplast\") }
    }
    channel mergeframerange1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange1\") }
    }
    channel mergeframerange2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange2\") }
    }
    channel mergeframerange3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframerange3\") }
    }
    channel mergesubsteps {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergesubsteps\") }
    }
    channel frame {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frame\") }
    }
    channel sopoutput {
      lefttype = extend
      righttype = extend
      defaultString = \"/home/ati/geo/filecache1/v1/filecache1_v1.0001.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../sopoutput\") }
    }
    channel perffile {
      lefttype = extend
      righttype = extend
      defaultString = \"/home/ati/geo/filecache1/v1/hprofile/filecache1v1w.hperf\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../perffile\") }
    }
    channel descriptivelabel {
      lefttype = extend
      righttype = extend
      defaultString = \"chs(\\\"../../basename\\\")_v1.$F4.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../descriptivelabel\") }
    }
    channel basedir {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/geo\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basedir\") }
    }
    channel basename {
      lefttype = extend
      righttype = extend
      defaultString = \"$OS\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basename\") }
    }
    channel filemethod {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filemethod\") }
    }
    channel file {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/geo/$OS/$HIPNAME.$OS.$F4.bgeo.sc\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../file\") }
    }
    channel filetype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filetype\") }
    }
    channel enableversion {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enableversion\") }
    }
    channel version {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../version\") }
    }
    channel timedependent {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../timedependent\") }
    }
    channel enablewedging {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enablewedging\") }
    }
    channel cachesim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachesim\") }
    }
    channel initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../initsim\") }
    }
    channel useframeoverride {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../useframeoverride\") }
    }
    channel frameoverride {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frameoverride\") }
    }
    channel substeps {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../substeps\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f3\") }
    }
    channel framesperbatch {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../framesperbatch\") }
    }
    channel cachespecificrange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachespecificrange\") }
    }
    channel specificrange {
      lefttype = extend
      righttype = extend
      defaultString = \"1-240:1\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificrange\") }
    }
    channel cachespecificwedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../cachespecificwedges\") }
    }
    channel specificwedges {
      lefttype = extend
      righttype = extend
      defaultString = \"0-\"+(ch(\"wedgecount\")-1)
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificwedges\") }
    }
    channel doclampfirst {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../doclampfirst\") }
    }
    channel doclamplast {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../doclamplast\") }
    }
    channel domergeframes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../domergeframes\") }
    }
    channel mergeframes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergeframes\") }
    }
    channel mergespecificrange {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"f1\")+\"-\"+chs(\"f2\")+\":\"+chs(\"f3\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../mergespecificrange\") }
    }
    channel domergewedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../domergewedges\") }
    }
    channel mergewedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedges\") }
    }
    channel mergewedgeidxrangemin {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedgeidxrangemin\") }
    }
    channel mergewedgeidxrangemax {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mergewedgeidxrangemax\") }
    }
    channel mergespecificwedges {
      lefttype = extend
      righttype = extend
      defaultString = \"0-1\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../mergespecificwedges\") }
    }
    channel alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../alfprogress\") }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../saveretry\") }
    }
    channel enableperfmon {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enableperfmon\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../mkpath\") }
    }
    channel savebackground {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../savebackground\") }
    }
    channel local_single {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_single\") }
    }
    channel local_is_CPU_number_set {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_CPUs_to_use {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_useminfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_useminfreemem\") }
    }
    channel local_minfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemem\") }
    }
    channel local_minfreemempct {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemempct\") }
    }
    channel wedgecount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 value = 1 0 expr = ch(\"../../nwedgeattribs\") }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tprerender\") }
    }
    channel prerender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../prerender\") }
    }
    channel lprerender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lprerender\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpreframe\") }
    }
    channel preframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../preframe\") }
    }
    channel lpreframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpreframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostframe\") }
    }
    channel postframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postframe\") }
    }
    channel lpostframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostframe\") }
    }
    channel tpostwrite {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostwrite\") }
    }
    channel postwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postwrite\") }
    }
    channel lpostwrite {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostwrite\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../tpostrender\") }
    }
    channel postrender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../postrender\") }
    }
    channel lpostrender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../lpostrender\") }
    }
    channel framestr {
      lefttype = extend
      righttype = extend
      defaultString = "(ifs(ch(\"timedependent\"),\".\" + padzero(4,floor(ch(\"frame\"))) + ifs(frac(abs(ch(\"frame\"))) > 0, \".\" + substr(ftoa(frac(ch(\"frame\"))) + \"000\", 2, 3),\"\"),\"\"))"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../framestr\") }
    }
    channel versionstr {
      lefttype = extend
      righttype = extend
      defaultString = \"v\"+chs(\"version\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../versionstr\") }
    }
    channel wedgestr {
      lefttype = extend
      righttype = extend
      defaultString = \"w\"+@wedgeindex
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../wedgestr\") }
    }
    channel cachename {
      lefttype = extend
      righttype = extend
      defaultString = "chs(\"basename\")(ifs(ch(\"enableversion\"), \"_\" + chs(\"versionstr\"),\"\"))(ifs(ch(\"enablewedging\"), \"_\" + chs(\"wedgestr\"),\"\"))chs(\"framestr\")chs(\"filetype\")"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachename\") }
    }
    channel cachedir {
      lefttype = extend
      righttype = extend
      defaultString = "(chs(\"basedir\") + \"/\" + chs(\"basename\"))(ifs(ch(\"enableversion\"), \"/\" + chs(\"versionstr\"),\"\"))(ifs(ch(\"enablewedging\"), \"/\" + chs(\"wedgestr\"),\"\"))"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachedir\") }
    }
    channel local_usehoudinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_houdinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../trange\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.parm"
Content-Type: text/plain

{
version 0.8
labelparm	[ 0	locks=0 ]	(	""	)
quicksetup	[ 0	locks=0 ]	(	"menu"	)
folder5	[ 0	locks=0 ]	(	0	0	0	0	0	)
filemethod	[ 0	locks=0 ]	(	[ filemethod	0 ] 	)
timedependent	[ 0	locks=0 ]	(	[ timedependent	1 ] 	)
basename	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ basename	$OS ] 	)
filetype	[ 0	locks=0 ]	(	[ filetype	0 ] 	)
file	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ file	$HIP/geo/$OS/$HIPNAME.$OS.$F4.bgeo.sc ] 	)
openfiledir	[ 0	locks=0 ]	(	0	)
basedir	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ basedir	$HIP/geo ] 	)
openbasedir	[ 0	locks=0 ]	(	0	)
enableversion	[ 0	locks=0 ]	(	[ enableversion	1 ] 	)
version	[ 0	locks=0 ]	(	[ version	1 ] 	)
versiondown	[ 0	locks=0 ]	(	0	)
versionup	[ 0	locks=0 ]	(	0	)
hasinput	[ 0	locks=0 ]	(	[ hasinput	0 ] 	)
folder1	[ 0	locks=0 ]	(	0	0	)
folder10	[ 0	locks=0 ]	(	1	)
soppath	[ 0	locks=0 ]	(	../../OUT_CACHE	)
folder4	[ 0	locks=0 ]	(	1	)
trange	[ 8	locks=0 ]	(	[ trange	1 ] 	)
cachesim	[ 0	locks=0 ]	(	[ cachesim	0 ] 	)
f	[ 0	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
fmenu	[ 0	locks=0 ]	(	"fstartend"	)
substeps	[ 0	locks=0 ]	(	[ substeps	1 ] 	)
useframeoverride	[ 0	locks=0 ]	(	[ useframeoverride	0 ] 	)
frameoverride	[ 0	locks=0 ]	(	[ frameoverride	1 ] 	)
cachespecificrange	[ 0	locks=0 ]	(	[ cachespecificrange	0 ] 	)
specificrange	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ specificrange	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")` ] 	)
folder7	[ 0	locks=0 ]	(	0	)
enablewedging	[ 0	locks=0 ]	(	[ enablewedging	0 ] 	)
wedgecount	[ 0	locks=0 ]	(	[ wedgecount	1 ] 	)
cachespecificwedges	[ 0	locks=0 ]	(	[ cachespecificwedges	0 ] 	)
specificwedges	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ specificwedges	0-`ch(\"wedgecount\")-1` ] 	)
nwedgeattribs	[ 0	locks=0 ]	(	[ nwedgeattribs	0 ] 	)
folder6	[ 0	locks=0 ]	(	0	)
doclampfirst	[ 0	locks=0 ]	(	[ doclampfirst	0 ] 	)
clampfirst	[ 0	locks=0 ]	(	[ clampfirst	0 ] 	)
doclamplast	[ 0	locks=0 ]	(	[ doclamplast	0 ] 	)
clamplast	[ 0	locks=0 ]	(	[ clamplast	0 ] 	)
sepparm6	[ 0	locks=0 ]	(	)
domergeframes	[ 0	locks=0 ]	(	[ domergeframes	0 ] 	)
mergeframes	[ 0	locks=0 ]	(	[ mergeframes	0 ] 	)
mergeframerange	[ 0	locks=0 ]	(	[ mergeframerange1	0 ] 	[ mergeframerange2	0 ] 	[ mergeframerange3	0 ] 	)
mergesubsteps	[ 0	locks=0 ]	(	[ mergesubsteps	0 ] 	)
mergespecificrange	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ mergespecificrange	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")` ] 	)
domergewedges	[ 0	locks=0 ]	(	[ domergewedges	0 ] 	)
mergewedges	[ 0	locks=0 ]	(	[ mergewedges	0 ] 	)
mergewedgeidxrange	[ 0	locks=0 ]	(	[ mergewedgeidxrangemin	0 ] 	[ mergewedgeidxrangemax	1 ] 	)
mergespecificwedges	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ mergespecificwedges	0-1 ] 	)
folder3	[ 0	locks=0 ]	(	0	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
initsim	[ 0	locks=0 ]	(	[ initsim	0 ] 	)
alfprogress	[ 0	locks=0 ]	(	[ alfprogress	0 ] 	)
savebackground	[ 0	locks=0 ]	(	[ savebackground	1 ] 	)
savebackuphip	[ 0	locks=0 ]	(	"off"	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
folder2	[ 0	locks=0 ]	(	0	)
enableperfmon	[ 0	locks=0 ]	(	[ enableperfmon	0 ] 	)
openperffile	[ 0	locks=0 ]	(	0	)
folder12	[ 0	locks=0 ]	(	0	)
frame	[ 0	locks=0 ]	(	[ frame	0 ] 	)
framestr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ framestr	"`ifs(ch(\"timedependent\"),\".\" + padzero(4,floor(ch(\"frame\"))) + ifs(frac(abs(ch(\"frame\"))) > 0, \".\" + substr(ftoa(frac(ch(\"frame\"))) + \"000\", 2, 3),\"\"),\"\")`" ] 	)
versionstr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ versionstr	v`chs(\"version\")` ] 	)
wedgestr	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ wedgestr	"w`pdgattrib(\"wedgeindex\", 0)`" ] 	)
sepparm2	[ 0	locks=0 ]	(	)
cachedir	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ cachedir	"`chs(\"basedir\") + \"/\" + chs(\"basename\")``ifs(ch(\"enableversion\"), \"/\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"/\" + chs(\"wedgestr\"),\"\")`" ] 	)
cachename	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ cachename	"`chs(\"basename\")``ifs(ch(\"enableversion\"), \"_\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"_\" + chs(\"wedgestr\"),\"\")``chs(\"framestr\")``chs(\"filetype\")`" ] 	)
sopoutput	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ sopoutput	"ifs(ch('filemethod'),chs('file'),chs('cachedir') + '/' + chs('cachename'))" ] 	)
sepparm5	[ 0	locks=0 ]	(	)
perffile	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ perffile	"chs(\"cachedir\") + \"/hprofile/\" + chs(\"basename\") + strreplace(chs(\"versionstr\"),\"/\",\".\") + strreplace(chs(\"wedgestr\"),\"/\",\".\")+ \".hperf\"" ] 	)
descriptivelabel	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ descriptivelabel	"ifs(ch(\"filemethod\"),chsraw(\"file\"),strreplace(strreplace(chs(\"cachename\"),chs(\"basename\"),chsraw(\"basename\")),chs(\"framestr\"),\".\" + '$F' + 4))" ] 	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_cachemode	[ 0	locks=0 ]	(	"0"	)
sethip	[ 0	locks=0 ]	(	"off"	)
sepparm	[ 0	locks=0 ]	(	)
framesperbatch	[ 0	locks=0 ]	(	[ framesperbatch	10 ] 	)
cookwhen	[ 0	locks=0 ]	(	"0"	)
tprerender	[ 0	locks=0 ]	(	[ tprerender	0 ] 	)
prerender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ prerender	"" ] 	)
lprerender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lprerender	hscript ] 	)
tpreframe	[ 0	locks=0 ]	(	[ tpreframe	0 ] 	)
preframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ preframe	"" ] 	)
lpreframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpreframe	hscript ] 	)
tpostframe	[ 0	locks=0 ]	(	[ tpostframe	0 ] 	)
postframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postframe	"" ] 	)
lpostframe	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostframe	hscript ] 	)
tpostwrite	[ 0	locks=0 ]	(	[ tpostwrite	0 ] 	)
postwrite	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postwrite	"" ] 	)
lpostwrite	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostwrite	hscript ] 	)
tpostrender	[ 0	locks=0 ]	(	[ tpostrender	0 ] 	)
postrender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ postrender	"" ] 	)
lpostrender	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ lpostrender	hscript ] 	)
topscheduler	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"2"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
enablepdgservice	[ 0	locks=0 ]	(	"off"	)
pdgservicename	[ 0	locks=0 ]	(	ropfetch	)
folder8	[ 0	locks=0 ]	(	0	0	0	0	0	0	)
folder9	[ 0	locks=0 ]	(	0	0	)
folder13	[ 0	locks=0 ]	(	1	)
folder14	[ 0	locks=0 ]	(	1	)
folder15	[ 0	locks=0 ]	(	0	)
folder16	[ 0	locks=0 ]	(	2	)
folder17	[ 0	locks=0 ]	(	1	)
folder18	[ 0	locks=0 ]	(	1	)
folder19	[ 0	locks=0 ]	(	0	)
localfolder	[ 0	locks=0 ]	(	0	)
local_single	[ 0	locks=0 ]	(	[ local_single	0 ] 	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	[ local_is_CPU_number_set	0 ] 	)
local_CPUs_to_use	[ 0	locks=0 ]	(	[ local_CPUs_to_use	1 ] 	)
local_usehoudinimaxthreads	[ 0	locks=0 ]	(	[ local_usehoudinimaxthreads	0 ] 	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	[ local_houdinimaxthreads	0 ] 	)
folder26	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	[ local_useminfreemem	0 ] 	)
local_minfreemem	[ 0	locks=0 ]	(	[ local_minfreemem	0 ] 	)
local_minfreemempct	[ 0	locks=0 ]	(	[ local_minfreemempct	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.inp"
Content-Type: text/plain

1
0 -2.0816681711721685e-16 9.9945454545454542 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/output0.def"
Content-Type: text/plain

comment ""
position -2.9501 -19.5091
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch6 2 1 "input1"
}
inputs
{
0 	switch6 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.init"
Content-Type: text/plain

type = pythonprocessor
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.def"
Content-Type: text/plain

comment ""
position -1.535 -16.4623
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	genericgenerator1 0 1 "input1"
}
inputs
{
0 	genericgenerator1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.multiparm"
Content-Type: text/plain

11
attrib# ../attrib#
wedgetype# ../wedgetype#
minvalue# ../minvalue#
maxvalue# ../maxvalue#
randsample# ../randsample#
dobatchsize# ../dobatchsize#
batchsize# ../batchsize#
randomseed# ../randomseed#
values# ../values#
valuesdefault# ../valuesdefault#
geopath# ../geopath#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.spareparmdef"
Content-Type: text/plain

    parm {
        name    "savenodescript"
        baseparm
        label   "Save to Python Script"
        joinnext
        export  none
    }
    parm {
        name    "savenodehda"
        baseparm
        label   "Save to Digital Asset"
        export  none
    }
    parm {
        name    "sepparm2"
        baseparm
        label   "Separator"
        export  none
    }
    group {
        name    "processor4"
        label   "Processor"

        parm {
            name    "pdg_workitemgeneration"
            baseparm
            label   "Generate When"
            export  none
        }
        parm {
            name    "pdg_command"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "sepparm"
            baseparm
            label   "Separator"
            export  none
        }
        group {
            name    "callbacks6"
            label   "Generate"

            parm {
                name    "generate"
                baseparm
                label   "onGenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_1"
            label   "Regenerate"

            parm {
                name    "useregeneratestatic"
                baseparm
                label   "Use Custom Regenerate Implementation"
                export  none
            }
            parm {
                name    "regeneratestatic"
                baseparm
                label   "onRegenerate Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_2"
            label   "Add Internal Dependencies"

            parm {
                name    "addinternaldependencies"
                baseparm
                label   "onAddInternalDependencies Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_3"
            label   "Cook Task"

            parm {
                name    "cooktask"
                baseparm
                label   "onCookTask Callback"
                export  none
            }
        }

        group {
            name    "callbacks6_4"
            label   "Node Options"

            parm {
                name    "servicename"
                baseparm
                label   "Service Name"
                export  none
            }
            parm {
                name    "sepparm3"
                baseparm
                label   "Separator"
                export  none
            }
            parm {
                name    "alwaysregenerate"
                baseparm
                label   "Always Regenerate"
                export  none
            }
            parm {
                name    "dirtyonregenerate"
                baseparm
                label   "Dirty on Regenerate"
                export  none
            }
            parm {
                name    "dirtyonincomplete"
                baseparm
                label   "Dirty on Incomplete"
                export  none
            }
            parm {
                name    "sepparm4"
                baseparm
                label   "Separator"
                export  none
            }
            parm {
                name    "requiresgeneratedinputs"
                baseparm
                label   "Requires Generated Inputs"
                export  none
            }
            parm {
                name    "requiresscenefile"
                baseparm
                label   "Requires Scene File"
                export  none
            }
        }

    }

    group {
        name    "processor4_1"
        label   "Files"

        multiparm {
            name    "pdgnodedeps"
            label    "File Dependencies"
            baseparm
            default 1

            parm {
                name    "pdgnodedep#"
                baseparm
                label   "File Path"
                export  none
            }
        }

    }

    group {
        name    "processor4_2"
        label   "Schedulers"

        parm {
            name    "topscheduler"
            baseparm
            label   "TOP Scheduler Override"
            joinnext
            export  none
        }
        parm {
            name    "addjobparms"
            baseparm
            label   "Add Job Parms"
            nolabel
            export  none
        }
        parm {
            name    "pdg_workitempriority"
            baseparm
            label   "Work Item Priority"
            export  none
        }
        parm {
            name    "pdg_workitempriorityexpr"
            baseparm
            label   "Priority Expression"
            export  none
        }
    }

    parm {
        name    "wedgecount"
        label   "Wedge Count"
        type    integer
        default { "1" }
        range   { 1! 50 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    multiparm {
        name    "nwedgeattribs"
        label    "Number of Attributes"
        default 0
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "autoselect" "0000000000000000" }
        parmtag { "multistartoffset" "1" }

        groupsimple {
            name    "folder4_#"
            label   "Attribute #"

            parm {
                name    "attrib#"
                label   "Attribute Name"
                type    string
                joinnext
                default { "wedgeattribute#" }
            }
            parm {
                name    "wedgetype#"
                label   "Wedge Type"
                type    ordinal
                nolabel
                default { "0" }
                menu {
                    "range"     "Custom Range"
                    "list"      "List of Values"
                    "attrib"    "Attribute Values"
                }
            }
            parm {
                name    "minvalue#"
                label   "Min Value"
                type    float
                default { "0" }
                hidewhen "{ wedgetype# != range }"
                range   { 0 10 }
            }
            parm {
                name    "maxvalue#"
                label   "Max Value"
                type    float
                default { "1" }
                hidewhen "{ wedgetype# != range }"
                range   { 0 10 }
            }
            parm {
                name    "randsample#"
                label   "Random Sample"
                type    toggle
                default { "0" }
                hidewhen "{ wedgetype# != range }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "dobatchsize#"
                label   "Do Batch Size"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                hidewhen "{ wedgetype# != range } { randsample# == 1 }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "batchsize#"
                label   "Batch Size"
                type    integer
                default { "1" }
                disablewhen "{ dobatchsize# != 1 }"
                hidewhen "{ wedgetype# != range } { randsample# == 1 }"
                range   { 1! 10 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "randomseed#"
                label   "Seed"
                type    integer
                default { "0" }
                hidewhen "{ wedgetype# != range } { randsample# != 1 }"
                range   { 0! 100 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "values#"
                label   "List of Values"
                type    string
                default { "0-1" }
                hidewhen "{ wedgetype# != list }"
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "geopath#"
                label   "Geometry Path"
                type    oppath
                default { "" }
                hidewhen "{ wedgetype# != attrib }"
                parmtag { "opfilter" "!!SOP!!" }
                parmtag { "oprelative" "." }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "valuesdefault#"
                label   "Default Value"
                type    float
                default { "0" }
                hidewhen "{ wedgetype# == range }"
                range   { 0 10 }
            }
        }

    }

    parm {
        name    "sepparm5"
        baseparm
        label   "Separator"
        export  none
    }
    parm {
        name    "pdg_workitemlabel"
        baseparm
        label   "Work Item Label"
        export  none
    }
    parm {
        name    "pdg_workitemlabelexpr"
        baseparm
        label   "Label Expression"
        nolabel
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.chn"
Content-Type: text/plain

{
    channel wedgecount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../nwedgeattribs\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.parm"
Content-Type: text/plain

{
version 0.8
savenodescript	[ 0	locks=0 ]	(	0	)
savenodehda	[ 0	locks=0 ]	(	0	)
sepparm2	[ 0	locks=0 ]	(	)
processor	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_command	[ 0	locks=0 ]	(	""	)
sepparm	[ 0	locks=0 ]	(	)
callbacks	[ 0	locks=0 ]	(	0	0	0	0	0	)
generate	[ 0	locks=0 ]	(	"# Called when this node should generate new work items from upstream items.
#
# self             -   A reference to the current pdg.Node instance
# item_holder      -   A pdg.WorkItemHolder for constructing and adding work items
# upstream_items   -   The list of work items in the node above, or empty list if there are no inputs
# generation_type  -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate

import hou
import pdg
import random
node = hou.pwd()

def pad(l, content, width):
    l.extend([content] * (width - len(l)))
    return l
    
# Build list of elements based on user choice.

def defaultValues(attribname,nwedges,default):
    values = [default] * nwedges
    metas = []
    metas.append(attribname)
    metas.append(hou.attribData.Float)    
    return values, metas

def buildValues(nwedges, nattribs):
    attribs = []
    metas   = []
    for i in range(0,nattribs):
        values = []
        meta   = []
        stri   = str(i+1)    
        attribname  = node.evalParm('attrib' + stri)    
        wedgetype   = node.evalParm('wedgetype' + stri)
            
        if wedgetype == 0: # Custom Range
            min = node.evalParm('minvalue' + stri)
            max = node.evalParm('maxvalue' + stri)
            
            if node.evalParm('randsample' + stri): # Random sample             
                seed = node.evalParm('randomseed' + stri)   
                for wedge in range(0,nwedges):
                    value = hou.hmath.fit01(hou.hmath.rand(wedge + seed),min,max)    
                    values.append(value)
            else:
                if node.evalParm('dobatchsize' + stri): # Batched         
                    batchsize = node.evalParm('batchsize' + stri)  
                    
                    nbatchsize =  float(nwedges / batchsize)
                    
                    for wedge in range(0,nwedges):
                        value = hou.hmath.fit(wedge%nbatchsize,0,nbatchsize-1,min,max) 
                        value = hou.hmath.fit(floor((wedge) / nbatchsize),0,batchsize-1,min,max)  
                        values.append(value)                      
                else: # Periodic
                    for wedge in range(0,nwedges):
                        value = hou.hmath.fit(wedge,0,nwedges-1,min,max)
                        values.append(value)

            meta.append(attribname)
            meta.append(hou.attribData.Float)
            metas.append(meta)
            attribs.append(values)
                     
        elif wedgetype == 1: # List of Values
            list = node.evalParm('values' + stri)
            default = node.evalParm('valuesdefault' + stri)
            
            pattern = pdg.ValuePattern(list)
            values = pattern.floatArray(inclusive=True)
         
            if len(values) < nwedges:
                values = values + [default] * (nwedges - len(values))                
           
            meta.append(attribname)
            meta.append(hou.attribData.Float)
            metas.append(meta)
            attribs.append(values)            
        else:
            # From geometry attributes  
            # Supports point and primitive attributes
            # Supports float,int,string
            geonode = node.parm('geopath' + stri).evalAsNode()
            default = node.evalParm('valuesdefault' + stri)
            if not geonode:
                values, meta = defaultValues(attribname,nwedges,default)
                attribs.append(values)
                metas.append(meta)
                continue  
                
            geo = geonode.geometry()  
            
            if not geo:
                values, meta = defaultValues(attribname,nwedges,default)
                attribs.append(values)
                metas.append(meta)
                continue 
                
            attrib = geo.findPointAttrib(attribname)
            if not attrib:
                attrib = geo.findPrimAttrib(attribname)               
                if not attrib: # No attribute found.
                    values, meta = defaultValues(attribname,nwedges,default)
                    attribs.append(values)
                    metas.append(meta)
                    continue 
                    
            # Array types not supported.        
            if attrib.isArrayType():
                values, meta = defaultValues(attribname,nwedges,default)        
                attribs.append(values)
                metas.append(meta)               
           
            if attrib.type() == hou.attribType.Point:
                for point in geo.points():            
                    values.append(point.attribValue(attrib))      
            else:
                for prim in geo.prims():
                    values.append(prim.attirbVaue(attirb))
                    
            # Pad values if the number of elements is less then the number of wedges.
            if len(values) < nwedges:
                pad(values,attrib.defaultValue(),nwedges)
                
            meta.append(attribname)
            meta.append(attrib.dataType())            
            metas.append(meta)
            attribs.append(values)         
    
    return attribs, metas

def constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=False, upstream_item=None, upstream_index=None):

    # Create wedges the given number of times, however if we have inputs with wedges, just copy the input,
    # so niters == 1 in that case.
    for j in range(0,niters): # new item per wedge   
        new_item = None
        # The lookup index to the array attribute has to be changed when cloning the input.
        # In this case use the wedgenum attribute to distribute the newly wedged values.
        lookup = j
        if clone:
            if upstream_index > 0:
                lookup = upstream_index
            new_item = item_holder.addWorkItem(cloneResultData=True,
                                               preserveType=True,
                                               parent=upstream_item)                                               
        else:
            new_item = item_holder.addWorkItem(index=j)
            
        new_item.setIntAttrib('wedgecount',nwedges)
        new_item.setIntAttrib('wedgetotal',nwedges)
        new_item.setIntAttrib('wedgeindex',lookup)
        new_item.setIntAttrib('wedgenum',lookup)
        
        if attribnames:
            new_item.setStringAttrib('wedgeattribs',attribnames)
        
        
        for i in range(0,nattribs): # assign attributes
            stri = str(i+1) 
            attribname = metas[i][0]
            attribtype = metas[i][1]
            if attribtype == hou.attribData.Float:
                new_item.setFloatAttrib(attribname,values[i][lookup])
            if attribtype == hou.attribData.Int:
                new_item.setIntAttrib(attribname,values[i][lookup])
            if attribtype == hou.attribData.String:
                new_item.setStringAttrib(attribname,values[i][lookup])   
                
def generate(nwedges, nattribs):
    values, metas = buildValues(nwedges, nattribs) 
    
    niters = nwedges
    
    attribnames = []
    for meta in metas:
        attribname = meta[0]
        if attribname:
            attribnames.append(meta[0])  
              
    if upstream_items:
        for upstream_item in upstream_items:          
            if upstream_item.attrib('wedgetotal') is not None:
                niters = 1   
                
            upstream_wedgenmum = 0
            if upstream_item.attrib('wedgenum'):
                upstream_wedgenmum = upstream_item.intAttribValue('wedgenum')
            constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=True, upstream_item=upstream_item, upstream_index=upstream_wedgenmum)
    else:
        constructWorkItems(nwedges, niters, nattribs, attribnames, metas, values, clone=False)      

nwedges = node.evalParm(\"wedgecount\")
nattribs = node.evalParm(\"nwedgeattribs\")

generate(nwedges,nattribs)  "	)
useregeneratestatic	[ 0	locks=0 ]	(	"off"	)
regeneratestatic	[ 0	locks=0 ]	(	"# Called when this node may need to regenerate existing work items
#
# self           -   A reference to the current pdg.Node instance
# item_holder    -   A pdg.WorkItemHolder for constructing and adding new work items
# existing_items -   The existing work items in the node
# upstream_items -   The list of work items in the node above, or empty list
# generation_type -   The type of generation, e.g. pdg.generationType.Static, Dynamic, or Regenerate"	)
addinternaldependencies	[ 0	locks=0 ]	(	"# Called when the node has generated work items so that dependencies can
# be added between work items in this node.
#
# self              -   A reference to the current pdg.Node instance
# dependency_holder -   A pdg.WorkItemHolder for adding pairs of items that should have a dependency
# internal_items    -   The list of items, either all static items or a group of dynamic items
# is_static         -   Boolean indicating if the items list contains static items
"	)
cooktask	[ 0	locks=0 ]	(	"# Called when an in process work item needs to cook. In process work items
# are created by passing the `inProcess=True` flag when constructing the item in
# the `Generate` callback
#
# self              -   A reference to the current pdg.Node instance
# work_item         -   The work item being cooked by this callback"	)
servicename	[ 0	locks=0 ]	(	""	)
sepparm3	[ 0	locks=0 ]	(	)
alwaysregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonregenerate	[ 0	locks=0 ]	(	"off"	)
dirtyonincomplete	[ 0	locks=0 ]	(	"off"	)
sepparm4	[ 0	locks=0 ]	(	)
requiresgeneratedinputs	[ 0	locks=0 ]	(	"off"	)
requiresscenefile	[ 0	locks=0 ]	(	"off"	)
pdgnodedeps	[ 0	locks=0 ]	(	1	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm5	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedep1	[ 0	locks=0 ]	(	""	)
processor4	[ 0	locks=0 ]	(	0	0	0	)
callbacks6	[ 0	locks=0 ]	(	0	0	0	0	0	)
wedgecount	[ 0	locks=0 ]	(	[ wedgecount	1 ] 	)
nwedgeattribs	[ 0	locks=0 ]	(	[ nwedgeattribs	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/custom_wedge_process_v3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/genericgenerator1.init"
Content-Type: text/plain

type = genericgenerator
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/genericgenerator1.def"
Content-Type: text/plain

comment ""
position -2.9501 -14.509
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/genericgenerator1.parm"
Content-Type: text/plain

{
version 0.8
processor_0	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_cachemode	[ 0	locks=0 ]	(	"0"	)
sequential	[ 0	locks=0 ]	(	"off"	)
copyinputs	[ 0	locks=0 ]	(	"off"	)
flattenindices	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
itemcount	[ 0	locks=0 ]	(	1	)
useindex	[ 0	locks=0 ]	(	"off"	)
index	[ 0	locks=0 ]	(	0	)
useframe	[ 0	locks=0 ]	(	"off"	)
frame	[ 0	locks=0 ]	(	0	)
usepriority	[ 0	locks=0 ]	(	"off"	)
priority	[ 0	locks=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
folder0	[ 0	locks=0 ]	(	0	0	)
usedelay	[ 0	locks=0 ]	(	"off"	)
delay	[ 0	locks=0 ]	(	1	)
pdg_command	[ 0	locks=0 ]	(	""	)
basecommand	[ 0	locks=0 ]	(	""	)
shellcommand	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
extraargs	[ 0	locks=0 ]	(	0	)
expectedoutputsfrom	[ 0	locks=0 ]	(	"0"	)
expectedoutputattr	[ 0	locks=0 ]	(	""	)
useexpectedoutputtag	[ 0	locks=0 ]	(	"off"	)
expectedoutputtag	[ 0	locks=0 ]	(	file	)
expectedoutputfiles	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm4	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedeps	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/genericgenerator1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/switch6.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/switch6.def"
Content-Type: text/plain

comment ""
position -2.9501 -17.509
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	genericgenerator1 0 1 "input1"
1 	custom_wedge_process_v3 0 1 "input2"
}
inputs
{
0 	genericgenerator1 0 1
1 	custom_wedge_process_v3 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/switch6.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/switch6.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0/switch6.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.order"
Content-Type: text/plain

4
output0
custom_wedge_process_v3
genericgenerator1
switch6

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.order"
Content-Type: text/plain

2
localscheduler
output0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.init"
Content-Type: text/plain

type = file
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -0.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.spareparmdef"
Content-Type: text/plain

    parm {
        name    "filemode"
        baseparm
        label   "File Mode"
        export  none
    }
    parm {
        name    "file"
        baseparm
        label   "Geometry File"
        export  all
    }
    parm {
        name    "reload"
        baseparm
        label   "Reload Geometry"
        export  none
    }
    parm {
        name    "objpattern"
        baseparm
        label   "Object Mask"
        export  none
    }
    parm {
        name    "geodatapath"
        baseparm
        label   "Geometry Data Path"
        export  none
    }
    parm {
        name    "missingframe"
        baseparm
        label   "Missing Frame"
        export  none
    }
    parm {
        name    "loadtype"
        baseparm
        label   "Load"
        export  none
    }
    parm {
        name    "packedviewedit"
        baseparm
        label   "Display Packed As"
        export  none
    }
    parm {
        name    "viewportlod"
        baseparm
        label   "Display As"
        export  none
    }
    parm {
        name    "packexpanded"
        baseparm
        label   "Pack Using Expanded/Absolute File Path"
        export  none
    }
    parm {
        name    "delayload"
        baseparm
        label   "Delay Load Geometry"
        export  none
    }
    parm {
        name    "mkpath"
        baseparm
        label   "Create Intermediate Directories"
        export  none
    }
    parm {
        name    "cachesize"
        baseparm
        label   "Cache Frames"
        export  none
    }
    parm {
        name    "prefetch"
        baseparm
        label   "Pre-fetch Geometry"
        export  none
    }
    parm {
        name    "f"
        baseparm
        label   "Frame Range"
        export  none
    }
    parm {
        name    "index"
        baseparm
        label   "Sequence Index"
        export  none
    }
    parm {
        name    "wrap"
        baseparm
        label   "Wrap Mode"
        export  none
    }
    parm {
        name    "retry"
        baseparm
        label   "Save/Load Retries"
        export  none
    }
    parm {
        name    "wedgeidx"
        label   "Wedge Index"
        type    integer
        default { [ "import pdg\nnode = hou.pwd()\n\nparent = node.parent()\n\nif parent.evalParm(\"domergewedges\"):\n    pattern_str = \"\"\n    pattern = 0\n    if parent.evalParm(\"mergewedges\") == 0:\n        pattern_str = '{}-{}'.format(0,\n                                 parent.evalParm(\"wedgecount\")) \n        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=False)\n    elif parent.evalParm(\"mergewedges\") == 1:\n        pattern_str = '{}-{}'.format(parent.evalParm(\"mergewedgeidxrangemin\"),\n                                 parent.evalParm(\"mergewedgeidxrangemax\"))\n        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=True)\n    elif parent.evalParm(\"mergewedges\") == 2:\n        pattern_str = parent.evalParm(\"mergespecificwedges\")        \n        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=True)\n        \n    return pattern[node.parm(\"ivalue\").evalAsInt()]\nreturn 0" python ] }
        range   { 0 10 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "ivalue"
        label   "Iteration"
        type    integer
        default { [ "detail(-1,\"ivalue\",0)" hscript-expr ] }
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.chn"
Content-Type: text/plain

{
    channel index {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FF-ch(\"f1\") }
    }
    channel wedgeidx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "import pdg
node = hou.pwd()

parent = node.parent()

if parent.evalParm(\"domergewedges\"):
    pattern_str = \"\"
    pattern = 0
    if parent.evalParm(\"mergewedges\") == 0:
        pattern_str = '{}-{}'.format(0,
                                 parent.evalParm(\"wedgecount\")) 
        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=False)
    elif parent.evalParm(\"mergewedges\") == 1:
        pattern_str = '{}-{}'.format(parent.evalParm(\"mergewedgeidxrangemin\"),
                                 parent.evalParm(\"mergewedgeidxrangemax\"))
        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=True)
    elif parent.evalParm(\"mergewedges\") == 2:
        pattern_str = parent.evalParm(\"mergespecificwedges\")        
        pattern = pdg.ValuePattern(pattern_str).intArray(inclusive=True)
        
    return pattern[node.parm(\"ivalue\").evalAsInt()]
return 0" language = python }
    }
    channel ivalue {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = detail(-1,\"ivalue\",0) }
    }
    channel reload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reload\") }
    }
    channel missingframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../missingframe\") }
    }
    channel loadtype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../loadtype\") }
    }
    channel packedviewedit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../packedviewedit\") }
    }
    channel packexpanded {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../packexpanded\") }
    }
    channel retry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../delayload\") }
    }
    channel delayload {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../delayload\") }
    }
    channel cachesize {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../cachesize\") }
    }
    channel prefetch {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../prefetch\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.parm"
Content-Type: text/plain

{
version 0.8
filemode	[ 0	locks=0 ]	(	"read"	)
file	[ 0	locks=0 ]	(	"`strreplace(chs(\"../sopoutput\"),chs(\"../wedgestr\"),\"w\" + chs(\"wedgeidx\"))`"	)
reload	[ 8	locks=0 ]	(	[ reload	0 ] 	)
objpattern	[ 0	locks=0 ]	(	*	)
geodatapath	[ 0	locks=0 ]	(	""	)
missingframe	[ 8	locks=0 ]	(	[ missingframe	0 ] 	)
loadtype	[ 0	locks=0 ]	(	[ loadtype	0 ] 	)
packedviewedit	[ 0	locks=0 ]	(	[ packedviewedit	0 ] 	)
viewportlod	[ 0	locks=0 ]	(	"box"	)
packexpanded	[ 0	locks=0 ]	(	[ packexpanded	1 ] 	)
delayload	[ 8	locks=0 ]	(	[ delayload	0 ] 	)
mkpath	[ 0	locks=0 ]	(	"on"	)
cachesize	[ 0	locks=0 ]	(	[ cachesize	0 ] 	)
prefetch	[ 0	locks=0 ]	(	[ prefetch	0 ] 	)
f	[ 0	locks=0 ]	(	1	24	)
index	[ 0	locks=0 ]	(	[ index	0 ] 	)
wrap	[ 0	locks=0 ]	(	"cycle"	)
retry	[ 0	locks=0 ]	(	[ retry	0 ] 	)
wedgeidx	[ 0	locks=0 ]	(	[ wedgeidx	0 ] 	)
ivalue	[ 0	locks=0 ]	(	[ ivalue	0 ] 	)
spare_input0	[ 0	locks=0 ]	(	../foreach_count1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/read_wedged_cache.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift2.init"
Content-Type: text/plain

type = timeshift
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -6.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switchif_wedged 2 1 "input1"
}
inputs
{
0 	switchif_wedged 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift2.chn"
Content-Type: text/plain

{
    channel time {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $T }
    }
    channel frange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FSTART }
    }
    channel frange2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FEND }
    }
    channel trange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $TSTART }
    }
    channel trange2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $TEND }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift2.parm"
Content-Type: text/plain

{
version 0.8
method	[ 0	locks=0 ]	(	"byframe"	)
frame	[ 0	locks=0 ]	(	1	)
integerframe	[ 0	locks=0 ]	(	"on"	)
time	[ 0	locks=0 ]	(	[ time	0 ] 	)
rangeclamp	[ 0	locks=0 ]	(	"none"	)
frange	[ 0	locks=0 ]	(	[ frange1	0 ] 	[ frange2	0 ] 	)
trange	[ 0	locks=0 ]	(	[ trange1	0 ] 	[ trange2	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeshift2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif1.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 4.85
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	IN 1 1 "input1"
2 	geo_filter 1 1 "input2"
}
inputs
{
0 	IN 0 1
1 	geo_filter 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif1.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../filtergeo\") > 0" }
    }
    channel expr2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif1.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	2	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
enable2	[ 0	locks=0 ]	(	"on"	)
type2	[ 0	locks=0 ]	(	"expr"	)
expr2	[ 0	locks=0 ]	(	[ expr2	1 ] 	)
attribtype2	[ 0	locks=0 ]	(	"all"	)
attribowner2	[ 0	locks=0 ]	(	"point"	)
attributes2	[ 0	locks=0 ]	(	""	)
attribvaltype2	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp2	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp2	[ 0	locks=0 ]	(	"equal"	)
attribval2	[ 0	locks=0 ]	(	0	)
attribsval2	[ 0	locks=0 ]	(	""	)
counttype2	[ 0	locks=0 ]	(	"points"	)
countgroup2	[ 0	locks=0 ]	(	""	)
countcomp2	[ 0	locks=0 ]	(	"equal"	)
countval2	[ 0	locks=0 ]	(	0	)
hasinputtype2	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switchif1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.init"
Content-Type: text/plain

type = subnet
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.5 5.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	IN 1 1 "input1"
}
inputs
{
0 	IN 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.parm"
Content-Type: text/plain

{
version 0.8
label1	[ 0	locks=0 ]	(	"Sub-Network Input #1"	)
label2	[ 0	locks=0 ]	(	"Sub-Network Input #2"	)
label3	[ 0	locks=0 ]	(	"Sub-Network Input #3"	)
label4	[ 0	locks=0 ]	(	"Sub-Network Input #4"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.inp"
Content-Type: text/plain

4
0 0 6.8941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
1 3 7.3941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
2 6 7.8941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
3 9 8.3941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.59991 4.7902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../../filtertype\")+3 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	"@`chs(\"../../pieceattrib\")`=*`pdgattrib(\"wedgeindex\", 0)`"	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.59991 2.7902
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	keep_only_selected_wedgeindex1 0 1 "input1"
2 	keep_only_selected_wedgeindex 0 1 "input2"
}
inputs
{
0 	keep_only_selected_wedgeindex1 0 1
1 	keep_only_selected_wedgeindex 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.spareparmdef"
Content-Type: text/plain

    parm {
        name    "mergecondition"
        baseparm
        label   "Use Second Input If"
        export  none
    }
    parm {
        name    "testinput"
        baseparm
        label   "Test Input"
        export  none
    }
    multiparm {
        name    "tests"
        label    "Number of Tests"
        baseparm
        default 1

        parm {
            name    "enable#"
            baseparm
            label   "enable#"
            nolabel
            export  none
        }
        parm {
            name    "type#"
            baseparm
            label   "Test Type"
            export  none
        }
        parm {
            name    "expr#"
            baseparm
            label   "Enable"
            export  none
        }
        parm {
            name    "attribtype#"
            baseparm
            label   "Enable When"
            export  none
        }
        parm {
            name    "attribowner#"
            baseparm
            label   "Class"
            export  none
        }
        parm {
            name    "attributes#"
            baseparm
            label   "Attributes"
            export  none
        }
        parm {
            name    "attribvaltype#"
            baseparm
            label   "Of Type"
            export  none
        }
        parm {
            name    "attribfloatcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "attribstringcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "attribval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "attribsval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "counttype#"
            baseparm
            label   "Enable When"
            export  none
        }
        parm {
            name    "countgroup#"
            baseparm
            label   "In Group"
            export  none
        }
        parm {
            name    "countcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "countval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "hasinputtype#"
            baseparm
            label   "Enable When"
            export  none
        }
    }

    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "primattribtype(-1,chs(\"../../pieceattrib\")) == 2" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
spare_input0	[ 0	locks=0 ]	(	../../IN	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex1.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.5 3.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex1.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../../filtertype\")+3 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	"@`chs(\"../../pieceattrib\")`=`pdgattrib(\"wedgeindex\", 0)`"	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_wedgeindex1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -0.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switchif1 2 1 "input1"
}
inputs
{
0 	switchif1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.5 4.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../../filtertype\")+3 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	@`chs(\"../../pieceattrib\")`=*`$F`	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.5 2.85
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	keep_only_selected_frame1 0 1 "input1"
2 	keep_only_selected_frame 0 1 "input2"
}
inputs
{
0 	keep_only_selected_frame1 0 1
1 	keep_only_selected_frame 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.spareparmdef"
Content-Type: text/plain

    parm {
        name    "mergecondition"
        baseparm
        label   "Use Second Input If"
        export  none
    }
    parm {
        name    "testinput"
        baseparm
        label   "Test Input"
        export  none
    }
    multiparm {
        name    "tests"
        label    "Number of Tests"
        baseparm
        default 1

        parm {
            name    "enable#"
            baseparm
            label   "enable#"
            nolabel
            export  none
        }
        parm {
            name    "type#"
            baseparm
            label   "Test Type"
            export  none
        }
        parm {
            name    "expr#"
            baseparm
            label   "Enable"
            export  none
        }
        parm {
            name    "attribtype#"
            baseparm
            label   "Enable When"
            export  none
        }
        parm {
            name    "attribowner#"
            baseparm
            label   "Class"
            export  none
        }
        parm {
            name    "attributes#"
            baseparm
            label   "Attributes"
            export  none
        }
        parm {
            name    "attribvaltype#"
            baseparm
            label   "Of Type"
            export  none
        }
        parm {
            name    "attribfloatcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "attribstringcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "attribval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "attribsval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "counttype#"
            baseparm
            label   "Enable When"
            export  none
        }
        parm {
            name    "countgroup#"
            baseparm
            label   "In Group"
            export  none
        }
        parm {
            name    "countcomp#"
            baseparm
            label   "Is"
            export  none
        }
        parm {
            name    "countval#"
            baseparm
            label   "Value"
            export  none
        }
        parm {
            name    "hasinputtype#"
            baseparm
            label   "Enable When"
            export  none
        }
    }

    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "primattribtype(-1,chs(\"../../pieceattrib\")) == 2" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
spare_input0	[ 0	locks=0 ]	(	../../IN	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame1.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.59991 3.9098
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame1.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../../filtertype\")+3 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	@`chs(\"../../pieceattrib\")`=`$F`	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/keep_only_selected_frame1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif1.init"
Content-Type: text/plain

type = switchif
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 0.85
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switchif3 1 1 "input1"
1 	switchif2 1 1 "input2"
}
inputs
{
0 	switchif3 0 1
1 	switchif2 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif1.chn"
Content-Type: text/plain

{
    channel expr1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../../filtergeo\") + 1" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif1.parm"
Content-Type: text/plain

{
version 0.8
mergecondition	[ 0	locks=0 ]	(	"all"	)
testinput	[ 0	locks=0 ]	(	"first"	)
tests	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
type1	[ 0	locks=0 ]	(	"expr"	)
expr1	[ 0	locks=0 ]	(	[ expr1	1 ] 	)
attribtype1	[ 0	locks=0 ]	(	"all"	)
attribowner1	[ 0	locks=0 ]	(	"point"	)
attributes1	[ 0	locks=0 ]	(	""	)
attribvaltype1	[ 0	locks=0 ]	(	"flt"	)
attribfloatcomp1	[ 0	locks=0 ]	(	"equal"	)
attribstringcomp1	[ 0	locks=0 ]	(	"equal"	)
attribval1	[ 0	locks=0 ]	(	0	)
attribsval1	[ 0	locks=0 ]	(	""	)
counttype1	[ 0	locks=0 ]	(	"points"	)
countgroup1	[ 0	locks=0 ]	(	""	)
countcomp1	[ 0	locks=0 ]	(	"equal"	)
countval1	[ 0	locks=0 ]	(	0	)
hasinputtype1	[ 0	locks=0 ]	(	"wired"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter/switchif1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.order"
Content-Type: text/plain

8
keep_only_selected_wedgeindex
switchif2
keep_only_selected_wedgeindex1
output0
keep_only_selected_frame
switchif3
keep_only_selected_frame1
switchif1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/geo_filter.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

27
OUT
IN
foreach_wedge
foreach_begin1
foreach_count1
merge1
switchif_wedged
topnet_cache
render
foreach_frame
foreach_begin2
foreach_count2
switchif_input
timeshift1
switchif_collect_frames
OUT_CACHE
attribdelete1
attribcast1
groupdelete1
read_back
error1
switchif_static_vs_range
topnet_display
read_wedged_cache
timeshift2
switchif1
geo_filter

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
