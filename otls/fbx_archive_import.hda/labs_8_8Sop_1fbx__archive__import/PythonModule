import hou, os


def ImportFBX(kwargs):
        node = kwargs["node"]
        
        FileOnDisk = node.parm("sFBXFile").evalAsString()
        
        if os.path.isfile(FileOnDisk):

                MaterialMode = hou.fbxMaterialMode.PrincipledShaders
                ObjNet = node.node("objnet1")
                ObjNet.deleteItems(ObjNet.children(), disable_safety_checks=False)

                ImportAnimation = False if node.parm("bImportAnimation").evalAsInt() == 0 else True
                ImportMaterials = False if node.parm("bImportMaterials").evalAsInt() == 0 else True
                ConvertToYUp = False if node.parm("bConvertYUp").evalAsInt() == 0 else True
                UnlockGeometry = False if node.parm("bUnlockGeo").evalAsInt() == 0 else True
                EmbeddedImport = False if node.parm("bEmbeddedImport").evalAsInt() == 0 else True

                if hou.node(node.parm("sImportPath").evalAsString()) != None:
                        hou.node(node.parm("sImportPath").evalAsString()).destroy(disable_safety_checks=False)

                FBXFiles = hou.hipFile.importFBX(FileOnDisk, suppress_save_prompt=True, merge_into_scene=True, import_cameras=False, import_joints_and_skin=False, import_geometry=True, import_lights=False, import_animation=ImportAnimation, import_materials=ImportMaterials, resample_animation=False, resample_interval=1.0, override_framerate=False,framerate=-1, hide_joints_attached_to_skin=True, convert_joints_to_zyx_rotation_order=False, material_mode=MaterialMode, compatibility_mode=hou.fbxCompatibilityMode.Maya, single_precision_vertex_caches=False, triangulate_nurbs=False, triangulate_patches=False, import_global_ambient_light=False, import_blend_deformers_as_blend_sops=False, segment_scale_already_baked_in=True, convert_file_paths_to_relative=True, unlock_geometry=UnlockGeometry, unlock_deformations=False, import_nulls_as_subnets=False, import_into_object_subnet=True, convert_into_y_up_coordinate_system=ConvertToYUp, create_sibling_bones=True, override_scene_frame_range=False)
                
                  
                if EmbeddedImport:
                        GeneratedSubnet = FBXFiles[0].copyTo(ObjNet)
                        FBXFiles[0].destroy(disable_safety_checks=False)
                        
                else:
                        GeneratedSubnet = FBXFiles[0]

                node.parm("sImportPath").set(GeneratedSubnet.path())


                MaterialAssignment = GeneratedSubnet.children()

                geos = [x for x in GeneratedSubnet.children() if x.type().name() == "geo"]
                for geo in geos:
                        matassignmentnodes = [x for x in geo.children() if x.type().name() == "material"]
                        for matassignment in matassignmentnodes:
                                numassignments = matassignment.parm("num_materials").evalAsInt()

                                for x in range(numassignments):
                                        Val = matassignment.parm("shop_materialpath%s" % (x+1)).evalAsString().split("/materials/")
                                        matassignment.parm("shop_materialpath%s" % (x+1)).set("../../materials/"+Val[-1])




                if EmbeddedImport:
                        node.setCurrent(True, clear_all_selected=False)
                        node.node("object_merge1").cook(force=True)
                        

        else:
                raise hou.NodeError("The file %s does not exist." % FileOnDisk)

                